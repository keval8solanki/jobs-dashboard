{"version":3,"sources":["Assets/Icons/loader.svg","Assets/Icons/close.svg","Assets/Icons/location.svg","Assets/Icons/fistbump-logo-white.svg","Assets/Icons/dashboard.svg","Assets/Icons/profile.svg","Assets/Icons/job-dashboard.svg","Assets/Icons/candidate.svg","Assets/Icons/exp.svg","Assets/Icons/salary.svg","Assets/Icons/job.svg","Assets/Icons/people.svg","Assets/Icons/fistbump-logo.svg","Assets/Icons/user.svg","Assets/Icons/password.svg","Common/Styles/StyledComponents.js","Pages/CandidatePage.js","ActionTypes/ActionTypes.js","Actions/AuthActions.js","Components/NavBar.js","Actions/CandidateActions.js","Actions/JobsActions.js","Components/SideBar.js","Endpoint.js","Pages/PostJob.js","Components/SearchComponent.js","Components/TableComponent.js","Components/DetailsTable.js","Pages/JobsListPage.js","Common/Functions/helperFunctions.js","Components/InputComponent.js","Components/JobCard.js","Pages/JobDetailsPage.js","Pages/DashboardPage.js","Pages/CandidateDetailsPage.js","Pages/ApplicantDetailsPage.js","Pages/CandidatesListPage.js","Pages/AppliedJobList.js","Pages/EditJobPage.js","Pages/SignInPage.js","Pages/ProfilePage.js","App.js","serviceWorker.js","Reducers/JobsReducer.js","Reducers/CandidatesReducer.js","Reducers/AuthReducer.js","Reducers/RootReducer.js","index.js"],"names":["module","exports","statuscolors","Card","styled","div","Title","p","StyledButton","css","CardTitle","FlexDiv","Container","Status","NavLink","props","bgColor","color","CandidatePage","jobTypes","candidateTypes","authTypes","login","payload","type","logout","NavBar","useDispatch","Header","StyledNavLink","to","BrandLogo","src","CompanyLogo","NavControls","button","img","header","saveCurrentCandidate","saveAllCandidates","searchCandidates","changeStatus","status","saveCurrentJob","activeStyles","backgroundColor","SideBar","useState","page","setPage","SidebarContainer","Routes","activeStyle","onClick","RouteIcon","DashboardSVG","RouteText","JobSVG","CandidateSVG","ProfileSVG","API_URI","toast","configure","PostJob","isJobPosted","setIsJobPosted","title","setTitle","salary","setSalary","description","setDescription","company","setCompany","aboutCompany","setAboutCompany","location","setLocation","experience","setExperience","eligibilitiesVal","setEligibilitiesVal","eligibilities","setEligibilities","responsibilitiesVal","setResponsibilitiesVal","responsibilities","setResponsibilities","isInputValid","length","postHandler","a","data","eligibility","console","log","axios","post","success","position","POSITION","BOTTOM_RIGHT","error","renderList","setCurrState","list","map","item","Element","key","ElementP","Icon","filter","el","deleteItemHandler","CloseSVG","EmptyMessage","addHandler","currState","TEMP","push","Form","MainTitle","ControlCard","Btn","document","getElementById","focus","disabled","Section","InputContainer","Label","Input","id","value","onChange","e","target","Textarea","InputWithButton","onSubmit","preventDefault","CustomInput","AddButton","Ul","label","InputStyles","textarea","input","form","ul","li","SearchComponent","setValue","val","setVal","SearchContainer","SearchInput","placeholder","SearchBtn","DetailsTable","JobsListPage","dispatch","undefined","searchVal","setSearchVal","useEffect","get","then","catch","err","useSelector","state","jobsData","jobs","filteredJobs","currentData","getDataHandler","URI","UnorderedList","HeadingElement","date","Date","createdAt","toDateString","_id","Loader","CustomCard","List","StyledNavlink","statusColor","span","h1","JobDetailsPage","activeTab","setActiveTab","isJobDeleted","setIsJobDeleted","job","useLayoutEffect","user","candidateData","candidates","filteredcandidates","match","params","editURL","deleteJobHandler","delete","currentCandidate","find","renderTable","name","number","renderItemList","Div","EditNav","EditBtn","DeleteBtn","Tab","FlexHeader","Heading","Location","LocationSVG","renderTab","ButtonContainer","RemoveSpacing","Company","DashboardPage","info","setInfo","CardContainer","StyledLink","InfoCard","InfoTitle","InfoData","jobsCount","usersCount","PeopleSVG","NoSpacing","ApplicantDetailsPage","setIsStatusChanged","candidate","useHistory","changeStatusHandler","URL","patch","style","justifyContent","marginRight","Content","skills","education","email","DownloadLink","href","StyledBtn","CandidatesListPage","AppliedJobList","appliedJobs","filteredAppliedJobs","EditJobPage","isUpdated","setIsUpdated","updateHandler","put","SignInPage","username","setUsername","password","setPassword","isAuthenticated","authData","loginHandler","SiginContainer","SigninSubContainer","SigninCard","SiginTitle","SigninForm","User","Password","Login","h2","h5","ProfilePage","LogoutBtn","margin","marginBottom","App","className","MainDiv","RightSideBar","path","exact","component","Boolean","window","hostname","initialState","JobsReducer","toLowerCase","filterTemp","includes","searchAppliedJob","filterAppliedTemp","CandidatesReducer","AuthReducer","RootReducer","combineReducers","CandidateReducer","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.39d8dd32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.c1cca854.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.1b3c0f53.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.9f46df7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/fistbump-logo-white.0296bf0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.a07674e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.ae539f4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/job-dashboard.021b9f65.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.98741c4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/exp.48804530.svg\";","module.exports = __webpack_public_path__ + \"static/media/salary.cb6077d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.c62b1c08.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.7999010a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fistbump-logo.ef76c49a.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.393b4839.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.1ea93987.svg\";","import styled, { css } from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const themeColor = '#2B96DC'\r\nexport const highlightColor = '#40CD8A'\r\n\r\nexport const statuscolors = {\r\n    pending: '#FFB223',\r\n    pendingBg: '#FFF5C4',\r\n\r\n    success: '#3EB93B',\r\n    successBg: '#E9FAE8',\r\n\r\n    failed: '#F1373A',\r\n    failedBg: '#FFE1DF',\r\n\r\n    review: '#0B7EE8',\r\n    reviewBg: '#E6F4FD'\r\n\r\n}\r\n\r\n\r\n// export const Container = styled.div`\r\n//     background-image: url(${DripImage});\r\n//     height: 80vh;\r\n//     background-repeat: no-repeat;\r\n//     background-position: top;\r\n// `\r\n\r\n\r\n\r\nexport const Card = styled.div`\r\n    background-color: white;\r\n    padding: 20px;\r\n    text-align: left;\r\n    box-shadow: 2px 2px 8px 3px #0000001c;\r\n    margin: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Grid = styled.div`\r\n    background-color: #276eb012;\r\n    display: grid;\r\n\tgap: 0rem;\r\n\trow-gap: 0rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n    @media (max-width: 400px) {\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    }\r\n`\r\n\r\nexport const Title = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n   \r\n`\r\n\r\nexport const StyledButton = css`\r\n    background-color: ${themeColor};\r\n    border: 1px solid ${themeColor};\r\n    padding: 10px;\r\n    width: 150px;\r\n    color: white;\r\n    font-weight: bold;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor};\r\n    }\r\n`\r\n\r\nexport const CardTitle = styled.p`\r\n    font-weight: bold;\r\n    margin: 0px 0px 20px 0px;\r\n    padding: 0px;\r\n    font-size: 1.2em;\r\n    color: grey;\r\n`\r\n\r\nexport const FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nexport const CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nexport const StyledNavlink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    text-decoration: none;\r\n\r\n    } \r\n    &:active{\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nexport const Status = styled.p`\r\n    width: fit-content;\r\n    padding: 3px 10px;\r\n    \r\n    border-radius: 50px;\r\n    font-size: 0.9em;\r\n    background-color: ${props => props && props.bgColor};\r\n    margin: 0px;\r\n    color: ${props => props && props.color};\r\n`","import React from 'react'\r\nimport { Card } from '../Common/Styles/StyledComponents'\r\n\r\nfunction CandidatePage() {\r\n    return (\r\n        <div>\r\n            <Card>\r\n                CandidatePage\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CandidatePage\r\n","export const jobTypes = {\r\n    SAVE_CURRENT_JOB: 'SAVE_CURRENT_JOB',\r\n    SAVE_ALL_JOBS: 'SAVE_ALL_JOBS',\r\n    SAVE_APPLIED_JOBS: 'SAVE_APPLIED_JOBS',\r\n    DELETE_CURRENT_JOB: 'DELETE_CURRENT_JOB',\r\n    FILTER_SEARCH_JOBS: 'FILTER_SEARCH_JOBS',\r\n    FILTER_APPLIED_JOBS: 'FILTER_APPLIED_JOBS',\r\n}\r\n\r\nexport const candidateTypes = {\r\n    SAVE_CURRENT_CANDIDATE: 'SAVE_CURRENT_CANDIDATE',\r\n    SAVE_ALL_CANDIDATES: 'SAVE_ALL_CANDIDATES',\r\n    DELETE_CURRENT_CANDIDATE: 'DELETE_CURRENT_CANDIDATE',\r\n    FILTER_SEARCH_CANDITATE: 'FILTER_SEARCH_CANDITATE',\r\n    CHANGE_STATUS: 'CHANGE_STATUS'\r\n}\r\n\r\nexport const authTypes = {\r\n    LOG_IN: 'LOG_IN',\r\n    LOG_OUT: 'LOG_OUT'\r\n}","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const login = (payload) => {\r\n    return {\r\n        type: authTypes.LOG_IN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const logout = (payload) => {\r\n    return {\r\n        type: authTypes.LOG_OUT,\r\n        payload\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../Actions/AuthActions'\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo-white.svg'\r\n\r\nconst activeStyles = {\r\n    backgroundColor: '#00000029'\r\n}\r\n\r\n\r\n\r\n\r\nfunction NavBar() {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout(false))\r\n    }\r\n\r\n    return (\r\n        <Header>\r\n            <StyledNavLink to=\"/\"><BrandLogo src={CompanyLogo} /></StyledNavLink>\r\n            <NavControls>\r\n                {/* <Logout onClick={logoutHandler}>Logout</Logout> */}\r\n                {/* <StyledNavLink activeStyle={activeStyles} to=\"/profile\">Logout</StyledNavLink> */}\r\n            </NavControls>\r\n        </Header>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\nconst Logout = styled.button`\r\n        color: white;\r\n    background: #832525;\r\n    border-style: none;\r\n    padding: 0px 21px;\r\n    font-weight: bold;\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Styled Components\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 80px;\r\n`\r\n\r\nconst Header = styled.header`\r\nposition: sticky;\r\ntop: 0;\r\n    color: white;\r\n    background-color: ${themeColor};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* padding: 10px 20px; */\r\n    /* box-shadow: 0px 5px 20px 1px #00000017; */\r\n`\r\n\r\nconst NavControls = styled.div`\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: fit-content;\r\n`\r\n\r\nconst Logo = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\npadding: 10px 20px;\r\n    color: white;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    &:hover{\r\n        background-color: #00000029;\r\n        text-decoration: none;\r\n        color: white;\r\n    }\r\n    &:active{\r\n        text-decoration: none;\r\n        color: white;\r\n    }\r\n`","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentCandidate = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_CURRENT_CANDIDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAllCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_ALL_CANDIDATES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.FILTER_SEARCH_CANDITATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeStatus = (status) => {\r\n    let payload = ''\r\n    if (status === 0) {\r\n        payload = 'Applied'\r\n    } else if (status === 1) {\r\n        payload = 'Called For Interview'\r\n    } else if (status === 2) {\r\n        payload = 'Selected'\r\n    } else if (status === 3) {\r\n        payload = 'Rejected'\r\n    }\r\n    return {\r\n        type: candidateTypes.CHANGE_STATUS,\r\n        payload\r\n    }\r\n}","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentJob = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_CURRENT_JOB,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const saveAllJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_ALL_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_SEARCH_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink, useLocation, useHistory, Redirect } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveAllCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport { saveAllJobs, saveCurrentJob } from '../Actions/JobsActions'\r\n\r\nimport DashboardSVG from '../Assets/Icons/dashboard.svg'\r\nimport ProfileSVG from '../Assets/Icons/profile.svg'\r\nimport JobSVG from '../Assets/Icons/job-dashboard.svg'\r\nimport CandidateSVG from '../Assets/Icons/candidate.svg'\r\n\r\n\r\nconst activeStyles = {\r\n    backgroundColor: '#f1f1f1'\r\n}\r\n\r\nfunction SideBar() {\r\n    const dispatch = useDispatch()\r\n    const [page, setPage] = useState(1)\r\n\r\n\r\n\r\n    return (\r\n        <SidebarContainer>\r\n\r\n\r\n            <Routes activeStyle={page === 1 ? activeStyles : {}} onClick={() => setPage(1)} to='/'>\r\n                <RouteIcon src={DashboardSVG} />\r\n                <RouteText>Dashboard</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 2 ? activeStyles : {}} onClick={() => setPage(2)} to='/jobs'>\r\n                <RouteIcon src={JobSVG} />\r\n                <RouteText>Jobs</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 3 ? activeStyles : {}} onClick={() => setPage(3)} to='/candidates'>\r\n                <RouteIcon src={CandidateSVG} />\r\n                <RouteText>Candidates</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 4 ? activeStyles : {}} onClick={() => setPage(4)} to='/profile'>\r\n                <RouteIcon src={ProfileSVG} />\r\n                <RouteText>Profile</RouteText>\r\n            </Routes>\r\n\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n\r\nconst SidebarContainer = styled.div`\r\n    background-color: white;\r\n    width: 15%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst RouteContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst RouteIcon = styled.img`\r\n    margin-right: 10px;\r\n`\r\nconst RouteText = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    \r\n`\r\n\r\nconst Routes = styled(NavLink)`\r\n    display: flex;\r\n    text-decoration: none;\r\n    color: grey;\r\n    font-weight: bold;\r\n    text-align: left;\r\n    padding: 10px 20px;\r\n    &:hover{\r\n        \r\n        text-decoration: none;\r\n        background-color: white;\r\n    }\r\n\r\n    &:active{\r\n        text-decoration: none;\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n`","export const API_URI = 'https://jobs-webapi.herokuapp.com/'\r\n// export const API_URI = 'http://localhost:8080/'\r\nexport const CREATE = 'create'","import React, { useState } from 'react'\r\nimport { Card, Title, CardTitle, Container, statuscolors, themeColor } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Redirect } from 'react-router-dom'\r\ntoast.configure()\r\n\r\n\r\n/*\r\ntitle text\r\ndescription textarea\r\nsalary text\r\n\r\nexperience text\r\nresponsibilities array\r\neligibility array\r\n\r\ncompany text\r\naboutCompany text\r\nlocation text\r\n\r\n*/\r\n\r\n\r\n\r\nfunction PostJob() {\r\n\r\n    const [isJobPosted, setIsJobPosted] = useState(false)\r\n\r\n    const [title, setTitle] = useState()\r\n    const [salary, setSalary] = useState()\r\n    const [description, setDescription] = useState()\r\n\r\n    const [company, setCompany] = useState()\r\n    const [aboutCompany, setAboutCompany] = useState()\r\n    const [location, setLocation] = useState()\r\n\r\n    const [experience, setExperience] = useState()\r\n\r\n    const [eligibilitiesVal, setEligibilitiesVal] = useState()\r\n    const [eligibilities, setEligibilities] = useState([])\r\n\r\n    const [responsibilitiesVal, setResponsibilitiesVal] = useState()\r\n    const [responsibilities, setResponsibilities] = useState([])\r\n\r\n    const isInputValid = title && description && company && aboutCompany && location && experience && eligibilities.length > 0 && responsibilities.length > 0\r\n\r\n\r\n    const resetHandler = () => {\r\n        setTitle('')\r\n        setSalary('')\r\n        setDescription('')\r\n        setCompany('')\r\n        setLocation('')\r\n        setAboutCompany('')\r\n        setExperience('')\r\n        setEligibilities([])\r\n        setEligibilitiesVal('')\r\n        setResponsibilities([])\r\n        setEligibilitiesVal('')\r\n        document.getElementById('title').focus()\r\n    }\r\n\r\n    const postHandler = async () => {\r\n        const data = {\r\n            title,\r\n            salary: salary ? salary : 'Not disclosed',\r\n            description,\r\n            company,\r\n            aboutCompany,\r\n            location,\r\n            experience,\r\n            eligibility: eligibilities,\r\n            responsibilities\r\n        }\r\n        console.log(data)\r\n        try {\r\n            const response = await axios.post(`${API_URI}create`, data)\r\n            setIsJobPosted(true)\r\n            toast.success('Job Posted succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error('Error in posting job', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const deleteItemHandler = (data, item, setCurrState) => {\r\n        const FilteredData = data.filter(el => el !== item)\r\n        setCurrState(FilteredData)\r\n    }\r\n\r\n    const renderList = (data, setCurrState) => {\r\n        const list = data.map(item => {\r\n            return <Element key={item}>\r\n                <ElementP>{item}</ElementP>\r\n                <Icon onClick={() => deleteItemHandler(data, item, setCurrState)} src={CloseSVG} />\r\n            </Element>\r\n        })\r\n\r\n        return list.length > 0 ? list : <EmptyMessage>Empty</EmptyMessage>\r\n    }\r\n\r\n    const addHandler = (currState, setCurrState, item) => {\r\n        const TEMP = [...currState]\r\n        TEMP.push(item)\r\n        setCurrState(TEMP)\r\n        setEligibilitiesVal('')\r\n        setResponsibilitiesVal('')\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Form>\r\n\r\n                <MainTitle>Post Job</MainTitle>\r\n                <ControlCard>\r\n                    <CardTitle>Controls</CardTitle>\r\n                    <div>\r\n                        <Btn color={statuscolors.failed} onClick={resetHandler}>Reset</Btn>\r\n                        <Btn color={statuscolors.success} disabled={!isInputValid} onClick={postHandler}>Post</Btn>\r\n                    </div>\r\n                </ControlCard>\r\n                {/* <InfoCardContainer> */}\r\n                <Card>\r\n                    <Section>\r\n                        <CardTitle>Job Details</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Job Title</Label>\r\n                            <Input id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Salary</Label>\r\n                            <Input value={salary} onChange={(e) => setSalary(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Description</Label>\r\n                            <Textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <CardTitle>Company Details</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Name</Label>\r\n                            <Input value={company} onChange={(e) => setCompany(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Location</Label>\r\n                            <Input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>About</Label>\r\n                            <Textarea value={aboutCompany} onChange={(e) => setAboutCompany(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <CardTitle>Requirements</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Experience</Label>\r\n                            <Input value={experience} onChange={(e) => setExperience(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Minimum qualifications</Label>\r\n                            <InputWithButton onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                                addHandler(eligibilities, setEligibilities, eligibilitiesVal)\r\n                            }}\r\n                            >\r\n                                <CustomInput value={eligibilitiesVal} onChange={(e) => setEligibilitiesVal(e.target.value)} type=\"text\" />\r\n                                <AddButton >Add</AddButton>\r\n                            </InputWithButton>\r\n                            <Ul>\r\n                                {renderList(eligibilities, setEligibilities)}\r\n                            </Ul>\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Responsibilities</Label>\r\n                            <InputWithButton onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                                addHandler(responsibilities, setResponsibilities, responsibilitiesVal)\r\n                            }}>\r\n                                <CustomInput value={responsibilitiesVal} onChange={(e) => setResponsibilitiesVal(e.target.value)} type=\"text\" />\r\n                                <AddButton>Add</AddButton>\r\n                            </InputWithButton>\r\n                            <Ul>\r\n\r\n                                {renderList(responsibilities, setResponsibilities)}\r\n\r\n                            </Ul>\r\n\r\n                        </InputContainer>\r\n                    </Section>\r\n                </Card>\r\n                {/* <RequirementCard>\r\n                        <CardTitle>Eligibility</CardTitle>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n                        <CustomLabel>Responsibilities</CustomLabel>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n                    </RequirementCard> */}\r\n                {/* </InfoCardContainer> */}\r\n\r\n            </Form>\r\n            {isJobPosted && <Redirect to=\"/jobs\" />}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PostJob\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n\r\n        font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: stretch;\r\n    align-items: center;\r\n    \r\n`\r\n\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    border: 1px solid ${themeColor};\r\n    background-color: ${themeColor};\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor}\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n    flex: 1;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    border:1px dashed ${statuscolors.reviewBg};   \r\n    padding: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${themeColor};\r\n    color: ${themeColor};\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n//Changes\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`\r\n\r\n\r\n\r\n//added\r\nconst Section = styled.div`\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst EmptyMessage = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed}\r\n`","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { searchJobs } from '../Actions/JobsActions'\r\nimport { searchCandidates } from '../Actions/CandidateActions'\r\n\r\nfunction SearchComponent({ setValue }) {\r\n\r\n    const [val, setVal] = useState()\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setValue(val)\r\n\r\n    }\r\n    return (\r\n        <SearchContainer onSubmit={searchHandler}>\r\n            <SearchInput value={val} onChange={(e) => setVal(e.target.value)} type=\"text\" placeholder=\"Search\" />\r\n            <SearchBtn>Search</SearchBtn>\r\n        </SearchContainer>\r\n    )\r\n}\r\n\r\nexport default SearchComponent\r\n\r\nconst SearchContainer = styled.form`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n`\r\nconst SearchInput = styled.input`\r\n    flex: 1;\r\n    border: 1px solid #cecece;\r\n    padding: 6px 12px;\r\n     &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst SearchBtn = styled.button`\r\n    border-style: none;\r\n    padding: 5px 11px;\r\n    background-color: #276eb0;\r\n    border: 1px solid #276eb0;\r\n    color: white;\r\n    transition: all 0.2s;\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: #276eb0;\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction TableComponent({ data, type, saveCurrent }) {\r\n    const dispatch = useDispatch()\r\n    console.log(data)\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        if (type === 'job') {\r\n            const URI = `${API_URI}job/${id}`\r\n            try {\r\n                console.log('running')\r\n                const { data } = await axios.get(URI)\r\n                dispatch(saveCurrent(data))\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else if (type === 'candidate') {\r\n            console.log(type)\r\n\r\n\r\n            dispatch(saveCurrent(data))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const renderList = () => {\r\n        if (data) {\r\n            return data.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n\r\n                return <StyledNavlink key={item._id} to={type === 'job' ? `/job/${item._id}` : `/candidate/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{type === 'job' ? item.title : item.name}</Element>\r\n                        <Element>{type === 'job' ? item.company : item.number}</Element>\r\n                        <Element>{type === 'job' ? item.location : item.jobs[0].status}</Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {renderList()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableComponent\r\n\r\n\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { saveAllJobs } from '../Actions/JobsActions'\r\nimport { saveAllCandidates } from '../Actions/CandidateActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\n\r\n\r\nfunction DetailsTable({ data }) {\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n\r\n    const allData = jobs.len\r\n    console.log(jobs)\r\n    console.log(candidates)\r\n\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState()\r\n\r\n\r\n\r\n\r\n\r\n    // console.log(type)\r\n    // const allData = type === 'job' ? jobs : candidates\r\n\r\n    // console.log(allData)\r\n    // const filteredData = type === 'job' ? filteredJobs : filteredcandidates\r\n    // const currentData = searchVal !== undefined ? filteredData : allData\r\n\r\n    // console.log(currentData)\r\n\r\n    return (\r\n        <CustomCard>\r\n            {/* <SearchComponent setValue={setSearchVal} />\r\n            {filteredData && filteredData.length === 0 ? <p>No Result found for {searchVal}.</p> : <TableComponent data={currentData} />} */}\r\n            {/* {filteredData && filteredData.length === 0 ? <p>No Result found for {searchVal}.</p> : <TableComponent data={currentData} />} */}\r\n        </CustomCard>\r\n    )\r\n}\r\n\r\nexport default DetailsTable\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title, FlexDiv, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveAllJobs, searchJobs, saveCurrentJob } from '../Actions/JobsActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport DetailsTable from '../Components/DetailsTable'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\n\r\nfunction JobsListPage() {\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState(undefined)\r\n    useEffect(() => {\r\n\r\n        axios.get(API_URI)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllJobs(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchJobs(searchVal))\r\n        }\r\n    }, [searchVal])\r\n\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n    const currentData = searchVal === undefined ? jobs : filteredJobs\r\n\r\n    const getDataHandler = async (id) => {\r\n        const URI = `${API_URI}job/${id}`\r\n        try {\r\n            console.log('running')\r\n            const { data } = await axios.get(URI)\r\n            dispatch(saveCurrentJob(data))\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            return currentData.map(item => {\r\n                const date = new Date(item.createdAt).toDateString()\r\n                return <StyledNavlink key={item._id} to={`/job/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.title}</Element>\r\n                        <Element>{item.company}</Element>\r\n                        <Element>{item.location}</Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        } else {\r\n            return <img src={Loader} />\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredJobs && filteredJobs.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Job Title</HeadingElement>\r\n                <HeadingElement>Company</HeadingElement>\r\n                <HeadingElement>Location</HeadingElement>\r\n                <HeadingElement>Posted on</HeadingElement>\r\n            </List>\r\n\r\n            {renderItemList()}\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>Jobs List</Title>\r\n                <PostJob to=\"/postjob\">Post New Job</PostJob>\r\n            </FlexDiv>\r\n\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                {renderTable()}\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default JobsListPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nconst PostJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`\r\n\r\nconst UnorderedList = styled.ul`\r\n    \r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`","import { statuscolors } from \"../Styles/StyledComponents\"\r\n\r\n\r\nexport const statusColor = (status) => {\r\n    if (status === 'Selected') {\r\n        return { color: statuscolors.success, bgColor: statuscolors.successBg }\r\n    } else if (status === 'Called For Interview') {\r\n        return { color: statuscolors.review, bgColor: statuscolors.reviewBg }\r\n    } else if (status === 'Applied') {\r\n        return { color: statuscolors.pending, bgColor: statuscolors.pendingBg }\r\n    } else if (status === 'Rejected') {\r\n        return { color: statuscolors.failed, bgColor: statuscolors.failedBg }\r\n    }\r\n}\r\n\r\nexport const daysAgoCalculator = (date) => {\r\n    const secsInDay = 86400000\r\n    let currentDate = new Date()\r\n    const remainingSecs = currentDate - date\r\n    const days = remainingSecs / secsInDay\r\n    return Math.floor(days)\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nfunction InputComponent({ label, type, onChange, value }) {\r\n    return (\r\n        <InputContainer>\r\n            <Label>{label}</Label>\r\n\r\n            {\r\n                type === 'file' ? <Input required onChange={(e) => onChange(e.target.files[0])} type={type}></Input> :\r\n                    <Input required value={value} onChange={(e) => onChange(e.target.value)} type={type}></Input>\r\n\r\n            }\r\n        </InputContainer>\r\n    )\r\n}\r\n\r\nexport default InputComponent\r\n\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    color: #00000073;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Input = styled.input`\r\n    padding: 3px 10px;\r\n    border: 1px solid #0000002e;\r\n    background-color: white;\r\n    border-radius: 7px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`","import React, { useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { Card, StyledButton, StyledNavlink } from '../Common/Styles/StyledComponents'\r\nimport ExpSVG from '../Assets/Icons/exp.svg'\r\nimport LocationSVG from '../Assets/Icons/location.svg'\r\nimport SalarySVG from '../Assets/Icons/salary.svg'\r\nimport { daysAgoCalculator } from '../Common/Functions/helperFunctions'\r\nimport InputComponent from './InputComponent'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\n\r\n//name\r\n//email,\r\n//number\r\n//education,\r\n//skills,\r\n//resume\r\n\r\n\r\nfunction JobCard({ job, canApply }) {\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [education, setEducation] = useState('')\r\n    const [skills, setSkills] = useState('')\r\n    const [resume, setResume] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const { title, company, experience, salary, location, createdAt } = job\r\n\r\n    const openDetailsHandler = () => {\r\n        dispatch(saveCurrentJob(job))\r\n    }\r\n\r\n    // const isInputValid = name && email && contactNumber && education && skills\r\n\r\n    const applyHandler = async () => {\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            number: contactNumber,\r\n            education,\r\n            skills,\r\n            jobs: {\r\n                id: job._id,\r\n                status: 'Applied'\r\n            }\r\n        }\r\n        // console.log(resume)\r\n\r\n        // // if (isInputValid) {\r\n        // //     toggle()\r\n        // // }\r\n\r\n        // console.log(data)\r\n        // console.log(formData)\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const postMessage = () => {\r\n        const date = new Date(createdAt)\r\n        const days = daysAgoCalculator(date)\r\n        if (days === 1) {\r\n            return 'Yesterday'\r\n        } else if (days === 0) {\r\n            return 'Today'\r\n        } else {\r\n            return `${days} days ago`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card onClick={openDetailsHandler}>\r\n            <StyledNavlink to={`/job/${job._id}`}>\r\n                <FlexDiv>\r\n                    <DetailsContainer>\r\n                        <JobTitle>{title}</JobTitle>\r\n                        <Company>{company}</Company>\r\n                        <Details><Icon src={ExpSVG} />  {experience}</Details>\r\n                        <Details><Icon src={SalarySVG} /> {salary}</Details>\r\n                        <Details><Icon src={LocationSVG} /> {location}</Details>\r\n                    </DetailsContainer>\r\n\r\n\r\n                </FlexDiv>\r\n                <Posted>Posted: <MessageSpan>{postMessage()}</MessageSpan></Posted>\r\n            </StyledNavlink>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default JobCard\r\n\r\n\r\n// Styled Components\r\n\r\n\r\nconst FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    @media (max-width: 500px){\r\n        flex-direction: column;  \r\n        align-items: flex-start; \r\n    }\r\n`\r\n\r\nconst DetailsContainer = styled.div`\r\n\r\n`\r\n\r\nconst ApplyButton = styled.button`\r\n    ${StyledButton};\r\n     @media (max-width: 500px){\r\n        margin-top: 20px;\r\n    }\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n\r\n`\r\n\r\n\r\nconst MessageSpan = styled.span`\r\n    color: black;\r\n`\r\n\r\nconst Posted = styled.p`    \r\n    margin: 10px 0px 0px 0px;\r\n    padding: 10px 0px 0px 0px;\r\n    color: grey;\r\n    border-top: 1px solid #0000001f;\r\n   \r\n`\r\n\r\nconst Company = styled.p`\r\n    margin: 10px 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-right: 10px;\r\n`\r\n\r\nconst JobTitle = styled.h1`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\n\r\nconst Details = styled.p`\r\nopacity: 0.6;\r\n    width: fit-content;\r\n    text-align: left;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\n\r\nconst CancelBtn = styled.button`\r\n    color: red;\r\n    padding: 5px 8px;\r\n    width: 100px;\r\n    border-radius: 0px;\r\n        background-color:transparent;\r\n    \r\n    border: 1px solid red;\r\n\r\n    transition: all 0.3s;\r\n\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst SendBtn = styled.button`\r\n    color: white;\r\n    padding: 5px 8px;\r\n\r\n    width: 100px;\r\n    border-radius: 0px;\r\n    background-color: green;\r\n    border: 1px solid green;\r\n     transition: all 0.3s;\r\n    &:hover{\r\n        background-color:transparent;\r\n        color: green;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3\r\n    }\r\n`\r\n\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Title, Card, FlexDiv, StyledButton, Status } from '../Common/Styles/StyledComponents'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport { saveAllCandidates, searchCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport styled, { css } from 'styled-components'\r\nimport { NavLink, useLocation, Redirect } from 'react-router-dom'\r\nimport JobCard from '../Components/JobCard'\r\nimport LocationSVG from '../Assets/Icons/location.svg'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\ntoast.configure()\r\n\r\nfunction JobDetailsPage(props) {\r\n    const [searchVal, setSearchVal] = useState()\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [allCandidates, setAllCandidates] = useState()\r\n    const [isJobDeleted, setIsJobDeleted] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const { job } = useSelector(state => state.jobsData)\r\n\r\n\r\n\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(saveAllCandidates(job && job.user))\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchCandidates(searchVal))\r\n        }\r\n    }, [searchVal, job])\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    console.log(candidates)\r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    console.log(currentData)\r\n    const id = props.match.params.id\r\n    const editURL = `edit/${id}`\r\n\r\n    const deleteJobHandler = async () => {\r\n        try {\r\n            await axios.delete(`${API_URI}${job && job._id}`)\r\n            setIsJobDeleted(true)\r\n            toast.success('Job deleted succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in job deletion', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        console.log(job.user)\r\n\r\n        const currentCandidate = job.user.find(item => {\r\n            return item._id === id\r\n        })\r\n\r\n        console.log(currentCandidate)\r\n        dispatch(saveCurrentCandidate(currentCandidate))\r\n    }\r\n\r\n    const renderList = (data) => {\r\n        if (data) {\r\n            if (data.length > 0) {\r\n                return data.map(item => <li key={item}>{item}</li>)\r\n            }\r\n            return 'No data'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            return currentData.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n\r\n                return <StyledNavlink key={item._id} to={`/candidate/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.name}</Element>\r\n                        <Element>{item.number}</Element>\r\n                        <Element><Status {...statusColor(item.jobs[0].status)}>{item.jobs[0].status}</Status> </Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderTable = () => {\r\n        if (filteredcandidates && filteredcandidates.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Name</HeadingElement>\r\n                <HeadingElement>Contact No.</HeadingElement>\r\n                <HeadingElement>Status</HeadingElement>\r\n                <HeadingElement>Applied on</HeadingElement>\r\n            </List>\r\n\r\n\r\n            {renderItemList()}\r\n\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    const renderTab = () => {\r\n\r\n        switch (activeTab) {\r\n            case 1:\r\n                return <CustomCard>\r\n                    <SearchComponent setValue={setSearchVal} />\r\n\r\n                    {renderTable()}\r\n\r\n                </CustomCard>\r\n\r\n            case 2:\r\n                return <CustomCard>\r\n\r\n                    <FlexHeader>\r\n                        <div>\r\n                            <Heading>Company</Heading>\r\n                            <Company>{job && job.company}</Company>\r\n                        </div>\r\n                        <Location><img src={LocationSVG} /> {job && job.location}</Location>\r\n                    </FlexHeader>\r\n\r\n                    <Section>\r\n                        <Heading>Description</Heading>\r\n                        <p>{job && job.description}</p>\r\n                    </Section>\r\n                    <Section>\r\n                        <p><Heading>Salary:</Heading> {job && job.salary}</p>\r\n                        <p><Heading>Experience:</Heading> {job && job.experience}</p>\r\n\r\n                    </Section>\r\n                    <Section>\r\n                        <Heading>Eligibilities</Heading>\r\n                        <Ul>\r\n                            {renderList(job && job.eligibility)}\r\n                        </Ul>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Responsiblities</Heading>\r\n                        <Ul>\r\n                            {renderList(job && job.responsibilities)}\r\n                        </Ul>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>About</Heading>\r\n                        <p>{job && job.aboutCompany}</p>\r\n                    </Section>\r\n                </CustomCard>\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>{job && job.title}</Title>\r\n                <Div>\r\n                    <EditNav to={editURL}><EditBtn>Edit</EditBtn></EditNav>\r\n                    <DeleteBtn onClick={deleteJobHandler} >Delete</DeleteBtn>\r\n                </Div>\r\n            </FlexDiv>\r\n\r\n            <ButtonContainer>\r\n                <Tab color={activeTab === 1 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(1)}>Applicant List</Tab>\r\n                <Tab color={activeTab === 2 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(2)}>Job Details</Tab>\r\n            </ButtonContainer>\r\n            {renderTab()}\r\n\r\n\r\n\r\n            {isJobDeleted && <Redirect to=\"/jobs\" />}\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default JobDetailsPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    margin: 0px 20px 20px 20px;\r\n    flex: 1;   \r\n`\r\nconst Div = styled.div`\r\n\r\n`\r\n\r\nconst EditNav = styled(NavLink)`\r\n   text-decoration: none;\r\n   color: white;\r\n\r\n`\r\n\r\nconst EditBtn = styled.button`\r\n    ${StyledButton}\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    border-radius: 0px;\r\n`\r\n\r\nconst DeleteBtn = styled.button`\r\n    font-weight: bold;\r\n    border-style: none;\r\n    border: 1px solid red;\r\n    color: red;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n    text-align: left;\r\n    padding: 0px 0px 0px 20px;\r\n    margin: 20px 0px 0px 0px;\r\n`\r\n\r\nconst Tab = styled.button`\r\n    font-weight: bold;\r\n    width: 150px;\r\n    padding: 10px 10px;\r\n    border-style: none;\r\n    background-color: ${props => props && props.color};\r\n    box-shadow: -1px -1px 6px 0px #0000001f;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst FlexHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n\r\n`\r\n\r\nconst Company = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.5em;\r\n\r\n`\r\n\r\nconst Location = styled.p`\r\n    ${RemoveSpacing}\r\n    opacity: 0.5;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    padding: 0px;\r\n    margin: 10px 0px 0px 15px;\r\n\r\n`\r\n\r\n\r\n\r\nconst UnorderedList = styled.ul`\r\n\r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Title, FlexDiv, Container, CustomCard, Card, statuscolors } from '../Common/Styles/StyledComponents'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useGetData } from '../Hooks/getData'\r\nimport styled, { css } from 'styled-components'\r\nimport JobSVG from '../Assets/Icons/job.svg'\r\nimport PeopleSVG from '../Assets/Icons/people.svg'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction DashboardPage() {\r\n    const [info, setInfo] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URI}info/counts`)\r\n            .then(({ data }) => setInfo(data))\r\n            .catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(info)\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>Dashboard</Title>\r\n            </FlexDiv>\r\n            <CardContainer>\r\n                <StyledLink to=\"/jobs\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Jobs</InfoTitle>\r\n                            <InfoData>{info && info.jobsCount ? info.jobsCount : <img src={Loader} />}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.reviewBg} src={JobSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n                <StyledLink to=\"/candidates\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Candidates</InfoTitle>\r\n                            <InfoData>{info && info.usersCount ? info.usersCount : <img src={Loader} />}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.pendingBg} src={PeopleSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n            </CardContainer>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n\r\n\r\nconst StyledLink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    }\r\n`\r\n\r\nconst NoSpacing = css`\r\n\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n`\r\nconst InfoTitle = styled.p`\r\n    ${NoSpacing}\r\n    \r\n    opacity: 0.5;\r\n    font-weight: bold;\r\n    font-size: 0.9em;\r\n`\r\n\r\nconst InfoData = styled.p`\r\n    ${NoSpacing}\r\n    font-weight: bold;\r\n    font-size: 3em;\r\n`\r\n\r\nconst InfoCard = styled(Card)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 250px;\r\n    height: 100px;\r\n    padding: 20px 30px;\r\n    transition: all 0.3s;\r\n    &:hover{\r\n        transform:scale(1.05)\r\n    }\r\n`\r\n\r\nconst Icon = styled.img`\r\nwidth: 50px;\r\n    background-color: ${props => props && props.color};\r\n    border-radius: 50px;\r\n    padding: 6px;\r\n\r\n`\r\n\r\nconst CardContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveAllCandidates } from '../Actions/CandidateActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\n\r\n\r\nfunction CandidateDetailsPage() {\r\n    // const { jobs } = useSelector(state => state.jobsdata)\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState()\r\n    console.log(searchVal)\r\n    useEffect(() => {\r\n\r\n        axios.get(API_URI)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllCandidates(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    }, []);\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    console.log(searchVal)\r\n    const currentData = searchVal !== undefined ? filteredcandidates : candidates\r\n    console.log(currentData)\r\n\r\n    return (\r\n        <Container>\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                <Title>Jobs Detail</Title>\r\n                <TableComponent data={currentData} />\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CandidateDetailsPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`","import React, { useState } from 'react'\r\nimport { Container, Title, FlexDiv, Card, CardTitle, Status, statuscolors, themeColor } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { changeStatus } from '../Actions/CandidateActions'\r\ntoast.configure()\r\n\r\n\r\n\r\nfunction ApplicantDetailsPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    const [isStatusChanged, setIsStatusChanged] = useState(false)\r\n    const history = useHistory()\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n    const { job } = useSelector(state => state.jobsData)\r\n\r\n    console.log(candidate)\r\n    console.log(job)\r\n\r\n    const changeStatusHandler = async (status) => {\r\n        const URL = `${API_URI}status/${candidate && candidate._id}?status=${status}`\r\n        try {\r\n            await axios.patch(URL)\r\n            setIsStatusChanged(true)\r\n            dispatch(changeStatus(status))\r\n            toast.success('Status Updated', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in status updation', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const downloadHandler = async () => {\r\n        const URL = `${API_URI}download/${candidate && candidate._id}`\r\n        console.log(URL)\r\n        try {\r\n            const data = await axios.get(URL)\r\n            const blob = await data.blob()\r\n            const URL = window.URL.createObjectURL(blob)\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //\"5f1ab1ed439e2d0017643a58\"\r\n    return (\r\n        <Container>\r\n            <FlexDiv style={{ justifyContent: 'flex-start' }}>\r\n                <Title style={{ marginRight: '10px' }}>{candidate && candidate.name}</Title>\r\n                <Status {...statusColor(candidate && candidate.jobs[0].status)}>\r\n                    {candidate && candidate.jobs[0].status}\r\n                </Status>\r\n            </FlexDiv>\r\n\r\n            <ControlCard>\r\n                <CardTitle>Controls</CardTitle>\r\n                <div>\r\n                    {candidate && candidate.jobs[0].status !== 'Rejected' && <Btn color={statuscolors.failed} onClick={() => changeStatusHandler(3)}>Reject</Btn>}\r\n                    {candidate && candidate.jobs[0].status !== 'Selected' && <Btn color={statuscolors.success} onClick={() => changeStatusHandler(2)}>Select</Btn>}\r\n                    {((candidate && candidate.jobs[0].status !== 'Called For Interview') && (candidate && candidate.jobs[0].status !== 'Selected')) ? <Btn color={statuscolors.review} onClick={() => changeStatusHandler(1)}>Call for interview</Btn> : null}\r\n\r\n                </div>\r\n\r\n            </ControlCard>\r\n            <Card>\r\n                <Section>\r\n                    <Heading>Skills</Heading>\r\n                    <Content>{candidate && candidate.skills}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Education</Heading>\r\n                    <Content>{candidate && candidate.education}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Contact No.</Heading>\r\n                    <Content>{candidate && candidate.number}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Email</Heading>\r\n                    <Content>{candidate && candidate.email}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Resume</Heading>\r\n                    <DownloadLink href={`${API_URI}download/${candidate && candidate._id}`} target=\"_blank\" color={themeColor}>Download</DownloadLink>\r\n                </Section>\r\n\r\n            </Card>\r\n\r\n\r\n            {/* {isStatusChanged && <Redirect to={`${API_URI}jobs/${job._id}`} />} */}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ApplicantDetailsPage\r\n\r\n\r\n//Common ------------------------------------------\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.3em;\r\n`\r\n\r\n\r\n\r\n\r\n\r\nconst StyledBtn = css`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    background-color: ${props => props && props.color};\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst DownloadLink = styled.a`\r\n    ${StyledBtn}\r\n    text-decoration: none;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 30px;\r\n\r\n`\r\n\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title, FlexDiv, StyledButton, Status } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\n\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport DetailsTable from '../Components/DetailsTable'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { searchCandidates, saveAllCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\n\r\n\r\nfunction CandidatesListPage() {\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState(undefined)\r\n    useEffect(() => {\r\n        const URL = `${API_URI}all/candidate`\r\n        axios.get(URL)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllCandidates(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchCandidates(searchVal))\r\n        }\r\n    }, [searchVal])\r\n\r\n\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        const currentCandidate = candidates.find(item => item._id === id)\r\n        dispatch(saveCurrentCandidate(currentCandidate))\r\n\r\n    }\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            return currentData.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n                return <StyledNavlink key={item._id} to={`/applied-job/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.name}</Element>\r\n                        <Element>{item.number}</Element>\r\n                        <Element><Status {...statusColor(item.jobs[0].status)}>{item.jobs[0].status}</Status> </Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredcandidates && filteredcandidates.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Name</HeadingElement>\r\n                <HeadingElement>Contact No</HeadingElement>\r\n                <HeadingElement>Status</HeadingElement>\r\n                <HeadingElement>Applied on</HeadingElement>\r\n            </List>\r\n\r\n            {renderItemList()}\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>Candidate List</Title>\r\n            </FlexDiv>\r\n\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                {renderTable()}\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CandidatesListPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nconst PostJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`\r\n\r\nconst UnorderedList = styled.ul`\r\n    \r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { Container, FlexDiv, Title, Card, StyledNavlink } from '../Common/Styles/StyledComponents'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styled, { css } from 'styled-components'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { saveAllJobs, searchJobs, saveAppliedJobs, searchAppliedJobs } from '../Actions/JobsActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\n\r\n\r\nfunction AppliedJobList() {\r\n    const dispatch = useDispatch()\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [searchVal, setSearchVal] = useState()\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n\r\n    console.log(candidate)\r\n\r\n    useLayoutEffect(() => {\r\n        const URL = `${API_URI}user/${candidate && candidate._id}`\r\n        axios.get(URL)\r\n            .then(({ data }) => {\r\n                console.log(data)\r\n                dispatch(saveAppliedJobs(data.jobs))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchAppliedJobs(searchVal))\r\n        }\r\n    }, [searchVal, candidate])\r\n\r\n    const { appliedJobs, filteredAppliedJobs } = useSelector(state => state.jobsData)\r\n    console.log(appliedJobs)\r\n    const currentData = searchVal === undefined ? appliedJobs : filteredAppliedJobs\r\n    console.log(currentData)\r\n\r\n    const downloadHandler = () => {\r\n        const URL = `${API_URI}download/${candidate && candidate._id}`\r\n        console.log(URL)\r\n        axios.get(URL).then(data => console.log(data)).catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            console.log(currentData)\r\n            // POPULATE PENDING//////////////////////////////////////////////\r\n            return currentData.map(item => {\r\n                console.log(item)\r\n                const date = new Date(item.id.createdAt).toDateString()\r\n\r\n                return <List>\r\n                    <Element>{item.id.title}</Element>\r\n                    <Element>{item.id.company}</Element>\r\n                    <Element>{item.id.location}</Element>\r\n                    <Element>{date}</Element>\r\n                </List>\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredAppliedJobs && filteredAppliedJobs.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Job Title</HeadingElement>\r\n                <HeadingElement>Company</HeadingElement>\r\n                <HeadingElement>Location</HeadingElement>\r\n                <HeadingElement>Posted on</HeadingElement>\r\n            </List>\r\n\r\n\r\n            {renderItemList()}\r\n\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    const renderTab = () => {\r\n\r\n        switch (activeTab) {\r\n            case 1:\r\n                return <CustomCard>\r\n                    <SearchComponent setValue={setSearchVal} />\r\n\r\n                    {renderTable()}\r\n\r\n                </CustomCard>\r\n\r\n            case 2:\r\n                return <CustomCard>\r\n\r\n                    <Section>\r\n                        <Heading>Skills</Heading>\r\n                        <Content>{candidate && candidate.skills}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Education</Heading>\r\n                        <Content>{candidate && candidate.education}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Contact No.</Heading>\r\n                        <Content>{candidate && candidate.number}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Email</Heading>\r\n                        <Content>{candidate && candidate.email}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Resume</Heading>\r\n                        <DownloadLink href={`${API_URI}download/${candidate && candidate._id}`} target=\"_blank\" color={'#088400'}>Download</DownloadLink>\r\n                    </Section>\r\n\r\n                </CustomCard>\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>{candidate && candidate.name}</Title>\r\n\r\n            </FlexDiv>\r\n\r\n            <ButtonContainer>\r\n                <Tab color={activeTab === 1 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(1)}>Job List</Tab>\r\n                <Tab color={activeTab === 2 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(2)}>Candidate Details</Tab>\r\n            </ButtonContainer>\r\n            {renderTab()}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppliedJobList\r\n\r\nconst DeleteBtn = styled.button`\r\n    font-weight: bold;\r\n    border-style: none;\r\n    border: 1px solid red;\r\n    color: red;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\nconst ButtonContainer = styled.div`\r\n    text-align: left;\r\n    padding: 0px 0px 0px 20px;\r\n    margin: 20px 0px 0px 0px;\r\n`\r\n\r\nconst Tab = styled.button`\r\n    font-weight: bold;\r\n    width: 150px;\r\n    padding: 6px 10px;\r\n    border-style: none;\r\n    background-color: ${props => props && props.color};\r\n    box-shadow: -1px -1px 6px 0px #0000001f;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    margin: 0px 20px 20px 20px;\r\n    flex: 1;   \r\n`\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\n\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.3em;\r\n\r\n`\r\nconst UnorderedList = styled.ul`\r\n\r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledBtn = css`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    background-color: ${props => props && props.color};\r\n`\r\n\r\nconst Btn = styled.button`\r\n    ${StyledBtn}\r\n`\r\n\r\nconst DownloadLink = styled.a`\r\n    ${StyledBtn}\r\n    text-decoration: none;\r\n`","import React, { useState } from 'react'\r\nimport { Card, Title, CardTitle, statuscolors, themeColor } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nfunction EditJobPage() {\r\n\r\n    const { job } = useSelector(state => state.jobsData)\r\n    console.log(job)\r\n\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n\r\n    const [title, setTitle] = useState(job && job.title)\r\n    const [salary, setSalary] = useState(job && job.salary)\r\n    const [description, setDescription] = useState(job && job.description)\r\n\r\n    const [company, setCompany] = useState(job && job.company)\r\n    const [aboutCompany, setAboutCompany] = useState(job && job.aboutCompany)\r\n    const [location, setLocation] = useState(job && job.location)\r\n\r\n    const [experience, setExperience] = useState(job && job.experience)\r\n\r\n    const [eligibilitiesVal, setEligibilitiesVal] = useState()\r\n    const [eligibilities, setEligibilities] = useState((job && job.eligibility) || [])\r\n\r\n    const [responsibilitiesVal, setResponsibilitiesVal] = useState()\r\n    const [responsibilities, setResponsibilities] = useState((job && job.responsibilities) || [])\r\n\r\n    const isInputValid = title && description && company && aboutCompany && location && experience && eligibilities.length > 0 && responsibilities.length > 0\r\n\r\n    const resetHandler = () => {\r\n        setTitle(job && job.title)\r\n        setSalary(job && job.salary)\r\n        setDescription(job && job.description)\r\n        setCompany(job && job.company)\r\n        setLocation(job && job.location)\r\n        setAboutCompany(job && job.aboutCompany)\r\n        setExperience(job && job.experience)\r\n        setEligibilities(job && job.eligibility)\r\n        setEligibilitiesVal('')\r\n        setResponsibilities(job && job.responsibilities)\r\n        setEligibilitiesVal('')\r\n        document.getElementById('update-title').focus()\r\n    }\r\n\r\n    const updateHandler = async () => {\r\n        const data = {\r\n            title,\r\n            salary: salary ? salary : 'Not disclosed',\r\n            description,\r\n            company,\r\n            aboutCompany,\r\n            location,\r\n            experience,\r\n            eligibility: eligibilities,\r\n            responsibilities\r\n        }\r\n        console.log(data)\r\n        try {\r\n            const response = await axios.put(`${API_URI}${job && job._id}`, data)\r\n            setIsUpdated(true)\r\n            toast.success('Job Updated succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in job  succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n    const deleteItemHandler = (data, item, setCurrState) => {\r\n        const FilteredData = data.filter(el => el !== item)\r\n        setCurrState(FilteredData)\r\n    }\r\n\r\n    const renderList = (data, setCurrState) => {\r\n        const list = data.map(item => {\r\n            return <Element key={item}>\r\n                <ElementP>{item}</ElementP>\r\n                <Icon onClick={() => deleteItemHandler(data, item, setCurrState)} src={CloseSVG} />\r\n            </Element>\r\n        })\r\n\r\n        return list.length > 0 ? list : <EmptyMessage>Empty</EmptyMessage>\r\n    }\r\n\r\n    const addHandler = (currState, setCurrState, item) => {\r\n        const TEMP = [...currState]\r\n        TEMP.push(item)\r\n        setCurrState(TEMP)\r\n        setEligibilitiesVal('')\r\n        setResponsibilitiesVal('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MainTitle>Update Job</MainTitle>\r\n            <Form>\r\n                <ControlCard>\r\n                    <CardTitle>Controls</CardTitle>\r\n                    <div>\r\n                        <Btn color={statuscolors.failed} onClick={resetHandler} >Reset</Btn>\r\n                        <Btn color={statuscolors.success} disabled={!isInputValid} onClick={updateHandler}>Update</Btn>\r\n                    </div>\r\n                </ControlCard>\r\n                {/* <InfoCardContainer> */}\r\n                <Card>\r\n                    <CardTitle>Job Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Job Title</Label>\r\n                        <Input id=\"update-title\" value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Salary</Label>\r\n                        <Input value={salary} onChange={(e) => setSalary(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Description</Label>\r\n                        <Textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <CardTitle>Company Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Name</Label>\r\n                        <Input value={company} onChange={(e) => setCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Location</Label>\r\n                        <Input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>About</Label>\r\n                        <Textarea value={aboutCompany} onChange={(e) => setAboutCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <CardTitle>Requirements</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Experience</Label>\r\n                        <Input value={experience} onChange={(e) => setExperience(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Eligibility</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(eligibilities, setEligibilities, eligibilitiesVal)\r\n                        }}\r\n                        >\r\n                            <CustomInput value={eligibilitiesVal} onChange={(e) => setEligibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton >Add</AddButton>\r\n                        </InputWithButton>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Responsibilities</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(responsibilities, setResponsibilities, responsibilitiesVal)\r\n                        }}>\r\n                            <CustomInput value={responsibilitiesVal} onChange={(e) => setResponsibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton>Add</AddButton>\r\n                        </InputWithButton>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n\r\n                    </InputContainer>\r\n\r\n                </Card>\r\n                {/* <RequirementCard>\r\n                        <CardTitle>Eligibility</CardTitle>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n                        <CustomLabel>Responsibilities</CustomLabel>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n                    </RequirementCard>\r\n                </InfoCardContainer> */}\r\n\r\n            </Form>\r\n            {isUpdated && <Redirect to=\"/jobs\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditJobPage\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n\r\n        font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n`\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    background-color: green;\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n    flex: 1;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    border:1px dashed ${statuscolors.reviewBg};\r\n    \r\n    padding: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${themeColor};\r\n    color: ${themeColor};\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`\r\n\r\nconst Section = styled.div`\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst EmptyMessage = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed}\r\n`","import React, { useState } from 'react'\r\nimport { Card, themeColor, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { login } from '../Actions/AuthActions'\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo.svg'\r\nimport User from '../Assets/Icons/user.svg'\r\nimport Password from '../Assets/Icons/password.svg'\r\n\r\nfunction SignInPage() {\r\n    const dispatch = useDispatch()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const { isAuthenticated } = useSelector(state => state.authData)\r\n    console.log(isAuthenticated)\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault()\r\n        const URL = `${API_URI}login`\r\n\r\n        try {\r\n            const data = {\r\n                name: username,\r\n                password\r\n            }\r\n\r\n            const loginData = await axios.post(URL, data)\r\n            dispatch(login(true))\r\n        } catch (err) {\r\n            dispatch(login(false))\r\n        }\r\n    }\r\n    return (\r\n        <SiginContainer>\r\n\r\n            <SigninSubContainer>\r\n                <div>\r\n                    <BrandLogo src={CompanyLogo} />\r\n                </div>\r\n                <SigninCard>\r\n                    <SiginTitle>Admin</SiginTitle>\r\n                    {/* <SiginSubTitle>to Admin Portal</SiginSubTitle> */}\r\n                    <SigninForm onSubmit={loginHandler}>\r\n                        <InputContainer>\r\n                            <Icon src={User} />\r\n                            <Input value={username} onChange={(e) => setUsername(e.target.value)} type=\"text\" placeholder=\"Username\" />\r\n                        </InputContainer>\r\n\r\n                        <InputContainer>\r\n                            <Icon src={Password} />\r\n                            <Input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\r\n                        </InputContainer>\r\n                        <Login>Login</Login>\r\n                    </SigninForm>\r\n                </SigninCard>\r\n\r\n            </SigninSubContainer>\r\n        </SiginContainer>\r\n    )\r\n}\r\n\r\nexport default SignInPage\r\n\r\n\r\nconst SiginTitle = styled.h2`\r\n    color: ${themeColor};\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n    `\r\nconst SiginSubTitle = styled.h5`\r\n    color: ${themeColor};\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst SiginContainer = styled.div`\r\n    background-color: #f4f4f4;\r\n    height: 100vh;\r\n`\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 250px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst SigninSubContainer = styled.div`\r\npadding-top: 70px;\r\n    /* display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center; */\r\n`\r\n\r\nconst SigninCard = styled(Card)`\r\n    margin: auto;\r\n   \r\n    width:300px;\r\n    /* height:300px; */\r\n`\r\n\r\nconst SigninForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\n\r\nconst Login = styled.button`\r\n    ${StyledButton}\r\n    width: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    /* margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    background-color: #276eb0;\r\n    border-style: none;\r\n    color: white;\r\n    font-weight: bold; */\r\n\r\n`\r\nconst Icon = styled.img`\r\n    margin-right: 10px;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n`\r\n\r\nconst Input = styled.input`\r\nwidth: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #0000001f;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 1px solid ${themeColor};\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { Container, FlexDiv, Title, Card, statuscolors, CardTitle } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../Actions/AuthActions'\r\n\r\nfunction ProfilePage() {\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () => {\r\n        dispatch(logout(false))\r\n    }\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>Profile</Title>\r\n                <LogoutBtn onClick={logoutHandler}>Logout</LogoutBtn>\r\n            </FlexDiv>\r\n\r\n            <Card>\r\n                <CardTitle style={{ margin: '0px' }}>Username</CardTitle>\r\n                <Content style={{ marginBottom: '20px' }}>admin</Content>\r\n                <CardTitle style={{ margin: '0px' }}>Role</CardTitle>\r\n                <Content>Super Admin</Content>\r\n\r\n            </Card>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n\r\n\r\nconst LogoutBtn = styled.button`\r\n    border-style: none;\r\n    text-decoration: underline;\r\n    color: ${statuscolors.review};\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    &:hover{\r\n    color: ${statuscolors.failed};\r\n\r\n    }\r\n\r\n\r\n`\r\n\r\nconst Content = styled.p`\r\n    font-weight: bold;\r\n    font-size: 2.5em;\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n`","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport JobsPage from './Pages/JobsPage';\nimport CandidatePage from './Pages/CandidatePage';\nimport NavBar from './Components/NavBar';\nimport styled from 'styled-components'\nimport SideBar from './Components/SideBar';\nimport AddJobs from './Pages/PostJob';\nimport JobsListPage from './Pages/JobsListPage';\nimport JobDetailsPage from './Pages/JobDetailsPage';\nimport DashboardPage from './Pages/DashboardPage';\nimport PostJob from './Pages/PostJob';\nimport CandidateDetailsPage from './Pages/CandidateDetailsPage';\nimport ApplicantDetailsPage from './Pages/ApplicantDetailsPage';\nimport CandidatesListPage from './Pages/CandidatesListPage';\nimport AppliedJobList from './Pages/AppliedJobList';\nimport EditJobPage from './Pages/EditJobPage';\nimport SignInPage from './Pages/SignInPage';\nimport { useSelector } from 'react-redux';\nimport ProfilePage from './Pages/ProfilePage';\n\nfunction App() {\n\n  const { isAuthenticated } = useSelector(state => state.authData)\n\n\n\n  const renderRoutes = () => {\n    return <>\n\n      <NavBar />\n      <MainDiv>\n        <SideBar />\n        <RightSideBar>\n\n\n          <Switch>\n            <Route path=\"/\" exact component={DashboardPage} />\n\n            <Route path=\"/postjob\" component={PostJob} />\n            <Route path=\"/jobs\" component={JobsListPage} />\n            <Route path=\"/job/edit/:id\" component={EditJobPage} />\n            <Route path=\"/job/:id\" component={JobDetailsPage} />\n\n            <Route path=\"/candidate/:id\" component={ApplicantDetailsPage} />\n            <Route path=\"/applied-job/:id\" component={AppliedJobList} />\n\n\n            <Route path=\"/candidates\" component={CandidatesListPage} />\n            <Route path=\"/profile\" component={ProfilePage} />\n          </Switch>\n        </RightSideBar>\n\n      </MainDiv>\n    </>\n  }\n\n  const renderSignin = () => {\n    return <Route path=\"/\" component={SignInPage} />\n  }\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {isAuthenticated ? renderRoutes() : renderSignin()}\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n\nconst MainDiv = styled.div`\n  background-color: #276eb012;\n  display: flex;\n  width: 100%;\n  height: 92vh;\n  overflow: auto;\n`\nconst ComponentContainer = styled.div`\n  padding: 15px;\n`\n\nconst RightSideBar = styled.div`\n  width:100%;\n  overflow-y: scroll;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    jobs: [],\r\n    appliedJobs: [],\r\n    job: null,\r\n    filteredJobs: undefined,\r\n    filteredAppliedJobs: undefined\r\n}\r\n\r\nconst JobsReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case jobTypes.SAVE_ALL_JOBS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                jobs: payload\r\n            }\r\n\r\n        case jobTypes.SAVE_APPLIED_JOBS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                appliedJobs: payload\r\n            }\r\n\r\n        case jobTypes.SAVE_CURRENT_JOB:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                job: payload\r\n            }\r\n\r\n        case jobTypes.FILTER_SEARCH_JOBS:\r\n\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.jobs.filter(item => {\r\n                return item.title.toLowerCase().includes(searchVal)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredJobs: filterTemp\r\n            }\r\n\r\n        case jobTypes.FILTER_APPLIED_JOBS:\r\n\r\n            const searchAppliedJob = payload.toLowerCase()\r\n            console.log(searchAppliedJob)\r\n            const filterAppliedTemp = state.appliedJobs.filter(item => {\r\n                return item.title.toLowerCase().includes(searchAppliedJob)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredAppliedJobs: filterAppliedTemp\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default JobsReducer","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    candidates: [],\r\n    candidate: null,\r\n    filteredcandidates: undefined\r\n}\r\n\r\nconst CandidatesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case candidateTypes.SAVE_ALL_CANDIDATES:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidates: payload\r\n            }\r\n\r\n        case candidateTypes.SAVE_CURRENT_CANDIDATE:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidate: payload\r\n            }\r\n\r\n        case candidateTypes.FILTER_SEARCH_CANDITATE:\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.candidates.filter(item => {\r\n                return item.name.toLowerCase().includes(searchVal)\r\n            })\r\n            console.log(filterTemp)\r\n\r\n            return {\r\n                ...state,\r\n                filteredcandidates: filterTemp\r\n            }\r\n\r\n        case candidateTypes.CHANGE_STATUS:\r\n            console.log(payload)\r\n            let TEMP = { ...state.candidate }\r\n            TEMP.jobs[0].status = payload\r\n            return {\r\n                ...state,\r\n                candidate: TEMP\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default CandidatesReducer","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false\r\n}\r\n\r\nconst AuthReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case authTypes.LOG_IN:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n\r\n        case authTypes.LOG_OUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import JobsReducer from './JobsReducer'\r\nimport CandidateReducer from './CandidatesReducer'\r\nimport AuthReducer from './AuthReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst RootReducer = combineReducers({\r\n    jobsData: JobsReducer,\r\n    candidateData: CandidateReducer,\r\n    authData: AuthReducer\r\n})\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport RootReducer from './Reducers/RootReducer';\n\nconst store = createStore(RootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}