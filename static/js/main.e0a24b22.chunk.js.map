{"version":3,"sources":["Assets/Icons/loader.svg","Assets/Icons/close.svg","Assets/Icons/location.svg","Assets/Icons/fistbump-logo-white.svg","Assets/Icons/dashboard.svg","Assets/Icons/profile.svg","Assets/Icons/job-dashboard.svg","Assets/Icons/candidate.svg","Assets/Icons/exp.svg","Assets/Icons/salary.svg","Assets/Icons/job.svg","Assets/Icons/people.svg","Assets/Icons/fistbump-logo.svg","Assets/Icons/user.svg","Assets/Icons/password.svg","Common/Styles/StyledComponents.js","Pages/CandidatePage.js","ActionTypes/ActionTypes.js","Actions/AuthActions.js","Components/NavBar.js","Actions/CandidateActions.js","Actions/JobsActions.js","Components/SideBar.js","Endpoint.js","Pages/PostJob.js","Components/SearchComponent.js","Components/TableComponent.js","Components/DetailsTable.js","Pages/JobsListPage.js","Common/Functions/helperFunctions.js","Components/InputComponent.js","Components/JobCard.js","Pages/JobDetailsPage.js","Pages/DashboardPage.js","Pages/CandidateDetailsPage.js","Pages/ApplicantDetailsPage.js","Pages/CandidatesListPage.js","Pages/AppliedJobList.js","Pages/EditJobPage.js","Pages/SignInPage.js","App.js","serviceWorker.js","Reducers/JobsReducer.js","Reducers/CandidatesReducer.js","Reducers/AuthReducer.js","Reducers/RootReducer.js","index.js"],"names":["module","exports","statuscolors","Card","styled","div","Title","p","StyledButton","css","CardTitle","FlexDiv","Container","Status","NavLink","props","bgColor","color","CandidatePage","jobTypes","candidateTypes","authTypes","login","payload","type","NavBar","useDispatch","Header","StyledNavLink","to","BrandLogo","src","CompanyLogo","NavControls","button","img","header","saveCurrentCandidate","saveAllCandidates","searchCandidates","saveCurrentJob","activeStyles","backgroundColor","SideBar","useState","page","setPage","SidebarContainer","Routes","activeStyle","onClick","RouteIcon","DashboardSVG","RouteText","JobSVG","CandidateSVG","ProfileSVG","API_URI","PostJob","title","setTitle","salary","setSalary","description","setDescription","company","setCompany","aboutCompany","setAboutCompany","location","setLocation","experience","setExperience","eligibilitiesVal","setEligibilitiesVal","eligibilities","setEligibilities","responsibilitiesVal","setResponsibilitiesVal","responsibilities","setResponsibilities","isInputValid","length","postHandler","a","data","eligibility","console","log","axios","post","response","addHandler","currState","setCurrState","item","TEMP","push","Form","MainTitle","ControlCard","Btn","document","getElementById","focus","disabled","InputContainer","Label","Input","id","value","onChange","e","target","Textarea","InputWithButton","onSubmit","preventDefault","CustomInput","AddButton","label","InputStyles","textarea","input","form","ul","li","SearchComponent","setValue","val","setVal","SearchContainer","SearchInput","placeholder","SearchBtn","DetailsTable","JobsListPage","dispatch","undefined","searchVal","setSearchVal","useEffect","get","then","catch","err","useSelector","state","jobsData","jobs","filteredJobs","currentData","getDataHandler","URI","UnorderedList","HeadingElement","map","date","Date","createdAt","toDateString","key","_id","Loader","CustomCard","List","Element","StyledNavlink","statusColor","status","span","h1","JobCard","toast","configure","JobDetailsPage","activeTab","setActiveTab","isJobDeleted","setIsJobDeleted","job","useLayoutEffect","user","candidateData","candidates","filteredcandidates","match","params","editURL","deleteJobHandler","delete","success","position","POSITION","BOTTOM_RIGHT","error","currentCandidate","find","renderList","renderTable","name","number","renderItemList","Div","EditNav","EditBtn","DeleteBtn","Tab","FlexHeader","Heading","Location","LocationSVG","Section","renderTab","ButtonContainer","RemoveSpacing","Company","Ul","DashboardPage","info","setInfo","CardContainer","StyledLink","InfoCard","InfoTitle","InfoData","jobsCount","usersCount","PeopleSVG","NoSpacing","Icon","ApplicantDetailsPage","setIsStatusChanged","candidate","useHistory","changeStatusHandler","URL","patch","Content","skills","education","email","DownloadLink","href","StyledBtn","CandidatesListPage","AppliedJobList","appliedJobs","filteredAppliedJobs","EditJobPage","isUpdated","setIsUpdated","updateHandler","put","list","filter","el","deleteItemHandler","CloseSVG","InfoCardContainer","RequirementCard","ElementP","CustomLabel","SignInPage","username","setUsername","password","setPassword","isAuthenticated","authData","loginHandler","SiginContainer","SigninSubContainer","SigninCard","SiginTitle","SigninForm","User","Password","Login","h2","h5","App","className","MainDiv","RightSideBar","path","exact","component","Boolean","window","hostname","initialState","JobsReducer","toLowerCase","filterTemp","includes","searchAppliedJob","filterAppliedTemp","CandidatesReducer","AuthReducer","RootReducer","combineReducers","CandidateReducer","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e0a24b22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.c1cca854.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.828fcf8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.9f46df7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/fistbump-logo-white.0296bf0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.a07674e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.ae539f4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/job-dashboard.021b9f65.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.98741c4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/exp.48804530.svg\";","module.exports = __webpack_public_path__ + \"static/media/salary.cb6077d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.c62b1c08.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.7999010a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fistbump-logo.ef76c49a.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.393b4839.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.1ea93987.svg\";","import styled, { css } from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const themeColor = '#2B96DC'\r\nexport const highlightColor = '#40CD8A'\r\n\r\nexport const statuscolors = {\r\n    pending: '#FFB223',\r\n    pendingBg: '#FFF5C4',\r\n\r\n    success: '#3EB93B',\r\n    successBg: '#E9FAE8',\r\n\r\n    failed: '#F1373A',\r\n    failedBg: '#FFE1DF',\r\n\r\n    review: '#0B7EE8',\r\n    reviewBg: '#E6F4FD'\r\n\r\n}\r\n\r\n\r\n// export const Container = styled.div`\r\n//     background-image: url(${DripImage});\r\n//     height: 80vh;\r\n//     background-repeat: no-repeat;\r\n//     background-position: top;\r\n// `\r\n\r\n\r\n\r\nexport const Card = styled.div`\r\n    background-color: white;\r\n    padding: 20px;\r\n    text-align: left;\r\n    box-shadow: 2px 2px 8px 3px #0000001c;\r\n    margin: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Grid = styled.div`\r\n    background-color: #276eb012;\r\n    display: grid;\r\n\tgap: 0rem;\r\n\trow-gap: 0rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n    @media (max-width: 400px) {\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    }\r\n`\r\n\r\nexport const Title = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n   \r\n`\r\n\r\nexport const StyledButton = css`\r\n    background-color: ${themeColor};\r\n    border: 1px solid ${themeColor};\r\n    padding: 10px;\r\n    width: 150px;\r\n    color: white;\r\n    font-weight: bold;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor};\r\n    }\r\n`\r\n\r\nexport const CardTitle = styled.p`\r\n    font-weight: bold;\r\n    margin: 0px 0px 20px 0px;\r\n    padding: 0px;\r\n    font-size: 1.2em;\r\n    color: grey;\r\n`\r\n\r\nexport const FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nexport const CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nexport const StyledNavlink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    text-decoration: none;\r\n\r\n    } \r\n    &:active{\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nexport const Status = styled.p`\r\n    width: fit-content;\r\n    padding: 3px 10px;\r\n    \r\n    border-radius: 50px;\r\n    font-size: 0.9em;\r\n    background-color: ${props => props && props.bgColor};\r\n    margin: 0px;\r\n    color: ${props => props && props.color};\r\n`","import React from 'react'\r\nimport { Card } from '../Common/Styles/StyledComponents'\r\n\r\nfunction CandidatePage() {\r\n    return (\r\n        <div>\r\n            <Card>\r\n                CandidatePage\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CandidatePage\r\n","export const jobTypes = {\r\n    SAVE_CURRENT_JOB: 'SAVE_CURRENT_JOB',\r\n    SAVE_ALL_JOBS: 'SAVE_ALL_JOBS',\r\n    SAVE_APPLIED_JOBS: 'SAVE_APPLIED_JOBS',\r\n    DELETE_CURRENT_JOB: 'DELETE_CURRENT_JOB',\r\n    FILTER_SEARCH_JOBS: 'FILTER_SEARCH_JOBS',\r\n    FILTER_APPLIED_JOBS: 'FILTER_APPLIED_JOBS',\r\n}\r\n\r\nexport const candidateTypes = {\r\n    SAVE_CURRENT_CANDIDATE: 'SAVE_CURRENT_CANDIDATE',\r\n    SAVE_ALL_CANDIDATES: 'SAVE_ALL_CANDIDATES',\r\n    DELETE_CURRENT_CANDIDATE: 'DELETE_CURRENT_CANDIDATE',\r\n    FILTER_SEARCH_CANDITATE: 'FILTER_SEARCH_CANDITATE',\r\n}\r\n\r\nexport const authTypes = {\r\n    LOG_IN: 'LOG_IN',\r\n    LOG_OUT: 'LOG_OUT'\r\n}","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const login = (payload) => {\r\n    return {\r\n        type: authTypes.LOG_IN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const logout = (payload) => {\r\n    return {\r\n        type: authTypes.LOG_OUT,\r\n        payload\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../Actions/AuthActions'\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo-white.svg'\r\n\r\nconst activeStyles = {\r\n    backgroundColor: '#00000029'\r\n}\r\n\r\n\r\n\r\n\r\nfunction NavBar() {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout(false))\r\n    }\r\n\r\n    return (\r\n        <Header>\r\n            <StyledNavLink to=\"/\"><BrandLogo src={CompanyLogo} /></StyledNavLink>\r\n            <NavControls>\r\n                {/* <Logout onClick={logoutHandler}>Logout</Logout> */}\r\n                {/* <StyledNavLink activeStyle={activeStyles} to=\"/profile\">Logout</StyledNavLink> */}\r\n            </NavControls>\r\n        </Header>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\nconst Logout = styled.button`\r\n        color: white;\r\n    background: #832525;\r\n    border-style: none;\r\n    padding: 0px 21px;\r\n    font-weight: bold;\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Styled Components\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 80px;\r\n`\r\n\r\nconst Header = styled.header`\r\nposition: sticky;\r\ntop: 0;\r\n    color: white;\r\n    background-color: ${themeColor};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* padding: 10px 20px; */\r\n    /* box-shadow: 0px 5px 20px 1px #00000017; */\r\n`\r\n\r\nconst NavControls = styled.div`\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: fit-content;\r\n`\r\n\r\nconst Logo = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\npadding: 10px 20px;\r\n    color: white;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    &:hover{\r\n        background-color: #00000029;\r\n        text-decoration: none;\r\n        color: white;\r\n    }\r\n    &:active{\r\n        text-decoration: none;\r\n        color: white;\r\n    }\r\n`","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentCandidate = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_CURRENT_CANDIDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAllCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_ALL_CANDIDATES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.FILTER_SEARCH_CANDITATE,\r\n        payload\r\n    }\r\n}","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentJob = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_CURRENT_JOB,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const saveAllJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_ALL_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_SEARCH_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink, useLocation, useHistory, Redirect } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveAllCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport { saveAllJobs, saveCurrentJob } from '../Actions/JobsActions'\r\n\r\nimport DashboardSVG from '../Assets/Icons/dashboard.svg'\r\nimport ProfileSVG from '../Assets/Icons/profile.svg'\r\nimport JobSVG from '../Assets/Icons/job-dashboard.svg'\r\nimport CandidateSVG from '../Assets/Icons/candidate.svg'\r\n\r\n\r\nconst activeStyles = {\r\n    backgroundColor: '#f1f1f1'\r\n}\r\n\r\nfunction SideBar() {\r\n    const dispatch = useDispatch()\r\n    const [page, setPage] = useState(1)\r\n\r\n\r\n\r\n    return (\r\n        <SidebarContainer>\r\n\r\n\r\n            <Routes activeStyle={page === 1 ? activeStyles : {}} onClick={() => setPage(1)} to='/'>\r\n                <RouteIcon src={DashboardSVG} />\r\n                <RouteText>Dashboard</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 2 ? activeStyles : {}} onClick={() => setPage(2)} to='/jobs'>\r\n                <RouteIcon src={JobSVG} />\r\n                <RouteText>Jobs</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 3 ? activeStyles : {}} onClick={() => setPage(3)} to='/candidates'>\r\n                <RouteIcon src={CandidateSVG} />\r\n                <RouteText>Candidates</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 4 ? activeStyles : {}} onClick={() => setPage(4)} to='/profile'>\r\n                <RouteIcon src={ProfileSVG} />\r\n                <RouteText>Profile</RouteText>\r\n            </Routes>\r\n\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n\r\nconst SidebarContainer = styled.div`\r\n    background-color: white;\r\n    width: 15%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst RouteContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst RouteIcon = styled.img`\r\n    margin-right: 10px;\r\n`\r\nconst RouteText = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    \r\n`\r\n\r\nconst Routes = styled(NavLink)`\r\n    display: flex;\r\n    text-decoration: none;\r\n    color: grey;\r\n    font-weight: bold;\r\n    text-align: left;\r\n    padding: 10px 20px;\r\n    &:hover{\r\n        \r\n        text-decoration: none;\r\n        background-color: white;\r\n    }\r\n\r\n    &:active{\r\n        text-decoration: none;\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n`","export const API_URI = 'https://jobs-webapi.herokuapp.com/'\r\n// export const API_URI = 'http://localhost:8080/'\r\nexport const CREATE = 'create'","import React, { useState } from 'react'\r\nimport { Card, Title, CardTitle, Container, statuscolors } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\n\r\n/*\r\ntitle text\r\ndescription textarea\r\nsalary text\r\n\r\nexperience text\r\nresponsibilities array\r\neligibility array\r\n\r\ncompany text\r\naboutCompany text\r\nlocation text\r\n\r\n*/\r\n\r\n\r\n\r\nfunction PostJob() {\r\n\r\n    const [title, setTitle] = useState()\r\n    const [salary, setSalary] = useState()\r\n    const [description, setDescription] = useState()\r\n\r\n    const [company, setCompany] = useState()\r\n    const [aboutCompany, setAboutCompany] = useState()\r\n    const [location, setLocation] = useState()\r\n\r\n    const [experience, setExperience] = useState()\r\n\r\n    const [eligibilitiesVal, setEligibilitiesVal] = useState()\r\n    const [eligibilities, setEligibilities] = useState([])\r\n\r\n    const [responsibilitiesVal, setResponsibilitiesVal] = useState()\r\n    const [responsibilities, setResponsibilities] = useState([])\r\n\r\n    const isInputValid = title && description && company && aboutCompany && location && experience && eligibilities.length > 0 && responsibilities.length > 0\r\n\r\n\r\n    const resetHandler = () => {\r\n        setTitle('')\r\n        setSalary('')\r\n        setDescription('')\r\n        setCompany('')\r\n        setLocation('')\r\n        setAboutCompany('')\r\n        setExperience('')\r\n        setEligibilities([])\r\n        setEligibilitiesVal('')\r\n        setResponsibilities([])\r\n        setEligibilitiesVal('')\r\n        document.getElementById('title').focus()\r\n    }\r\n\r\n    const postHandler = async () => {\r\n        const data = {\r\n            title,\r\n            salary: salary ? salary : 'Not disclosed',\r\n            description,\r\n            company,\r\n            aboutCompany,\r\n            location,\r\n            experience,\r\n            eligibility: eligibilities,\r\n            responsibilities\r\n        }\r\n        console.log(data)\r\n        try {\r\n            const response = await axios.post(`${API_URI}create`, data)\r\n            console.log(response)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    const deleteItemHandler = (data, item, setCurrState) => {\r\n        const FilteredData = data.filter(el => el !== item)\r\n        setCurrState(FilteredData)\r\n    }\r\n\r\n    const renderList = (data, setCurrState) => {\r\n        const list = data.map(item => {\r\n            return <Element key={item}>\r\n                <ElementP>{item}</ElementP>\r\n                <Icon onClick={() => deleteItemHandler(data, item, setCurrState)} src={CloseSVG} />\r\n            </Element>\r\n        })\r\n\r\n        return list.length > 0 ? list : 'Empty'\r\n    }\r\n\r\n    const addHandler = (currState, setCurrState, item) => {\r\n        const TEMP = [...currState]\r\n        TEMP.push(item)\r\n        setCurrState(TEMP)\r\n        setEligibilitiesVal('')\r\n        setResponsibilitiesVal('')\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Form>\r\n\r\n                <MainTitle>Post Job</MainTitle>\r\n                <ControlCard>\r\n                    <CardTitle>Controls</CardTitle>\r\n                    <div>\r\n                        <Btn color={statuscolors.failed} onClick={resetHandler}>Reset</Btn>\r\n                        <Btn color={statuscolors.success} disabled={!isInputValid} onClick={postHandler}>Post</Btn>\r\n                    </div>\r\n                </ControlCard>\r\n                {/* <InfoCardContainer> */}\r\n                <Card>\r\n                    <CardTitle>Job Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Job Title</Label>\r\n                        <Input id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Salary</Label>\r\n                        <Input value={salary} onChange={(e) => setSalary(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Description</Label>\r\n                        <Textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n\r\n\r\n                    <CardTitle>Company Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Name</Label>\r\n                        <Input value={company} onChange={(e) => setCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Location</Label>\r\n                        <Input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>About</Label>\r\n                        <Textarea value={aboutCompany} onChange={(e) => setAboutCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n\r\n                    <CardTitle>Requirements</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Experience</Label>\r\n                        <Input value={experience} onChange={(e) => setExperience(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Eligibility</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(eligibilities, setEligibilities, eligibilitiesVal)\r\n                        }}\r\n                        >\r\n                            <CustomInput value={eligibilitiesVal} onChange={(e) => setEligibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton >Add</AddButton>\r\n                        </InputWithButton>\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Responsibilities</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(responsibilities, setResponsibilities, responsibilitiesVal)\r\n                        }}>\r\n                            <CustomInput value={responsibilitiesVal} onChange={(e) => setResponsibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton>Add</AddButton>\r\n                        </InputWithButton>\r\n\r\n                    </InputContainer>\r\n\r\n                </Card>\r\n                {/* <RequirementCard>\r\n                        <CardTitle>Eligibility</CardTitle>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n                        <CustomLabel>Responsibilities</CustomLabel>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n                    </RequirementCard> */}\r\n                {/* </InfoCardContainer> */}\r\n\r\n            </Form>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PostJob\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n`\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    background-color: green;\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    margin-bottom: 20px;\r\n    padding: 0px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid #276eb0;\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n//Changes\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { searchJobs } from '../Actions/JobsActions'\r\nimport { searchCandidates } from '../Actions/CandidateActions'\r\n\r\nfunction SearchComponent({ setValue }) {\r\n\r\n    const [val, setVal] = useState()\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setValue(val)\r\n\r\n    }\r\n    return (\r\n        <SearchContainer onSubmit={searchHandler}>\r\n            <SearchInput value={val} onChange={(e) => setVal(e.target.value)} type=\"text\" placeholder=\"Search\" />\r\n            <SearchBtn>Search</SearchBtn>\r\n        </SearchContainer>\r\n    )\r\n}\r\n\r\nexport default SearchComponent\r\n\r\nconst SearchContainer = styled.form`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n`\r\nconst SearchInput = styled.input`\r\n    flex: 1;\r\n    border: 1px solid #cecece;\r\n    padding: 6px 12px;\r\n     &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst SearchBtn = styled.button`\r\n    border-style: none;\r\n    padding: 5px 11px;\r\n    background-color: #276eb0;\r\n    border: 1px solid #276eb0;\r\n    color: white;\r\n    transition: all 0.2s;\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: #276eb0;\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction TableComponent({ data, type, saveCurrent }) {\r\n    const dispatch = useDispatch()\r\n    console.log(data)\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        if (type === 'job') {\r\n            const URI = `${API_URI}job/${id}`\r\n            try {\r\n                console.log('running')\r\n                const { data } = await axios.get(URI)\r\n                dispatch(saveCurrent(data))\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else if (type === 'candidate') {\r\n            console.log(type)\r\n\r\n\r\n            dispatch(saveCurrent(data))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const renderList = () => {\r\n        if (data) {\r\n            return data.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n\r\n                return <StyledNavlink key={item._id} to={type === 'job' ? `/job/${item._id}` : `/candidate/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{type === 'job' ? item.title : item.name}</Element>\r\n                        <Element>{type === 'job' ? item.company : item.number}</Element>\r\n                        <Element>{type === 'job' ? item.location : item.jobs[0].status}</Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {renderList()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableComponent\r\n\r\n\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { saveAllJobs } from '../Actions/JobsActions'\r\nimport { saveAllCandidates } from '../Actions/CandidateActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\n\r\n\r\nfunction DetailsTable({ data }) {\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n\r\n    const allData = jobs.len\r\n    console.log(jobs)\r\n    console.log(candidates)\r\n\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState()\r\n\r\n\r\n\r\n\r\n\r\n    // console.log(type)\r\n    // const allData = type === 'job' ? jobs : candidates\r\n\r\n    // console.log(allData)\r\n    // const filteredData = type === 'job' ? filteredJobs : filteredcandidates\r\n    // const currentData = searchVal !== undefined ? filteredData : allData\r\n\r\n    // console.log(currentData)\r\n\r\n    return (\r\n        <CustomCard>\r\n            {/* <SearchComponent setValue={setSearchVal} />\r\n            {filteredData && filteredData.length === 0 ? <p>No Result found for {searchVal}.</p> : <TableComponent data={currentData} />} */}\r\n            {/* {filteredData && filteredData.length === 0 ? <p>No Result found for {searchVal}.</p> : <TableComponent data={currentData} />} */}\r\n        </CustomCard>\r\n    )\r\n}\r\n\r\nexport default DetailsTable\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title, FlexDiv, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveAllJobs, searchJobs, saveCurrentJob } from '../Actions/JobsActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport DetailsTable from '../Components/DetailsTable'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\n\r\nfunction JobsListPage() {\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState(undefined)\r\n    useEffect(() => {\r\n\r\n        axios.get(API_URI)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllJobs(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchJobs(searchVal))\r\n        }\r\n    }, [searchVal])\r\n\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n    const currentData = searchVal === undefined ? jobs : filteredJobs\r\n\r\n    const getDataHandler = async (id) => {\r\n        const URI = `${API_URI}job/${id}`\r\n        try {\r\n            console.log('running')\r\n            const { data } = await axios.get(URI)\r\n            dispatch(saveCurrentJob(data))\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            return currentData.map(item => {\r\n                const date = new Date(item.createdAt).toDateString()\r\n                return <StyledNavlink key={item._id} to={`/job/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.title}</Element>\r\n                        <Element>{item.company}</Element>\r\n                        <Element>{item.location}</Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        } else {\r\n            return <img src={Loader} />\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredJobs && filteredJobs.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Job Title</HeadingElement>\r\n                <HeadingElement>Company</HeadingElement>\r\n                <HeadingElement>Location</HeadingElement>\r\n                <HeadingElement>Posted on</HeadingElement>\r\n            </List>\r\n\r\n            {renderItemList()}\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>Jobs List</Title>\r\n                <PostJob to=\"/postjob\">Post New Job</PostJob>\r\n            </FlexDiv>\r\n\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                {renderTable()}\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default JobsListPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nconst PostJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`\r\n\r\nconst UnorderedList = styled.ul`\r\n    \r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`","import { statuscolors } from \"../Styles/StyledComponents\"\r\n\r\n\r\nexport const statusColor = (status) => {\r\n    if (status === 'Selected') {\r\n        return { color: statuscolors.success, bgColor: statuscolors.successBg }\r\n    } else if (status === 'Called For Interview') {\r\n        return { color: statuscolors.pending, bgColor: statuscolors.pendingBg }\r\n    } else if (status === 'Applied') {\r\n        return { color: statuscolors.review, bgColor: statuscolors.reviewBg }\r\n    } else if (status === 'Rejected') {\r\n        return { color: statuscolors.failed, bgColor: statuscolors.failedBg }\r\n    }\r\n}\r\n\r\nexport const daysAgoCalculator = (date) => {\r\n    const secsInDay = 86400000\r\n    let currentDate = new Date()\r\n    const remainingSecs = currentDate - date\r\n    const days = remainingSecs / secsInDay\r\n    return Math.floor(days)\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nfunction InputComponent({ label, type, onChange, value }) {\r\n    return (\r\n        <InputContainer>\r\n            <Label>{label}</Label>\r\n\r\n            {\r\n                type === 'file' ? <Input required onChange={(e) => onChange(e.target.files[0])} type={type}></Input> :\r\n                    <Input required value={value} onChange={(e) => onChange(e.target.value)} type={type}></Input>\r\n\r\n            }\r\n        </InputContainer>\r\n    )\r\n}\r\n\r\nexport default InputComponent\r\n\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    color: #00000073;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Input = styled.input`\r\n    padding: 3px 10px;\r\n    border: 1px solid #0000002e;\r\n    background-color: white;\r\n    border-radius: 7px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`","import React, { useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { Card, StyledButton, StyledNavlink } from '../Common/Styles/StyledComponents'\r\nimport ExpSVG from '../Assets/Icons/exp.svg'\r\nimport LocationSVG from '../Assets/Icons/location.svg'\r\nimport SalarySVG from '../Assets/Icons/salary.svg'\r\nimport { daysAgoCalculator } from '../Common/Functions/helperFunctions'\r\nimport InputComponent from './InputComponent'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\n\r\n//name\r\n//email,\r\n//number\r\n//education,\r\n//skills,\r\n//resume\r\n\r\n\r\nfunction JobCard({ job, canApply }) {\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [education, setEducation] = useState('')\r\n    const [skills, setSkills] = useState('')\r\n    const [resume, setResume] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const { title, company, experience, salary, location, createdAt } = job\r\n\r\n    const openDetailsHandler = () => {\r\n        dispatch(saveCurrentJob(job))\r\n    }\r\n\r\n    // const isInputValid = name && email && contactNumber && education && skills\r\n\r\n    const applyHandler = async () => {\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            number: contactNumber,\r\n            education,\r\n            skills,\r\n            jobs: {\r\n                id: job._id,\r\n                status: 'Applied'\r\n            }\r\n        }\r\n        // console.log(resume)\r\n\r\n        // // if (isInputValid) {\r\n        // //     toggle()\r\n        // // }\r\n\r\n        // console.log(data)\r\n        // console.log(formData)\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const postMessage = () => {\r\n        const date = new Date(createdAt)\r\n        const days = daysAgoCalculator(date)\r\n        if (days === 1) {\r\n            return 'Yesterday'\r\n        } else if (days === 0) {\r\n            return 'Today'\r\n        } else {\r\n            return `${days} days ago`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card onClick={openDetailsHandler}>\r\n            <StyledNavlink to={`/job/${job._id}`}>\r\n                <FlexDiv>\r\n                    <DetailsContainer>\r\n                        <JobTitle>{title}</JobTitle>\r\n                        <Company>{company}</Company>\r\n                        <Details><Icon src={ExpSVG} />  {experience}</Details>\r\n                        <Details><Icon src={SalarySVG} /> {salary}</Details>\r\n                        <Details><Icon src={LocationSVG} /> {location}</Details>\r\n                    </DetailsContainer>\r\n\r\n\r\n                </FlexDiv>\r\n                <Posted>Posted: <MessageSpan>{postMessage()}</MessageSpan></Posted>\r\n            </StyledNavlink>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default JobCard\r\n\r\n\r\n// Styled Components\r\n\r\n\r\nconst FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    @media (max-width: 500px){\r\n        flex-direction: column;  \r\n        align-items: flex-start; \r\n    }\r\n`\r\n\r\nconst DetailsContainer = styled.div`\r\n\r\n`\r\n\r\nconst ApplyButton = styled.button`\r\n    ${StyledButton};\r\n     @media (max-width: 500px){\r\n        margin-top: 20px;\r\n    }\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n\r\n`\r\n\r\n\r\nconst MessageSpan = styled.span`\r\n    color: black;\r\n`\r\n\r\nconst Posted = styled.p`    \r\n    margin: 10px 0px 0px 0px;\r\n    padding: 10px 0px 0px 0px;\r\n    color: grey;\r\n    border-top: 1px solid #0000001f;\r\n   \r\n`\r\n\r\nconst Company = styled.p`\r\n    margin: 10px 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-right: 10px;\r\n`\r\n\r\nconst JobTitle = styled.h1`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\n\r\nconst Details = styled.p`\r\nopacity: 0.6;\r\n    width: fit-content;\r\n    text-align: left;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\n\r\nconst CancelBtn = styled.button`\r\n    color: red;\r\n    padding: 5px 8px;\r\n    width: 100px;\r\n    border-radius: 0px;\r\n        background-color:transparent;\r\n    \r\n    border: 1px solid red;\r\n\r\n    transition: all 0.3s;\r\n\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst SendBtn = styled.button`\r\n    color: white;\r\n    padding: 5px 8px;\r\n\r\n    width: 100px;\r\n    border-radius: 0px;\r\n    background-color: green;\r\n    border: 1px solid green;\r\n     transition: all 0.3s;\r\n    &:hover{\r\n        background-color:transparent;\r\n        color: green;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3\r\n    }\r\n`\r\n\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Title, Card, FlexDiv, StyledButton, Status } from '../Common/Styles/StyledComponents'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport { saveAllCandidates, searchCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport styled, { css } from 'styled-components'\r\nimport { NavLink, useLocation, Redirect } from 'react-router-dom'\r\nimport JobCard from '../Components/JobCard'\r\nimport LocationSVG from '../Assets/Icons/location.svg'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\ntoast.configure()\r\n\r\nfunction JobDetailsPage(props) {\r\n    const [searchVal, setSearchVal] = useState()\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [allCandidates, setAllCandidates] = useState()\r\n    const [isJobDeleted, setIsJobDeleted] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const { job } = useSelector(state => state.jobsData)\r\n\r\n\r\n\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(saveAllCandidates(job && job.user))\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchCandidates(searchVal))\r\n        }\r\n    }, [searchVal, job])\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    console.log(candidates)\r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    console.log(currentData)\r\n    const id = props.match.params.id\r\n    const editURL = `edit/${id}`\r\n\r\n    const deleteJobHandler = async () => {\r\n        try {\r\n            await axios.delete(`${API_URI}${job && job._id}`)\r\n            setIsJobDeleted(true)\r\n            toast.success('Job deleted succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in job deletion', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        console.log(job.user)\r\n\r\n        const currentCandidate = job.user.find(item => {\r\n            return item._id === id\r\n        })\r\n\r\n        console.log(currentCandidate)\r\n        dispatch(saveCurrentCandidate(currentCandidate))\r\n    }\r\n\r\n    const renderList = (data) => {\r\n        if (data) {\r\n            if (data.length > 0) {\r\n                return data.map(item => <li key={item}>{item}</li>)\r\n            }\r\n            return 'No data'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            return currentData.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n\r\n                return <StyledNavlink key={item._id} to={`/candidate/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.name}</Element>\r\n                        <Element>{item.number}</Element>\r\n                        <Element><Status {...statusColor(item.jobs[0].status)}>{item.jobs[0].status}</Status> </Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderTable = () => {\r\n        if (filteredcandidates && filteredcandidates.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Name</HeadingElement>\r\n                <HeadingElement>Contact No.</HeadingElement>\r\n                <HeadingElement>Status</HeadingElement>\r\n                <HeadingElement>Applied on</HeadingElement>\r\n            </List>\r\n\r\n\r\n            {renderItemList()}\r\n\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    const renderTab = () => {\r\n\r\n        switch (activeTab) {\r\n            case 1:\r\n                return <CustomCard>\r\n                    <SearchComponent setValue={setSearchVal} />\r\n\r\n                    {renderTable()}\r\n\r\n                </CustomCard>\r\n\r\n            case 2:\r\n                return <CustomCard>\r\n\r\n                    <FlexHeader>\r\n                        <div>\r\n                            <Heading>Company</Heading>\r\n                            <Company>{job && job.company}</Company>\r\n                        </div>\r\n                        <Location><img src={LocationSVG} /> {job && job.location}</Location>\r\n                    </FlexHeader>\r\n\r\n                    <Section>\r\n                        <Heading>Description</Heading>\r\n                        <p>{job && job.description}</p>\r\n                    </Section>\r\n                    <Section>\r\n                        <p><Heading>Salary:</Heading> {job && job.salary}</p>\r\n                        <p><Heading>Experience:</Heading> {job && job.experience}</p>\r\n\r\n                    </Section>\r\n                    <Section>\r\n                        <Heading>Eligibilities</Heading>\r\n                        <Ul>\r\n                            {renderList(job && job.eligibility)}\r\n                        </Ul>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Responsiblities</Heading>\r\n                        <Ul>\r\n                            {renderList(job && job.responsibilities)}\r\n                        </Ul>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>About</Heading>\r\n                        <p>{job && job.aboutCompany}</p>\r\n                    </Section>\r\n                </CustomCard>\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>{job && job.title}</Title>\r\n                <Div>\r\n                    <EditNav to={editURL}><EditBtn>Edit</EditBtn></EditNav>\r\n                    <DeleteBtn onClick={deleteJobHandler} >Delete</DeleteBtn>\r\n                </Div>\r\n            </FlexDiv>\r\n\r\n            <ButtonContainer>\r\n                <Tab color={activeTab === 1 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(1)}>Applicant List</Tab>\r\n                <Tab color={activeTab === 2 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(2)}>Job Details</Tab>\r\n            </ButtonContainer>\r\n            {renderTab()}\r\n\r\n\r\n\r\n            {isJobDeleted && <Redirect to=\"/jobs\" />}\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default JobDetailsPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    margin: 0px 20px 20px 20px;\r\n    flex: 1;   \r\n`\r\nconst Div = styled.div`\r\n\r\n`\r\n\r\nconst EditNav = styled(NavLink)`\r\n   text-decoration: none;\r\n   color: white;\r\n\r\n`\r\n\r\nconst EditBtn = styled.button`\r\n    ${StyledButton}\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    border-radius: 0px;\r\n`\r\n\r\nconst DeleteBtn = styled.button`\r\n    font-weight: bold;\r\n    border-style: none;\r\n    border: 1px solid red;\r\n    color: red;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n    text-align: left;\r\n    padding: 0px 0px 0px 20px;\r\n    margin: 20px 0px 0px 0px;\r\n`\r\n\r\nconst Tab = styled.button`\r\n    font-weight: bold;\r\n    width: 150px;\r\n    padding: 10px 10px;\r\n    border-style: none;\r\n    background-color: ${props => props && props.color};\r\n    box-shadow: -1px -1px 6px 0px #0000001f;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst FlexHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n\r\n`\r\n\r\nconst Company = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.5em;\r\n\r\n`\r\n\r\nconst Location = styled.p`\r\n    ${RemoveSpacing}\r\n    opacity: 0.5;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    padding: 0px;\r\n    margin: 10px 0px 0px 15px;\r\n\r\n`\r\n\r\n\r\n\r\nconst UnorderedList = styled.ul`\r\n\r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Title, FlexDiv, Container, CustomCard, Card, statuscolors } from '../Common/Styles/StyledComponents'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useGetData } from '../Hooks/getData'\r\nimport styled, { css } from 'styled-components'\r\nimport JobSVG from '../Assets/Icons/job.svg'\r\nimport PeopleSVG from '../Assets/Icons/people.svg'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction DashboardPage() {\r\n    const [info, setInfo] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URI}info/counts`)\r\n            .then(({ data }) => setInfo(data))\r\n            .catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(info)\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>Dashboard</Title>\r\n            </FlexDiv>\r\n            <CardContainer>\r\n                <StyledLink to=\"/jobs\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Jobs</InfoTitle>\r\n                            <InfoData>{info && info.jobsCount ? info.jobsCount : <img src={Loader} />}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.reviewBg} src={JobSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n                <StyledLink to=\"/candidates\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Candidates</InfoTitle>\r\n                            <InfoData>{info && info.usersCount ? info.usersCount : <img src={Loader} />}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.pendingBg} src={PeopleSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n            </CardContainer>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n\r\n\r\nconst StyledLink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    }\r\n`\r\n\r\nconst NoSpacing = css`\r\n\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n`\r\nconst InfoTitle = styled.p`\r\n    ${NoSpacing}\r\n    \r\n    opacity: 0.5;\r\n    font-weight: bold;\r\n    font-size: 0.9em;\r\n`\r\n\r\nconst InfoData = styled.p`\r\n    ${NoSpacing}\r\n    font-weight: bold;\r\n    font-size: 3em;\r\n`\r\n\r\nconst InfoCard = styled(Card)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 250px;\r\n    height: 100px;\r\n    padding: 20px 30px;\r\n    transition: all 0.3s;\r\n    &:hover{\r\n        transform:scale(1.05)\r\n    }\r\n`\r\n\r\nconst Icon = styled.img`\r\nwidth: 50px;\r\n    background-color: ${props => props && props.color};\r\n    border-radius: 50px;\r\n    padding: 6px;\r\n\r\n`\r\n\r\nconst CardContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveAllCandidates } from '../Actions/CandidateActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\n\r\n\r\nfunction CandidateDetailsPage() {\r\n    // const { jobs } = useSelector(state => state.jobsdata)\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState()\r\n    console.log(searchVal)\r\n    useEffect(() => {\r\n\r\n        axios.get(API_URI)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllCandidates(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    }, []);\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    console.log(searchVal)\r\n    const currentData = searchVal !== undefined ? filteredcandidates : candidates\r\n    console.log(currentData)\r\n\r\n    return (\r\n        <Container>\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                <Title>Jobs Detail</Title>\r\n                <TableComponent data={currentData} />\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CandidateDetailsPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`","import React, { useState } from 'react'\r\nimport { Container, Title, FlexDiv, Card, CardTitle } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\ntoast.configure()\r\n\r\nfunction ApplicantDetailsPage() {\r\n    const [isStatusChanged, setIsStatusChanged] = useState(false)\r\n    const history = useHistory()\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n    const { job } = useSelector(state => state.jobsData)\r\n\r\n    console.log(candidate)\r\n    console.log(job)\r\n\r\n    const changeStatusHandler = async (status) => {\r\n        const URL = `${API_URI}status/${candidate && candidate._id}?status=${status}`\r\n        try {\r\n            await axios.patch(URL)\r\n            setIsStatusChanged(true)\r\n            toast.success('Status Updated', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in status updation', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const downloadHandler = async () => {\r\n        const URL = `${API_URI}download/${candidate && candidate._id}`\r\n        console.log(URL)\r\n        try {\r\n            const data = await axios.get(URL)\r\n            const blob = await data.blob()\r\n            const URL = window.URL.createObjectURL(blob)\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //\"5f1ab1ed439e2d0017643a58\"\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>{candidate && candidate.name}</Title>\r\n                <Status color={statusColor(candidate && candidate.jobs[0].status)}>\r\n                    {candidate && candidate.jobs[0].status}\r\n                </Status>\r\n            </FlexDiv>\r\n\r\n            <ControlCard>\r\n                <CardTitle>Controls</CardTitle>\r\n                <div>\r\n                    <Btn color={'#d21e11'} onClick={() => changeStatusHandler(3)}>Reject</Btn>\r\n                    <Btn color={'#088400'} onClick={() => changeStatusHandler(2)}>Select</Btn>\r\n                    <Btn color={'#088400'} onClick={() => changeStatusHandler(1)}>Call for Interview</Btn>\r\n                </div>\r\n\r\n            </ControlCard>\r\n            <Card>\r\n                <Section>\r\n                    <Heading>Skills</Heading>\r\n                    <Content>{candidate && candidate.skills}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Education</Heading>\r\n                    <Content>{candidate && candidate.education}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Contact No.</Heading>\r\n                    <Content>{candidate && candidate.number}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Email</Heading>\r\n                    <Content>{candidate && candidate.email}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Resume</Heading>\r\n                    <DownloadLink href={`${API_URI}download/${candidate && candidate._id}`} target=\"_blank\" color={'#088400'}>Download</DownloadLink>\r\n                </Section>\r\n\r\n            </Card>\r\n\r\n\r\n            {/* {isStatusChanged && <Redirect to={`${API_URI}jobs/${job._id}`} />} */}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ApplicantDetailsPage\r\n\r\n\r\n//Common ------------------------------------------\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.3em;\r\n`\r\n\r\nconst Status = styled.p`\r\n    width: fit-content;\r\n    padding: 3px 10px;\r\n    border: 1px solid;\r\n    border-radius: 50px;\r\n    font-size: 0.9em;\r\n    margin: 0px;\r\n    color: ${props => props && props.color};\r\n    border: 1px solid ${props => props && props.color};\r\n`\r\n\r\n\r\n\r\nconst StyledBtn = css`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    background-color: ${props => props && props.color};\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst Btn = styled.button`\r\n    ${StyledBtn}\r\n`\r\n\r\nconst DownloadLink = styled.a`\r\n    ${StyledBtn}\r\n    text-decoration: none;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 30px;\r\n\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title, FlexDiv, StyledButton, Status } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\n\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport DetailsTable from '../Components/DetailsTable'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { searchCandidates, saveAllCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\n\r\n\r\nfunction CandidatesListPage() {\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState(undefined)\r\n    useEffect(() => {\r\n        const URL = `${API_URI}all/candidate`\r\n        axios.get(URL)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllCandidates(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchCandidates(searchVal))\r\n        }\r\n    }, [searchVal])\r\n\r\n\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        const currentCandidate = candidates.find(item => item._id === id)\r\n        dispatch(saveCurrentCandidate(currentCandidate))\r\n\r\n    }\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            return currentData.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n                return <StyledNavlink key={item._id} to={`/applied-job/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.name}</Element>\r\n                        <Element>{item.number}</Element>\r\n                        <Element><Status {...statusColor(item.jobs[0].status)}>{item.jobs[0].status}</Status> </Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredcandidates && filteredcandidates.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Name</HeadingElement>\r\n                <HeadingElement>Contact No</HeadingElement>\r\n                <HeadingElement>Status</HeadingElement>\r\n                <HeadingElement>Applied on</HeadingElement>\r\n            </List>\r\n\r\n            {renderItemList()}\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>Candidate List</Title>\r\n            </FlexDiv>\r\n\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                {renderTable()}\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CandidatesListPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nconst PostJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`\r\n\r\nconst UnorderedList = styled.ul`\r\n    \r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { Container, FlexDiv, Title, Card, StyledNavlink } from '../Common/Styles/StyledComponents'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styled, { css } from 'styled-components'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { saveAllJobs, searchJobs, saveAppliedJobs, searchAppliedJobs } from '../Actions/JobsActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\n\r\n\r\nfunction AppliedJobList() {\r\n    const dispatch = useDispatch()\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [searchVal, setSearchVal] = useState()\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n\r\n    console.log(candidate)\r\n\r\n    useLayoutEffect(() => {\r\n        const URL = `${API_URI}user/${candidate && candidate._id}`\r\n        axios.get(URL)\r\n            .then(({ data }) => {\r\n                console.log(data)\r\n                dispatch(saveAppliedJobs(data.jobs))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchAppliedJobs(searchVal))\r\n        }\r\n    }, [searchVal, candidate])\r\n\r\n    const { appliedJobs, filteredAppliedJobs } = useSelector(state => state.jobsData)\r\n    console.log(appliedJobs)\r\n    const currentData = searchVal === undefined ? appliedJobs : filteredAppliedJobs\r\n    console.log(currentData)\r\n\r\n    const downloadHandler = () => {\r\n        const URL = `${API_URI}download/${candidate && candidate._id}`\r\n        console.log(URL)\r\n        axios.get(URL).then(data => console.log(data)).catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            console.log(currentData)\r\n            // POPULATE PENDING//////////////////////////////////////////////\r\n            return currentData.map(item => {\r\n                console.log(item)\r\n                const date = new Date(item.id.createdAt).toDateString()\r\n\r\n                return <List>\r\n                    <Element>{item.id.title}</Element>\r\n                    <Element>{item.id.company}</Element>\r\n                    <Element>{item.id.location}</Element>\r\n                    <Element>{date}</Element>\r\n                </List>\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredAppliedJobs && filteredAppliedJobs.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Job Title</HeadingElement>\r\n                <HeadingElement>Company</HeadingElement>\r\n                <HeadingElement>Location</HeadingElement>\r\n                <HeadingElement>Posted on</HeadingElement>\r\n            </List>\r\n\r\n\r\n            {renderItemList()}\r\n\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    const renderTab = () => {\r\n\r\n        switch (activeTab) {\r\n            case 1:\r\n                return <CustomCard>\r\n                    <SearchComponent setValue={setSearchVal} />\r\n\r\n                    {renderTable()}\r\n\r\n                </CustomCard>\r\n\r\n            case 2:\r\n                return <CustomCard>\r\n\r\n                    <Section>\r\n                        <Heading>Skills</Heading>\r\n                        <Content>{candidate && candidate.skills}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Education</Heading>\r\n                        <Content>{candidate && candidate.education}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Contact No.</Heading>\r\n                        <Content>{candidate && candidate.number}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Email</Heading>\r\n                        <Content>{candidate && candidate.email}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Resume</Heading>\r\n                        <DownloadLink href={`${API_URI}download/${candidate && candidate._id}`} target=\"_blank\" color={'#088400'}>Download</DownloadLink>\r\n                    </Section>\r\n\r\n                </CustomCard>\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>{candidate && candidate.name}</Title>\r\n                <div>\r\n                    <DeleteBtn>Delete</DeleteBtn>\r\n                </div>\r\n            </FlexDiv>\r\n\r\n            <ButtonContainer>\r\n                <Tab color={activeTab === 1 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(1)}>Job List</Tab>\r\n                <Tab color={activeTab === 2 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(2)}>Candidate Details</Tab>\r\n            </ButtonContainer>\r\n            {renderTab()}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppliedJobList\r\n\r\nconst DeleteBtn = styled.button`\r\n    font-weight: bold;\r\n    border-style: none;\r\n    border: 1px solid red;\r\n    color: red;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\nconst ButtonContainer = styled.div`\r\n    text-align: left;\r\n    padding: 0px 0px 0px 20px;\r\n    margin: 20px 0px 0px 0px;\r\n`\r\n\r\nconst Tab = styled.button`\r\n    font-weight: bold;\r\n    width: 150px;\r\n    padding: 6px 10px;\r\n    border-style: none;\r\n    background-color: ${props => props && props.color};\r\n    box-shadow: -1px -1px 6px 0px #0000001f;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    margin: 0px 20px 20px 20px;\r\n    flex: 1;   \r\n`\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\n\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.3em;\r\n\r\n`\r\nconst UnorderedList = styled.ul`\r\n\r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledBtn = css`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    background-color: ${props => props && props.color};\r\n`\r\n\r\nconst Btn = styled.button`\r\n    ${StyledBtn}\r\n`\r\n\r\nconst DownloadLink = styled.a`\r\n    ${StyledBtn}\r\n    text-decoration: none;\r\n`","import React, { useState } from 'react'\r\nimport { Card, Title, CardTitle } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nfunction EditJobPage() {\r\n\r\n    const { job } = useSelector(state => state.jobsData)\r\n    console.log(job)\r\n\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n\r\n    const [title, setTitle] = useState(job && job.title)\r\n    const [salary, setSalary] = useState(job && job.salary)\r\n    const [description, setDescription] = useState(job && job.description)\r\n\r\n    const [company, setCompany] = useState(job && job.company)\r\n    const [aboutCompany, setAboutCompany] = useState(job && job.aboutCompany)\r\n    const [location, setLocation] = useState(job && job.location)\r\n\r\n    const [experience, setExperience] = useState(job && job.experience)\r\n\r\n    const [eligibilitiesVal, setEligibilitiesVal] = useState()\r\n    const [eligibilities, setEligibilities] = useState((job && job.eligibility) || [])\r\n\r\n    const [responsibilitiesVal, setResponsibilitiesVal] = useState()\r\n    const [responsibilities, setResponsibilities] = useState((job && job.responsibilities) || [])\r\n\r\n    const isInputValid = title && description && company && aboutCompany && location && experience && eligibilities.length > 0 && responsibilities.length > 0\r\n\r\n    const resetHandler = () => {\r\n        setTitle(job && job.title)\r\n        setSalary(job && job.salary)\r\n        setDescription(job && job.description)\r\n        setCompany(job && job.company)\r\n        setLocation(job && job.location)\r\n        setAboutCompany(job && job.aboutCompany)\r\n        setExperience(job && job.experience)\r\n        setEligibilities(job && job.eligibility)\r\n        setEligibilitiesVal('')\r\n        setResponsibilities(job && job.responsibilities)\r\n        setEligibilitiesVal('')\r\n        document.getElementById('update-title').focus()\r\n    }\r\n\r\n    const updateHandler = async () => {\r\n        const data = {\r\n            title,\r\n            salary: salary ? salary : 'Not disclosed',\r\n            description,\r\n            company,\r\n            aboutCompany,\r\n            location,\r\n            experience,\r\n            eligibility: eligibilities,\r\n            responsibilities\r\n        }\r\n        console.log(data)\r\n        try {\r\n            const response = await axios.put(`${API_URI}${job && job._id}`, data)\r\n            setIsUpdated(true)\r\n            toast.success('Job Updated succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in job  succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n    const deleteItemHandler = (data, item, setCurrState) => {\r\n        const FilteredData = data.filter(el => el !== item)\r\n        setCurrState(FilteredData)\r\n    }\r\n\r\n    const renderList = (data, setCurrState) => {\r\n        const list = data.map(item => {\r\n            return <Element key={item}>\r\n                <ElementP>{item}</ElementP>\r\n                <Icon onClick={() => deleteItemHandler(data, item, setCurrState)} src={CloseSVG} />\r\n            </Element>\r\n        })\r\n\r\n        return list.length > 0 ? list : 'Empty'\r\n    }\r\n\r\n    const addHandler = (currState, setCurrState, item) => {\r\n        const TEMP = [...currState]\r\n        TEMP.push(item)\r\n        setCurrState(TEMP)\r\n        setEligibilitiesVal('')\r\n        setResponsibilitiesVal('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MainTitle>Update Job</MainTitle>\r\n            <Form>\r\n                <ControlCard>\r\n                    <CardTitle>Controls</CardTitle>\r\n                    <div>\r\n                        <Btn color={'#d21e11'} onClick={resetHandler} >Reset</Btn>\r\n                        <Btn color={'#088400'} disabled={!isInputValid} onClick={updateHandler}>Update</Btn>\r\n                    </div>\r\n                </ControlCard>\r\n                <InfoCardContainer>\r\n                    <Card>\r\n                        <CardTitle>Job Details</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Job Title</Label>\r\n                            <Input id=\"update-title\" value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Salary</Label>\r\n                            <Input value={salary} onChange={(e) => setSalary(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Description</Label>\r\n                            <Textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardTitle>Company Details</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Name</Label>\r\n                            <Input value={company} onChange={(e) => setCompany(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Location</Label>\r\n                            <Input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>About</Label>\r\n                            <Textarea value={aboutCompany} onChange={(e) => setAboutCompany(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardTitle>Requirements</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Experience</Label>\r\n                            <Input value={experience} onChange={(e) => setExperience(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Eligibility</Label>\r\n                            <InputWithButton onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                                addHandler(eligibilities, setEligibilities, eligibilitiesVal)\r\n                            }}\r\n                            >\r\n                                <CustomInput value={eligibilitiesVal} onChange={(e) => setEligibilitiesVal(e.target.value)} type=\"text\" />\r\n                                <AddButton >Add</AddButton>\r\n                            </InputWithButton>\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Responsibilities</Label>\r\n                            <InputWithButton onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                                addHandler(responsibilities, setResponsibilities, responsibilitiesVal)\r\n                            }}>\r\n                                <CustomInput value={responsibilitiesVal} onChange={(e) => setResponsibilitiesVal(e.target.value)} type=\"text\" />\r\n                                <AddButton>Add</AddButton>\r\n                            </InputWithButton>\r\n\r\n                        </InputContainer>\r\n\r\n                    </Card>\r\n                    <RequirementCard>\r\n                        <CardTitle>Eligibility</CardTitle>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n                        <CustomLabel>Responsibilities</CustomLabel>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n                    </RequirementCard>\r\n                </InfoCardContainer>\r\n\r\n            </Form>\r\n            {isUpdated && <Redirect to=\"/jobs\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditJobPage\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n`\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    background-color: green;\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    margin-bottom: 20px;\r\n    padding: 0px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid #276eb0;\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    background-color: ${props => props && props.color};\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n`\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`","import React, { useState } from 'react'\r\nimport { Card, themeColor, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { login } from '../Actions/AuthActions'\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo.svg'\r\nimport User from '../Assets/Icons/user.svg'\r\nimport Password from '../Assets/Icons/password.svg'\r\n\r\nfunction SignInPage() {\r\n    const dispatch = useDispatch()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const { isAuthenticated } = useSelector(state => state.authData)\r\n    console.log(isAuthenticated)\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault()\r\n        const URL = `${API_URI}login`\r\n\r\n        try {\r\n            const data = {\r\n                name: username,\r\n                password\r\n            }\r\n\r\n            const loginData = await axios.post(URL, data)\r\n            dispatch(login(true))\r\n        } catch (err) {\r\n            dispatch(login(false))\r\n        }\r\n    }\r\n    return (\r\n        <SiginContainer>\r\n\r\n            <SigninSubContainer>\r\n                <div>\r\n                    <BrandLogo src={CompanyLogo} />\r\n                </div>\r\n                <SigninCard>\r\n                    <SiginTitle>Admin</SiginTitle>\r\n                    {/* <SiginSubTitle>to Admin Portal</SiginSubTitle> */}\r\n                    <SigninForm onSubmit={loginHandler}>\r\n                        <InputContainer>\r\n                            <Icon src={User} />\r\n                            <Input value={username} onChange={(e) => setUsername(e.target.value)} type=\"text\" placeholder=\"Username\" />\r\n                        </InputContainer>\r\n\r\n                        <InputContainer>\r\n                            <Icon src={Password} />\r\n                            <Input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\r\n                        </InputContainer>\r\n                        <Login>Login</Login>\r\n                    </SigninForm>\r\n                </SigninCard>\r\n\r\n            </SigninSubContainer>\r\n        </SiginContainer>\r\n    )\r\n}\r\n\r\nexport default SignInPage\r\n\r\n\r\nconst SiginTitle = styled.h2`\r\n    color: ${themeColor};\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n    `\r\nconst SiginSubTitle = styled.h5`\r\n    color: ${themeColor};\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst SiginContainer = styled.div`\r\n    background-color: #f4f4f4;\r\n    height: 100vh;\r\n`\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 250px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst SigninSubContainer = styled.div`\r\npadding-top: 70px;\r\n    /* display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center; */\r\n`\r\n\r\nconst SigninCard = styled(Card)`\r\n    margin: auto;\r\n   \r\n    width:300px;\r\n    /* height:300px; */\r\n`\r\n\r\nconst SigninForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\n\r\nconst Login = styled.button`\r\n    ${StyledButton}\r\n    width: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    /* margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    background-color: #276eb0;\r\n    border-style: none;\r\n    color: white;\r\n    font-weight: bold; */\r\n\r\n`\r\nconst Icon = styled.img`\r\n    margin-right: 10px;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n`\r\n\r\nconst Input = styled.input`\r\nwidth: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #0000001f;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 1px solid ${themeColor};\r\n    }\r\n`\r\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport JobsPage from './Pages/JobsPage';\nimport CandidatePage from './Pages/CandidatePage';\nimport NavBar from './Components/NavBar';\nimport styled from 'styled-components'\nimport SideBar from './Components/SideBar';\nimport AddJobs from './Pages/PostJob';\nimport JobsListPage from './Pages/JobsListPage';\nimport JobDetailsPage from './Pages/JobDetailsPage';\nimport DashboardPage from './Pages/DashboardPage';\nimport PostJob from './Pages/PostJob';\nimport CandidateDetailsPage from './Pages/CandidateDetailsPage';\nimport ApplicantDetailsPage from './Pages/ApplicantDetailsPage';\nimport CandidatesListPage from './Pages/CandidatesListPage';\nimport AppliedJobList from './Pages/AppliedJobList';\nimport EditJobPage from './Pages/EditJobPage';\nimport SignInPage from './Pages/SignInPage';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n\n  const { isAuthenticated } = useSelector(state => state.authData)\n\n\n\n  const renderRoutes = () => {\n    return <>\n\n      <NavBar />\n      <MainDiv>\n        <SideBar />\n        <RightSideBar>\n\n\n          <Switch>\n            <Route path=\"/\" exact component={DashboardPage} />\n\n            <Route path=\"/postjob\" component={PostJob} />\n            <Route path=\"/jobs\" component={JobsListPage} />\n            <Route path=\"/job/edit/:id\" component={EditJobPage} />\n            <Route path=\"/job/:id\" component={JobDetailsPage} />\n\n            <Route path=\"/candidate/:id\" component={ApplicantDetailsPage} />\n            <Route path=\"/applied-job/:id\" component={AppliedJobList} />\n\n\n            <Route path=\"/candidates\" component={CandidatesListPage} />\n          </Switch>\n        </RightSideBar>\n\n      </MainDiv>\n    </>\n  }\n\n  const renderSignin = () => {\n    return <Route path=\"/\" component={SignInPage} />\n  }\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {isAuthenticated ? renderRoutes() : renderSignin()}\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n\nconst MainDiv = styled.div`\n  background-color: #276eb012;\n  display: flex;\n  width: 100%;\n  height: 92vh;\n  overflow: auto;\n`\nconst ComponentContainer = styled.div`\n  padding: 15px;\n`\n\nconst RightSideBar = styled.div`\n  width:100%;\n  overflow-y: scroll;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    jobs: [],\r\n    appliedJobs: [],\r\n    job: null,\r\n    filteredJobs: undefined,\r\n    filteredAppliedJobs: undefined\r\n}\r\n\r\nconst JobsReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case jobTypes.SAVE_ALL_JOBS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                jobs: payload\r\n            }\r\n\r\n        case jobTypes.SAVE_APPLIED_JOBS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                appliedJobs: payload\r\n            }\r\n\r\n        case jobTypes.SAVE_CURRENT_JOB:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                job: payload\r\n            }\r\n\r\n        case jobTypes.FILTER_SEARCH_JOBS:\r\n\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.jobs.filter(item => {\r\n                return item.title.toLowerCase().includes(searchVal)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredJobs: filterTemp\r\n            }\r\n\r\n        case jobTypes.FILTER_APPLIED_JOBS:\r\n\r\n            const searchAppliedJob = payload.toLowerCase()\r\n            console.log(searchAppliedJob)\r\n            const filterAppliedTemp = state.appliedJobs.filter(item => {\r\n                return item.title.toLowerCase().includes(searchAppliedJob)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredAppliedJobs: filterAppliedTemp\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default JobsReducer","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    candidates: [],\r\n    candidate: null,\r\n    filteredcandidates: undefined\r\n}\r\n\r\nconst CandidatesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case candidateTypes.SAVE_ALL_CANDIDATES:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidates: payload\r\n            }\r\n\r\n        case candidateTypes.SAVE_CURRENT_CANDIDATE:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidate: payload\r\n            }\r\n\r\n        case candidateTypes.FILTER_SEARCH_CANDITATE:\r\n\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.candidates.filter(item => {\r\n                return item.name.toLowerCase().includes(searchVal)\r\n            })\r\n            console.log(filterTemp)\r\n\r\n            return {\r\n                ...state,\r\n                filteredcandidates: filterTemp\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default CandidatesReducer","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false\r\n}\r\n\r\nconst AuthReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case authTypes.LOG_IN:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n\r\n        case authTypes.LOG_OUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import JobsReducer from './JobsReducer'\r\nimport CandidateReducer from './CandidatesReducer'\r\nimport AuthReducer from './AuthReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst RootReducer = combineReducers({\r\n    jobsData: JobsReducer,\r\n    candidateData: CandidateReducer,\r\n    authData: AuthReducer\r\n})\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport RootReducer from './Reducers/RootReducer';\n\nconst store = createStore(RootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}