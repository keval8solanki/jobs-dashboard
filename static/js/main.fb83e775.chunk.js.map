{"version":3,"sources":["Assets/Icons/loader.svg","Assets/Icons/close.svg","Assets/Icons/location.svg","Assets/Icons/fistbump-logo-white.svg","Assets/Icons/dashboard.svg","Assets/Icons/profile.svg","Assets/Icons/job-dashboard.svg","Assets/Icons/candidate.svg","Assets/Icons/exp.svg","Assets/Icons/salary.svg","Assets/Icons/job.svg","Assets/Icons/people.svg","Assets/Icons/fistbump-logo.svg","Assets/Icons/user.svg","Assets/Icons/password.svg","Assets/Icons/loader-white.svg","Common/Styles/StyledComponents.js","Pages/CandidatePage.js","ActionTypes/ActionTypes.js","Actions/AuthActions.js","Components/NavBar.js","Actions/CandidateActions.js","Actions/JobsActions.js","Components/SideBar.js","Endpoint.js","Pages/PostJob.js","Components/SearchComponent.js","Components/TableComponent.js","Components/DetailsTable.js","Pages/JobsListPage.js","Common/Functions/helperFunctions.js","Components/InputComponent.js","Components/JobCard.js","Pages/JobDetailsPage.js","Pages/DashboardPage.js","Pages/CandidateDetailsPage.js","Pages/ApplicantDetailsPage.js","Pages/CandidatesListPage.js","Pages/AppliedJobList.js","Pages/EditJobPage.js","Pages/SignInPage.js","Pages/ProfilePage.js","App.js","serviceWorker.js","Reducers/JobsReducer.js","Reducers/CandidatesReducer.js","Reducers/AuthReducer.js","Reducers/RootReducer.js","index.js"],"names":["module","exports","statuscolors","Card","styled","div","Title","p","StyledButton","css","CardTitle","FlexDiv","Container","Status","NavLink","props","bgColor","color","LoadingIcon","img","CandidatePage","jobTypes","candidateTypes","authTypes","login","payload","type","logout","NavBar","useDispatch","Header","StyledNavLink","to","BrandLogo","src","CompanyLogo","NavControls","button","header","saveCurrentCandidate","saveAllCandidates","searchCandidates","changeStatus","status","saveCurrentJob","activeStyles","backgroundColor","SideBar","useState","page","setPage","SidebarContainer","Routes","activeStyle","onClick","RouteIcon","DashboardSVG","RouteText","JobSVG","CandidateSVG","ProfileSVG","API_URI","toast","configure","PostJob","isJobPosted","setIsJobPosted","title","setTitle","salary","setSalary","description","setDescription","company","setCompany","aboutCompany","setAboutCompany","location","setLocation","experience","setExperience","eligibilitiesVal","setEligibilitiesVal","eligibilities","setEligibilities","responsibilitiesVal","setResponsibilitiesVal","responsibilities","setResponsibilities","postText","setPostText","isInputValid","length","resetHandler","document","getElementById","focus","postHandler","a","data","eligibility","console","log","axios","post","success","position","POSITION","BOTTOM_RIGHT","error","renderList","setCurrState","list","map","item","Element","key","ElementP","Icon","filter","el","deleteItemHandler","CloseSVG","EmptyMessage","addHandler","currState","TEMP","push","Form","MainTitle","ControlCard","Btn","disabled","Section","InputContainer","Label","Input","id","value","onChange","e","target","Textarea","InputWithButton","onSubmit","preventDefault","CustomInput","AddButton","Ul","label","InputStyles","textarea","input","form","ul","li","SearchComponent","setValue","val","setVal","SearchContainer","SearchInput","placeholder","SearchBtn","DetailsTable","JobsListPage","dispatch","undefined","searchVal","setSearchVal","useEffect","get","then","catch","err","useSelector","state","jobsData","jobs","filteredJobs","currentData","getDataHandler","URI","UnorderedList","HeadingElement","date","Date","createdAt","toDateString","_id","Loader","renderItemList","CustomCard","List","StyledNavlink","statusColor","span","h1","JobDetailsPage","activeTab","setActiveTab","isJobDeleted","setIsJobDeleted","job","useLayoutEffect","user","candidateData","candidates","filteredcandidates","match","params","editURL","deleteJobHandler","delete","currentCandidate","find","renderTable","name","number","Div","EditNav","EditBtn","DeleteBtn","Tab","FlexHeader","Heading","Location","LocationSVG","renderTab","ButtonContainer","RemoveSpacing","Company","DashboardPage","info","setInfo","CardContainer","StyledLink","InfoCard","InfoTitle","InfoData","jobsCount","usersCount","PeopleSVG","NoSpacing","ApplicantDetailsPage","setIsStatusChanged","candidate","useHistory","changeStatusHandler","URL","patch","style","justifyContent","marginRight","Content","skills","education","email","DownloadLink","href","StyledBtn","CandidatesListPage","AppliedJobList","appliedJobs","filteredAppliedJobs","EditJobPage","isUpdated","setIsUpdated","updateText","setUpdateText","updateHandler","put","SignInPage","username","setUsername","password","setPassword","isAuthenticated","authData","errorMessage","setErrorMessage","LoginText","setLoginText","reset","loginHandler","SiginContainer","SigninSubContainer","SigninCard","SiginTitle","SigninForm","User","Password","Login","Message","h2","h5","ProfilePage","LogoutBtn","margin","marginBottom","App","className","MainDiv","RightSideBar","path","exact","component","Boolean","window","hostname","initialState","JobsReducer","toLowerCase","filterTemp","includes","searchAppliedJob","filterAppliedTemp","CandidatesReducer","AuthReducer","RootReducer","combineReducers","CandidateReducer","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fb83e775.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.34573990.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.1b3c0f53.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.9f46df7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/fistbump-logo-white.0296bf0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.a07674e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.ae539f4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/job-dashboard.021b9f65.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.98741c4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/exp.48804530.svg\";","module.exports = __webpack_public_path__ + \"static/media/salary.cb6077d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.c62b1c08.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.7999010a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fistbump-logo.ef76c49a.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.393b4839.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.1ea93987.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-white.ceaa0781.svg\";","import styled, { css } from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const themeColor = '#2B96DC'\r\nexport const highlightColor = '#40CD8A'\r\n\r\nexport const statuscolors = {\r\n    pending: '#FFB223',\r\n    pendingBg: '#FFF5C4',\r\n\r\n    success: '#3EB93B',\r\n    successBg: '#E9FAE8',\r\n\r\n    failed: '#F1373A',\r\n    failedBg: '#FFE1DF',\r\n\r\n    review: '#0B7EE8',\r\n    reviewBg: '#E6F4FD'\r\n\r\n}\r\n\r\n\r\n// export const Container = styled.div`\r\n//     background-image: url(${DripImage});\r\n//     height: 80vh;\r\n//     background-repeat: no-repeat;\r\n//     background-position: top;\r\n// `\r\n\r\n\r\n\r\nexport const Card = styled.div`\r\n    background-color: white;\r\n    padding: 20px;\r\n    text-align: left;\r\n    box-shadow: 2px 2px 8px 3px #0000001c;\r\n    margin: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Grid = styled.div`\r\n    background-color: #276eb012;\r\n    display: grid;\r\n\tgap: 0rem;\r\n\trow-gap: 0rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n    @media (max-width: 400px) {\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    }\r\n`\r\n\r\nexport const Title = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n   \r\n`\r\n\r\nexport const StyledButton = css`\r\n    background-color: ${themeColor};\r\n    border: 1px solid ${themeColor};\r\n    padding: 10px;\r\n    width: 150px;\r\n    color: white;\r\n    font-weight: bold;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor};\r\n    }\r\n`\r\n\r\nexport const CardTitle = styled.p`\r\n    font-weight: bold;\r\n    margin: 0px 0px 20px 0px;\r\n    padding: 0px;\r\n    font-size: 1.2em;\r\n    color: grey;\r\n`\r\n\r\nexport const FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nexport const CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nexport const StyledNavlink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    text-decoration: none;\r\n\r\n    } \r\n    &:active{\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nexport const Status = styled.p`\r\n    width: fit-content;\r\n    padding: 3px 10px;\r\n    \r\n    border-radius: 50px;\r\n    font-size: 0.9em;\r\n    background-color: ${props => props && props.bgColor};\r\n    margin: 0px;\r\n    color: ${props => props && props.color};\r\n`\r\n\r\nexport const LoadingIcon = styled.img`\r\n    width: 30px;\r\n`","import React from 'react'\r\nimport { Card } from '../Common/Styles/StyledComponents'\r\n\r\nfunction CandidatePage() {\r\n    return (\r\n        <div>\r\n            <Card>\r\n                CandidatePage\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CandidatePage\r\n","export const jobTypes = {\r\n    SAVE_CURRENT_JOB: 'SAVE_CURRENT_JOB',\r\n    SAVE_ALL_JOBS: 'SAVE_ALL_JOBS',\r\n    SAVE_APPLIED_JOBS: 'SAVE_APPLIED_JOBS',\r\n    DELETE_CURRENT_JOB: 'DELETE_CURRENT_JOB',\r\n    FILTER_SEARCH_JOBS: 'FILTER_SEARCH_JOBS',\r\n    FILTER_APPLIED_JOBS: 'FILTER_APPLIED_JOBS',\r\n}\r\n\r\nexport const candidateTypes = {\r\n    SAVE_CURRENT_CANDIDATE: 'SAVE_CURRENT_CANDIDATE',\r\n    SAVE_ALL_CANDIDATES: 'SAVE_ALL_CANDIDATES',\r\n    DELETE_CURRENT_CANDIDATE: 'DELETE_CURRENT_CANDIDATE',\r\n    FILTER_SEARCH_CANDITATE: 'FILTER_SEARCH_CANDITATE',\r\n    CHANGE_STATUS: 'CHANGE_STATUS'\r\n}\r\n\r\nexport const authTypes = {\r\n    LOG_IN: 'LOG_IN',\r\n    LOG_OUT: 'LOG_OUT'\r\n}","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const login = (payload) => {\r\n    return {\r\n        type: authTypes.LOG_IN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const logout = (payload) => {\r\n    return {\r\n        type: authTypes.LOG_OUT,\r\n        payload\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../Actions/AuthActions'\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo-white.svg'\r\n\r\nconst activeStyles = {\r\n    backgroundColor: '#00000029'\r\n}\r\n\r\n\r\n\r\n\r\nfunction NavBar() {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout(false))\r\n    }\r\n\r\n    return (\r\n        <Header>\r\n            <StyledNavLink to=\"/\"><BrandLogo src={CompanyLogo} /></StyledNavLink>\r\n            <NavControls>\r\n                {/* <Logout onClick={logoutHandler}>Logout</Logout> */}\r\n                {/* <StyledNavLink activeStyle={activeStyles} to=\"/profile\">Logout</StyledNavLink> */}\r\n            </NavControls>\r\n        </Header>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\nconst Logout = styled.button`\r\n        color: white;\r\n    background: #832525;\r\n    border-style: none;\r\n    padding: 0px 21px;\r\n    font-weight: bold;\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Styled Components\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 80px;\r\n`\r\n\r\nconst Header = styled.header`\r\nposition: sticky;\r\ntop: 0;\r\n    color: white;\r\n    background-color: ${themeColor};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* padding: 10px 20px; */\r\n    /* box-shadow: 0px 5px 20px 1px #00000017; */\r\n`\r\n\r\nconst NavControls = styled.div`\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: fit-content;\r\n`\r\n\r\nconst Logo = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\npadding: 10px 20px;\r\n    color: white;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    &:hover{\r\n        background-color: #00000029;\r\n        text-decoration: none;\r\n        color: white;\r\n    }\r\n    &:active{\r\n        text-decoration: none;\r\n        color: white;\r\n    }\r\n`","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentCandidate = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_CURRENT_CANDIDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAllCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_ALL_CANDIDATES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.FILTER_SEARCH_CANDITATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeStatus = (status) => {\r\n    let payload = ''\r\n    if (status === 0) {\r\n        payload = 'Applied'\r\n    } else if (status === 1) {\r\n        payload = 'Called For Interview'\r\n    } else if (status === 2) {\r\n        payload = 'Selected'\r\n    } else if (status === 3) {\r\n        payload = 'Rejected'\r\n    }\r\n    return {\r\n        type: candidateTypes.CHANGE_STATUS,\r\n        payload\r\n    }\r\n}","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentJob = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_CURRENT_JOB,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const saveAllJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_ALL_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_SEARCH_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink, useLocation, useHistory, Redirect } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveAllCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport { saveAllJobs, saveCurrentJob } from '../Actions/JobsActions'\r\n\r\nimport DashboardSVG from '../Assets/Icons/dashboard.svg'\r\nimport ProfileSVG from '../Assets/Icons/profile.svg'\r\nimport JobSVG from '../Assets/Icons/job-dashboard.svg'\r\nimport CandidateSVG from '../Assets/Icons/candidate.svg'\r\n\r\n\r\nconst activeStyles = {\r\n    backgroundColor: '#f1f1f1'\r\n}\r\n\r\nfunction SideBar() {\r\n    const dispatch = useDispatch()\r\n    const [page, setPage] = useState(1)\r\n\r\n\r\n\r\n    return (\r\n        <SidebarContainer>\r\n\r\n\r\n            <Routes activeStyle={page === 1 ? activeStyles : {}} onClick={() => setPage(1)} to='/'>\r\n                <RouteIcon src={DashboardSVG} />\r\n                <RouteText>Dashboard</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 2 ? activeStyles : {}} onClick={() => setPage(2)} to='/jobs'>\r\n                <RouteIcon src={JobSVG} />\r\n                <RouteText>Jobs</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 3 ? activeStyles : {}} onClick={() => setPage(3)} to='/candidates'>\r\n                <RouteIcon src={CandidateSVG} />\r\n                <RouteText>Candidates</RouteText>\r\n            </Routes>\r\n            <Routes activeStyle={page === 4 ? activeStyles : {}} onClick={() => setPage(4)} to='/profile'>\r\n                <RouteIcon src={ProfileSVG} />\r\n                <RouteText>Profile</RouteText>\r\n            </Routes>\r\n\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n\r\nconst SidebarContainer = styled.div`\r\n    background-color: white;\r\n    width: 15%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst RouteContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst RouteIcon = styled.img`\r\n    margin-right: 10px;\r\n`\r\nconst RouteText = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    \r\n`\r\n\r\nconst Routes = styled(NavLink)`\r\n    display: flex;\r\n    text-decoration: none;\r\n    color: grey;\r\n    font-weight: bold;\r\n    text-align: left;\r\n    padding: 10px 20px;\r\n    &:hover{\r\n        \r\n        text-decoration: none;\r\n        background-color: white;\r\n    }\r\n\r\n    &:active{\r\n        text-decoration: none;\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n`","export const API_URI = 'https://jobs-webapi.herokuapp.com/'\r\n// export const API_URI = 'http://localhost:8080/'\r\nexport const CREATE = 'create'","import React, { useState } from 'react'\r\nimport { Card, Title, CardTitle, Container, statuscolors, themeColor } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Redirect } from 'react-router-dom'\r\ntoast.configure()\r\n\r\n\r\n/*\r\ntitle text\r\ndescription textarea\r\nsalary text\r\n\r\nexperience text\r\nresponsibilities array\r\neligibility array\r\n\r\ncompany text\r\naboutCompany text\r\nlocation text\r\n\r\n*/\r\n\r\n\r\n\r\nfunction PostJob() {\r\n\r\n    const [isJobPosted, setIsJobPosted] = useState(false)\r\n\r\n    const [title, setTitle] = useState()\r\n    const [salary, setSalary] = useState()\r\n    const [description, setDescription] = useState()\r\n\r\n    const [company, setCompany] = useState()\r\n    const [aboutCompany, setAboutCompany] = useState()\r\n    const [location, setLocation] = useState()\r\n\r\n    const [experience, setExperience] = useState()\r\n\r\n    const [eligibilitiesVal, setEligibilitiesVal] = useState()\r\n    const [eligibilities, setEligibilities] = useState([])\r\n\r\n    const [responsibilitiesVal, setResponsibilitiesVal] = useState()\r\n    const [responsibilities, setResponsibilities] = useState([])\r\n    const [postText, setPostText] = useState('Post')\r\n    const isInputValid = title && description && company && aboutCompany && location && experience && eligibilities.length > 0 && responsibilities.length > 0\r\n\r\n\r\n    const resetHandler = () => {\r\n        setTitle('')\r\n        setSalary('')\r\n        setDescription('')\r\n        setCompany('')\r\n        setLocation('')\r\n        setAboutCompany('')\r\n        setExperience('')\r\n        setEligibilities([])\r\n        setEligibilitiesVal('')\r\n        setResponsibilities([])\r\n        setEligibilitiesVal('')\r\n        document.getElementById('title').focus()\r\n    }\r\n\r\n    const postHandler = async () => {\r\n        setPostText('Posting...')\r\n        resetHandler()\r\n        const data = {\r\n            title,\r\n            salary: salary ? salary : 'Not disclosed',\r\n            description,\r\n            company,\r\n            aboutCompany,\r\n            location,\r\n            experience,\r\n            eligibility: eligibilities,\r\n            responsibilities\r\n        }\r\n        console.log(data)\r\n        try {\r\n            const response = await axios.post(`${API_URI}create`, data)\r\n            setIsJobPosted(true)\r\n            toast.success('Job Posted succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setPostText('Post')\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error('Error in posting job', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setPostText('Post')\r\n        }\r\n\r\n    }\r\n\r\n    const deleteItemHandler = (data, item, setCurrState) => {\r\n        const FilteredData = data.filter(el => el !== item)\r\n        setCurrState(FilteredData)\r\n    }\r\n\r\n    const renderList = (data, setCurrState) => {\r\n        const list = data.map(item => {\r\n            return <Element key={item}>\r\n                <ElementP>{item}</ElementP>\r\n                <Icon onClick={() => deleteItemHandler(data, item, setCurrState)} src={CloseSVG} />\r\n            </Element>\r\n        })\r\n\r\n        return list.length > 0 ? list : <EmptyMessage>Empty</EmptyMessage>\r\n    }\r\n\r\n    const addHandler = (currState, setCurrState, item) => {\r\n        const TEMP = [...currState]\r\n        TEMP.push(item)\r\n        setCurrState(TEMP)\r\n        setEligibilitiesVal('')\r\n        setResponsibilitiesVal('')\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Form>\r\n\r\n                <MainTitle>Post Job</MainTitle>\r\n                <ControlCard>\r\n                    <CardTitle>Controls</CardTitle>\r\n                    <div>\r\n                        <Btn color={statuscolors.failed} onClick={resetHandler}>Reset</Btn>\r\n                        <Btn color={statuscolors.success} disabled={!isInputValid} onClick={postHandler}>{postText}</Btn>\r\n                    </div>\r\n                </ControlCard>\r\n                {/* <InfoCardContainer> */}\r\n                <Card>\r\n                    <Section>\r\n                        <CardTitle>Job Details</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Job Title</Label>\r\n                            <Input id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Salary</Label>\r\n                            <Input value={salary} onChange={(e) => setSalary(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Description</Label>\r\n                            <Textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <CardTitle>Company Details</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Name</Label>\r\n                            <Input value={company} onChange={(e) => setCompany(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Location</Label>\r\n                            <Input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>About</Label>\r\n                            <Textarea value={aboutCompany} onChange={(e) => setAboutCompany(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <CardTitle>Requirements</CardTitle>\r\n                        <InputContainer>\r\n                            <Label>Experience</Label>\r\n                            <Input value={experience} onChange={(e) => setExperience(e.target.value)} type=\"text\" />\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Minimum qualifications</Label>\r\n                            <InputWithButton onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                                addHandler(eligibilities, setEligibilities, eligibilitiesVal)\r\n                            }}\r\n                            >\r\n                                <CustomInput value={eligibilitiesVal} onChange={(e) => setEligibilitiesVal(e.target.value)} type=\"text\" />\r\n                                <AddButton >Add</AddButton>\r\n                            </InputWithButton>\r\n                            <Ul>\r\n                                {renderList(eligibilities, setEligibilities)}\r\n                            </Ul>\r\n                        </InputContainer>\r\n                        <InputContainer>\r\n                            <Label>Responsibilities</Label>\r\n                            <InputWithButton onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                                addHandler(responsibilities, setResponsibilities, responsibilitiesVal)\r\n                            }}>\r\n                                <CustomInput value={responsibilitiesVal} onChange={(e) => setResponsibilitiesVal(e.target.value)} type=\"text\" />\r\n                                <AddButton>Add</AddButton>\r\n                            </InputWithButton>\r\n                            <Ul>\r\n\r\n                                {renderList(responsibilities, setResponsibilities)}\r\n\r\n                            </Ul>\r\n\r\n                        </InputContainer>\r\n                    </Section>\r\n                </Card>\r\n                {/* <RequirementCard>\r\n                        <CardTitle>Eligibility</CardTitle>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n                        <CustomLabel>Responsibilities</CustomLabel>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n                    </RequirementCard> */}\r\n                {/* </InfoCardContainer> */}\r\n\r\n            </Form>\r\n            {isJobPosted && <Redirect to=\"/jobs\" />}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PostJob\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n\r\n        font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: stretch;\r\n    align-items: center;\r\n    \r\n`\r\n\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    border: 1px solid ${themeColor};\r\n    background-color: ${themeColor};\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor}\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n    flex: 1;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    border:1px dashed ${statuscolors.reviewBg};   \r\n    padding: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${themeColor};\r\n    color: ${themeColor};\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n//Changes\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`\r\n\r\n\r\n\r\n//added\r\nconst Section = styled.div`\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst EmptyMessage = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed}\r\n`","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { searchJobs } from '../Actions/JobsActions'\r\nimport { searchCandidates } from '../Actions/CandidateActions'\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\n\r\nfunction SearchComponent({ setValue }) {\r\n\r\n    const [val, setVal] = useState()\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setValue(val)\r\n\r\n    }\r\n    return (\r\n        <SearchContainer onSubmit={searchHandler}>\r\n            <SearchInput value={val} onChange={(e) => setVal(e.target.value)} type=\"text\" placeholder=\"Search\" />\r\n            <SearchBtn>Search</SearchBtn>\r\n        </SearchContainer>\r\n    )\r\n}\r\n\r\nexport default SearchComponent\r\n\r\nconst SearchContainer = styled.form`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n`\r\nconst SearchInput = styled.input`\r\n    flex: 1;\r\n    border: 1px solid #cecece;\r\n    padding: 6px 12px;\r\n     &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\nconst SearchBtn = styled.button`\r\n    border-style: none;\r\n    padding: 5px 11px;\r\n    background-color: ${themeColor};\r\n    border: 1px solid ${themeColor};\r\n    color: white;\r\n    transition: all 0.2s;\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction TableComponent({ data, type, saveCurrent }) {\r\n    const dispatch = useDispatch()\r\n    console.log(data)\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        if (type === 'job') {\r\n            const URI = `${API_URI}job/${id}`\r\n            try {\r\n                console.log('running')\r\n                const { data } = await axios.get(URI)\r\n                dispatch(saveCurrent(data))\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else if (type === 'candidate') {\r\n            console.log(type)\r\n\r\n\r\n            dispatch(saveCurrent(data))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const renderList = () => {\r\n        if (data) {\r\n            return data.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n\r\n                return <StyledNavlink key={item._id} to={type === 'job' ? `/job/${item._id}` : `/candidate/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{type === 'job' ? item.title : item.name}</Element>\r\n                        <Element>{type === 'job' ? item.company : item.number}</Element>\r\n                        <Element>{type === 'job' ? item.location : item.jobs[0].status}</Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {renderList()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableComponent\r\n\r\n\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { saveAllJobs } from '../Actions/JobsActions'\r\nimport { saveAllCandidates } from '../Actions/CandidateActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\n\r\n\r\nfunction DetailsTable({ data }) {\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n\r\n    const allData = jobs.len\r\n    console.log(jobs)\r\n    console.log(candidates)\r\n\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState()\r\n\r\n\r\n\r\n\r\n\r\n    // console.log(type)\r\n    // const allData = type === 'job' ? jobs : candidates\r\n\r\n    // console.log(allData)\r\n    // const filteredData = type === 'job' ? filteredJobs : filteredcandidates\r\n    // const currentData = searchVal !== undefined ? filteredData : allData\r\n\r\n    // console.log(currentData)\r\n\r\n    return (\r\n        <CustomCard>\r\n            {/* <SearchComponent setValue={setSearchVal} />\r\n            {filteredData && filteredData.length === 0 ? <p>No Result found for {searchVal}.</p> : <TableComponent data={currentData} />} */}\r\n            {/* {filteredData && filteredData.length === 0 ? <p>No Result found for {searchVal}.</p> : <TableComponent data={currentData} />} */}\r\n        </CustomCard>\r\n    )\r\n}\r\n\r\nexport default DetailsTable\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title, FlexDiv, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveAllJobs, searchJobs, saveCurrentJob } from '../Actions/JobsActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport DetailsTable from '../Components/DetailsTable'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\n\r\nfunction JobsListPage() {\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState(undefined)\r\n    useEffect(() => {\r\n\r\n        axios.get(API_URI)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllJobs(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchJobs(searchVal))\r\n        }\r\n    }, [searchVal])\r\n\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n    const currentData = searchVal === undefined ? jobs : filteredJobs\r\n\r\n    const getDataHandler = async (id) => {\r\n        const URI = `${API_URI}job/${id}`\r\n        try {\r\n            console.log('running')\r\n            const { data } = await axios.get(URI)\r\n            dispatch(saveCurrentJob(data))\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            const list = currentData.map(item => {\r\n                const date = new Date(item.createdAt).toDateString()\r\n                return <StyledNavlink key={item._id} to={`/job/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.title}</Element>\r\n                        <Element>{item.company}</Element>\r\n                        <Element>{item.location}</Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n\r\n            if (list.length > 0) {\r\n                return list\r\n            } else {\r\n                return <List>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                </List>\r\n            }\r\n        } else {\r\n            return 'Empty'\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredJobs && filteredJobs.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Job Title</HeadingElement>\r\n                <HeadingElement>Company</HeadingElement>\r\n                <HeadingElement>Location</HeadingElement>\r\n                <HeadingElement>Posted on</HeadingElement>\r\n            </List>\r\n\r\n            {renderItemList()}\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>Jobs List</Title>\r\n                <PostJob to=\"/postjob\">Post New Job</PostJob>\r\n            </FlexDiv>\r\n\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                {renderTable()}\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default JobsListPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nconst PostJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`\r\n\r\nconst UnorderedList = styled.ul`\r\n    \r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\nconst LoadingIcon = styled.img`\r\n    width: 30px;\r\n`","import { statuscolors } from \"../Styles/StyledComponents\"\r\n\r\n\r\nexport const statusColor = (status) => {\r\n    if (status === 'Selected') {\r\n        return { color: statuscolors.success, bgColor: statuscolors.successBg }\r\n    } else if (status === 'Called For Interview') {\r\n        return { color: statuscolors.review, bgColor: statuscolors.reviewBg }\r\n    } else if (status === 'Applied') {\r\n        return { color: statuscolors.pending, bgColor: statuscolors.pendingBg }\r\n    } else if (status === 'Rejected') {\r\n        return { color: statuscolors.failed, bgColor: statuscolors.failedBg }\r\n    }\r\n}\r\n\r\nexport const daysAgoCalculator = (date) => {\r\n    const secsInDay = 86400000\r\n    let currentDate = new Date()\r\n    const remainingSecs = currentDate - date\r\n    const days = remainingSecs / secsInDay\r\n    return Math.floor(days)\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nfunction InputComponent({ label, type, onChange, value }) {\r\n    return (\r\n        <InputContainer>\r\n            <Label>{label}</Label>\r\n\r\n            {\r\n                type === 'file' ? <Input required onChange={(e) => onChange(e.target.files[0])} type={type}></Input> :\r\n                    <Input required value={value} onChange={(e) => onChange(e.target.value)} type={type}></Input>\r\n\r\n            }\r\n        </InputContainer>\r\n    )\r\n}\r\n\r\nexport default InputComponent\r\n\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    color: #00000073;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Input = styled.input`\r\n    padding: 3px 10px;\r\n    border: 1px solid #0000002e;\r\n    background-color: white;\r\n    border-radius: 7px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`","import React, { useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { Card, StyledButton, StyledNavlink } from '../Common/Styles/StyledComponents'\r\nimport ExpSVG from '../Assets/Icons/exp.svg'\r\nimport LocationSVG from '../Assets/Icons/location.svg'\r\nimport SalarySVG from '../Assets/Icons/salary.svg'\r\nimport { daysAgoCalculator } from '../Common/Functions/helperFunctions'\r\nimport InputComponent from './InputComponent'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\n\r\n//name\r\n//email,\r\n//number\r\n//education,\r\n//skills,\r\n//resume\r\n\r\n\r\nfunction JobCard({ job, canApply }) {\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [education, setEducation] = useState('')\r\n    const [skills, setSkills] = useState('')\r\n    const [resume, setResume] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const { title, company, experience, salary, location, createdAt } = job\r\n\r\n    const openDetailsHandler = () => {\r\n        dispatch(saveCurrentJob(job))\r\n    }\r\n\r\n    // const isInputValid = name && email && contactNumber && education && skills\r\n\r\n    const applyHandler = async () => {\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            number: contactNumber,\r\n            education,\r\n            skills,\r\n            jobs: {\r\n                id: job._id,\r\n                status: 'Applied'\r\n            }\r\n        }\r\n        // console.log(resume)\r\n\r\n        // // if (isInputValid) {\r\n        // //     toggle()\r\n        // // }\r\n\r\n        // console.log(data)\r\n        // console.log(formData)\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const postMessage = () => {\r\n        const date = new Date(createdAt)\r\n        const days = daysAgoCalculator(date)\r\n        if (days === 1) {\r\n            return 'Yesterday'\r\n        } else if (days === 0) {\r\n            return 'Today'\r\n        } else {\r\n            return `${days} days ago`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card onClick={openDetailsHandler}>\r\n            <StyledNavlink to={`/job/${job._id}`}>\r\n                <FlexDiv>\r\n                    <DetailsContainer>\r\n                        <JobTitle>{title}</JobTitle>\r\n                        <Company>{company}</Company>\r\n                        <Details><Icon src={ExpSVG} />  {experience}</Details>\r\n                        <Details><Icon src={SalarySVG} /> {salary}</Details>\r\n                        <Details><Icon src={LocationSVG} /> {location}</Details>\r\n                    </DetailsContainer>\r\n\r\n\r\n                </FlexDiv>\r\n                <Posted>Posted: <MessageSpan>{postMessage()}</MessageSpan></Posted>\r\n            </StyledNavlink>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default JobCard\r\n\r\n\r\n// Styled Components\r\n\r\n\r\nconst FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    @media (max-width: 500px){\r\n        flex-direction: column;  \r\n        align-items: flex-start; \r\n    }\r\n`\r\n\r\nconst DetailsContainer = styled.div`\r\n\r\n`\r\n\r\nconst ApplyButton = styled.button`\r\n    ${StyledButton};\r\n     @media (max-width: 500px){\r\n        margin-top: 20px;\r\n    }\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n\r\n`\r\n\r\n\r\nconst MessageSpan = styled.span`\r\n    color: black;\r\n`\r\n\r\nconst Posted = styled.p`    \r\n    margin: 10px 0px 0px 0px;\r\n    padding: 10px 0px 0px 0px;\r\n    color: grey;\r\n    border-top: 1px solid #0000001f;\r\n   \r\n`\r\n\r\nconst Company = styled.p`\r\n    margin: 10px 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-right: 10px;\r\n`\r\n\r\nconst JobTitle = styled.h1`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\n\r\nconst Details = styled.p`\r\nopacity: 0.6;\r\n    width: fit-content;\r\n    text-align: left;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\n\r\nconst CancelBtn = styled.button`\r\n    color: red;\r\n    padding: 5px 8px;\r\n    width: 100px;\r\n    border-radius: 0px;\r\n        background-color:transparent;\r\n    \r\n    border: 1px solid red;\r\n\r\n    transition: all 0.3s;\r\n\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst SendBtn = styled.button`\r\n    color: white;\r\n    padding: 5px 8px;\r\n\r\n    width: 100px;\r\n    border-radius: 0px;\r\n    background-color: green;\r\n    border: 1px solid green;\r\n     transition: all 0.3s;\r\n    &:hover{\r\n        background-color:transparent;\r\n        color: green;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3\r\n    }\r\n`\r\n\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Title, Card, FlexDiv, StyledButton, Status, LoadingIcon } from '../Common/Styles/StyledComponents'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport { saveAllCandidates, searchCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport styled, { css } from 'styled-components'\r\nimport { NavLink, useLocation, Redirect } from 'react-router-dom'\r\nimport JobCard from '../Components/JobCard'\r\nimport LocationSVG from '../Assets/Icons/location.svg'\r\nimport { saveCurrentJob } from '../Actions/JobsActions'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\ntoast.configure()\r\n\r\nfunction JobDetailsPage(props) {\r\n    const [searchVal, setSearchVal] = useState()\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [allCandidates, setAllCandidates] = useState()\r\n    const [isJobDeleted, setIsJobDeleted] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const { job } = useSelector(state => state.jobsData)\r\n\r\n\r\n\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(saveAllCandidates(job && job.user))\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchCandidates(searchVal))\r\n        }\r\n    }, [searchVal, job])\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    console.log(candidates)\r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    console.log(currentData)\r\n    const id = props.match.params.id\r\n    const editURL = `edit/${id}`\r\n\r\n    const deleteJobHandler = async () => {\r\n        try {\r\n            await axios.delete(`${API_URI}${job && job._id}`)\r\n            setIsJobDeleted(true)\r\n            toast.success('Job deleted succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in job deletion', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        console.log(job.user)\r\n\r\n        const currentCandidate = job.user.find(item => {\r\n            return item._id === id\r\n        })\r\n\r\n        console.log(currentCandidate)\r\n        dispatch(saveCurrentCandidate(currentCandidate))\r\n    }\r\n\r\n    const renderList = (data) => {\r\n        if (data) {\r\n            if (data.length > 0) {\r\n                return data.map(item => <li key={item}>{item}</li>)\r\n            }\r\n            return 'No data'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            const list = currentData.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n\r\n                return <StyledNavlink key={item._id} to={`/candidate/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.name}</Element>\r\n                        <Element>{item.number}</Element>\r\n                        <Element><Status {...statusColor(item.jobs[0].status)}>{item.jobs[0].status}</Status> </Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n\r\n            if (list.length > 0) {\r\n                return list\r\n            } else {\r\n                return 'No data'\r\n            }\r\n        }\r\n        return <List>\r\n            <Element><LoadingIcon src={Loader} /></Element>\r\n            <Element><LoadingIcon src={Loader} /></Element>\r\n            <Element><LoadingIcon src={Loader} /></Element>\r\n            <Element><LoadingIcon src={Loader} /></Element>\r\n        </List>\r\n    }\r\n\r\n    const renderTable = () => {\r\n        if (filteredcandidates && filteredcandidates.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Name</HeadingElement>\r\n                <HeadingElement>Contact No.</HeadingElement>\r\n                <HeadingElement>Status</HeadingElement>\r\n                <HeadingElement>Applied on</HeadingElement>\r\n            </List>\r\n\r\n\r\n            {renderItemList()}\r\n\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    const renderTab = () => {\r\n\r\n        switch (activeTab) {\r\n            case 1:\r\n                return <CustomCard>\r\n                    <SearchComponent setValue={setSearchVal} />\r\n\r\n                    {renderTable()}\r\n\r\n                </CustomCard>\r\n\r\n            case 2:\r\n                return <CustomCard>\r\n\r\n                    <FlexHeader>\r\n                        <div>\r\n                            <Heading>Company</Heading>\r\n                            <Company>{job && job.company}</Company>\r\n                        </div>\r\n                        <Location><img src={LocationSVG} /> {job && job.location}</Location>\r\n                    </FlexHeader>\r\n\r\n                    <Section>\r\n                        <Heading>Description</Heading>\r\n                        <p>{job && job.description}</p>\r\n                    </Section>\r\n                    <Section>\r\n                        <p><Heading>Salary:</Heading> {job && job.salary}</p>\r\n                        <p><Heading>Experience:</Heading> {job && job.experience}</p>\r\n\r\n                    </Section>\r\n                    <Section>\r\n                        <Heading>Eligibilities</Heading>\r\n                        <Ul>\r\n                            {renderList(job && job.eligibility)}\r\n                        </Ul>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Responsiblities</Heading>\r\n                        <Ul>\r\n                            {renderList(job && job.responsibilities)}\r\n                        </Ul>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>About</Heading>\r\n                        <p>{job && job.aboutCompany}</p>\r\n                    </Section>\r\n                </CustomCard>\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const renderTitle = () => {\r\n        if (job) {\r\n            return job.title\r\n        }\r\n\r\n        return <LoadingIcon src={Loader} />\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>{renderTitle()}</Title>\r\n                <Div>\r\n                    <EditNav to={editURL}><EditBtn>Edit</EditBtn></EditNav>\r\n                    <DeleteBtn onClick={deleteJobHandler} >Delete</DeleteBtn>\r\n                </Div>\r\n            </FlexDiv>\r\n\r\n            <ButtonContainer>\r\n                <Tab color={activeTab === 1 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(1)}>Applicant List</Tab>\r\n                <Tab color={activeTab === 2 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(2)}>Job Details</Tab>\r\n            </ButtonContainer>\r\n            {renderTab()}\r\n\r\n\r\n\r\n            {isJobDeleted && <Redirect to=\"/jobs\" />}\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default JobDetailsPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    margin: 0px 20px 20px 20px;\r\n    flex: 1;   \r\n`\r\nconst Div = styled.div`\r\n\r\n`\r\n\r\nconst EditNav = styled(NavLink)`\r\n   text-decoration: none;\r\n   color: white;\r\n\r\n`\r\n\r\nconst EditBtn = styled.button`\r\n    ${StyledButton}\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    border-radius: 0px;\r\n`\r\n\r\nconst DeleteBtn = styled.button`\r\n    font-weight: bold;\r\n    border-style: none;\r\n    border: 1px solid red;\r\n    color: red;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n    text-align: left;\r\n    padding: 0px 0px 0px 20px;\r\n    margin: 20px 0px 0px 0px;\r\n`\r\n\r\nconst Tab = styled.button`\r\n    font-weight: bold;\r\n    width: 150px;\r\n    padding: 10px 10px;\r\n    border-style: none;\r\n    background-color: ${props => props && props.color};\r\n    box-shadow: -1px -1px 6px 0px #0000001f;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst FlexHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n\r\n`\r\n\r\nconst Company = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.5em;\r\n\r\n`\r\n\r\nconst Location = styled.p`\r\n    ${RemoveSpacing}\r\n    opacity: 0.5;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    padding: 0px;\r\n    margin: 10px 0px 0px 15px;\r\n\r\n`\r\n\r\n\r\n\r\nconst UnorderedList = styled.ul`\r\n\r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Title, FlexDiv, Container, CustomCard, Card, statuscolors } from '../Common/Styles/StyledComponents'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useGetData } from '../Hooks/getData'\r\nimport styled, { css } from 'styled-components'\r\nimport JobSVG from '../Assets/Icons/job.svg'\r\nimport PeopleSVG from '../Assets/Icons/people.svg'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction DashboardPage() {\r\n    const [info, setInfo] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URI}info/counts`)\r\n            .then(({ data }) => setInfo(data))\r\n            .catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(info)\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>Dashboard</Title>\r\n            </FlexDiv>\r\n            <CardContainer>\r\n                <StyledLink to=\"/jobs\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Jobs</InfoTitle>\r\n                            <InfoData>{info && info.jobsCount ? info.jobsCount : <LoadingIcon src={Loader} />}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.reviewBg} src={JobSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n                <StyledLink to=\"/candidates\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Candidates</InfoTitle>\r\n                            <InfoData>{info && info.usersCount ? info.usersCount : <LoadingIcon src={Loader} />}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.pendingBg} src={PeopleSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n            </CardContainer>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n\r\n\r\nconst StyledLink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    }\r\n`\r\n\r\nconst NoSpacing = css`\r\n\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n`\r\nconst InfoTitle = styled.p`\r\n    ${NoSpacing}\r\n    \r\n    opacity: 0.5;\r\n    font-weight: bold;\r\n    font-size: 0.9em;\r\n`\r\n\r\nconst InfoData = styled.p`\r\n    ${NoSpacing}\r\n    font-weight: bold;\r\n    font-size: 3em;\r\n`\r\n\r\nconst InfoCard = styled(Card)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 250px;\r\n    height: 100px;\r\n    padding: 20px 30px;\r\n    transition: all 0.3s;\r\n    &:hover{\r\n        transform:scale(1.05)\r\n    }\r\n`\r\n\r\nconst Icon = styled.img`\r\nwidth: 50px;\r\n    background-color: ${props => props && props.color};\r\n    border-radius: 50px;\r\n    padding: 6px;\r\n\r\n`\r\n\r\nconst CardContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst LoadingIcon = styled.img`\r\n    width: 30px;\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveAllCandidates } from '../Actions/CandidateActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\n\r\n\r\nfunction CandidateDetailsPage() {\r\n    // const { jobs } = useSelector(state => state.jobsdata)\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState()\r\n    console.log(searchVal)\r\n    useEffect(() => {\r\n\r\n        axios.get(API_URI)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllCandidates(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    }, []);\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    console.log(searchVal)\r\n    const currentData = searchVal !== undefined ? filteredcandidates : candidates\r\n    console.log(currentData)\r\n\r\n    return (\r\n        <Container>\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                <Title>Jobs Detail</Title>\r\n                <TableComponent data={currentData} />\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CandidateDetailsPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`","import React, { useState } from 'react'\r\nimport { Container, Title, FlexDiv, Card, CardTitle, Status, statuscolors, themeColor } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { changeStatus } from '../Actions/CandidateActions'\r\ntoast.configure()\r\n\r\n\r\n\r\nfunction ApplicantDetailsPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    const [isStatusChanged, setIsStatusChanged] = useState(false)\r\n    const history = useHistory()\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n    const { job } = useSelector(state => state.jobsData)\r\n\r\n    console.log(candidate)\r\n    console.log(job)\r\n\r\n    const changeStatusHandler = async (status) => {\r\n        const URL = `${API_URI}status/${candidate && candidate._id}?status=${status}`\r\n        try {\r\n            await axios.patch(URL)\r\n            setIsStatusChanged(true)\r\n            dispatch(changeStatus(status))\r\n            toast.success('Status Updated', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in status updation', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const downloadHandler = async () => {\r\n        const URL = `${API_URI}download/${candidate && candidate._id}`\r\n        console.log(URL)\r\n        try {\r\n            const data = await axios.get(URL)\r\n            const blob = await data.blob()\r\n            const URL = window.URL.createObjectURL(blob)\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //\"5f1ab1ed439e2d0017643a58\"\r\n    return (\r\n        <Container>\r\n            <FlexDiv style={{ justifyContent: 'flex-start' }}>\r\n                <Title style={{ marginRight: '10px' }}>{candidate && candidate.name}</Title>\r\n                <Status {...statusColor(candidate && candidate.jobs[0].status)}>\r\n                    {candidate && candidate.jobs[0].status}\r\n                </Status>\r\n            </FlexDiv>\r\n\r\n            <ControlCard>\r\n                <CardTitle>Controls</CardTitle>\r\n                <div>\r\n                    {candidate && candidate.jobs[0].status !== 'Rejected' && <Btn color={statuscolors.failed} onClick={() => changeStatusHandler(3)}>Reject</Btn>}\r\n                    {candidate && candidate.jobs[0].status !== 'Selected' && <Btn color={statuscolors.success} onClick={() => changeStatusHandler(2)}>Select</Btn>}\r\n                    {((candidate && candidate.jobs[0].status !== 'Called For Interview') && (candidate && candidate.jobs[0].status !== 'Selected')) ? <Btn color={statuscolors.review} onClick={() => changeStatusHandler(1)}>Call for interview</Btn> : null}\r\n\r\n                </div>\r\n\r\n            </ControlCard>\r\n            <Card>\r\n                <Section>\r\n                    <Heading>Skills</Heading>\r\n                    <Content>{candidate && candidate.skills}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Education</Heading>\r\n                    <Content>{candidate && candidate.education}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Contact No.</Heading>\r\n                    <Content>{candidate && candidate.number}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Email</Heading>\r\n                    <Content>{candidate && candidate.email}</Content>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <Heading>Resume</Heading>\r\n                    <DownloadLink href={`${API_URI}download/${candidate && candidate._id}`} target=\"_blank\" color={themeColor}>Download</DownloadLink>\r\n                </Section>\r\n\r\n            </Card>\r\n\r\n\r\n            {/* {isStatusChanged && <Redirect to={`${API_URI}jobs/${job._id}`} />} */}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ApplicantDetailsPage\r\n\r\n\r\n//Common ------------------------------------------\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.3em;\r\n`\r\n\r\n\r\n\r\n\r\n\r\nconst StyledBtn = css`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    background-color: ${props => props && props.color};\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst DownloadLink = styled.a`\r\n    ${StyledBtn}\r\n    text-decoration: none;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 30px;\r\n\r\n`\r\n\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Card, Title, FlexDiv, StyledButton, Status, LoadingIcon } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\n\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport TableComponent from '../Components/TableComponent'\r\nimport DetailsTable from '../Components/DetailsTable'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { searchCandidates, saveAllCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\n\r\nfunction CandidatesListPage() {\r\n    const dispatch = useDispatch()\r\n    const [searchVal, setSearchVal] = useState(undefined)\r\n    useEffect(() => {\r\n        const URL = `${API_URI}all/candidate`\r\n        axios.get(URL)\r\n            .then(({ data }) => {\r\n                dispatch(saveAllCandidates(data))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchCandidates(searchVal))\r\n        }\r\n    }, [searchVal])\r\n\r\n\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    const getDataHandler = async (id) => {\r\n\r\n        const currentCandidate = candidates.find(item => item._id === id)\r\n        dispatch(saveCurrentCandidate(currentCandidate))\r\n\r\n    }\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            const list = currentData.map(item => {\r\n\r\n                const date = new Date(item.createdAt).toDateString()\r\n                return <StyledNavlink key={item._id} to={`/applied-job/${item._id}`}>\r\n                    <List onClick={() => getDataHandler(item._id)} >\r\n                        <Element>{item.name}</Element>\r\n                        <Element>{item.number}</Element>\r\n                        <Element><Status {...statusColor(item.jobs[0].status)}>{item.jobs[0].status}</Status> </Element>\r\n                        <Element>{date}</Element>\r\n                    </List>\r\n                </StyledNavlink>\r\n            })\r\n\r\n            if (list.length > 0) {\r\n                return list\r\n            } else {\r\n                return <List>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                    <Element><LoadingIcon src={Loader} /></Element>\r\n                </List>\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredcandidates && filteredcandidates.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Name</HeadingElement>\r\n                <HeadingElement>Contact No</HeadingElement>\r\n                <HeadingElement>Status</HeadingElement>\r\n                <HeadingElement>Applied on</HeadingElement>\r\n            </List>\r\n\r\n            {renderItemList()}\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <FlexDiv>\r\n                <Title>Candidate List</Title>\r\n            </FlexDiv>\r\n\r\n            <CustomCard>\r\n                <SearchComponent setValue={setSearchVal} />\r\n                {renderTable()}\r\n            </CustomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CandidatesListPage\r\n\r\nconst Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    flex: 1;   \r\n`\r\n\r\nconst PostJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`\r\n\r\nconst UnorderedList = styled.ul`\r\n    \r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { Container, FlexDiv, Title, Card, StyledNavlink, LoadingIcon, themeColor } from '../Common/Styles/StyledComponents'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styled, { css } from 'styled-components'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { saveAllJobs, searchJobs, saveAppliedJobs, searchAppliedJobs } from '../Actions/JobsActions'\r\nimport SearchComponent from '../Components/SearchComponent'\r\nimport Loader from '../Assets/Icons/loader.svg'\r\n\r\n\r\nfunction AppliedJobList() {\r\n    const dispatch = useDispatch()\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [searchVal, setSearchVal] = useState()\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n\r\n    console.log(candidate)\r\n\r\n    useLayoutEffect(() => {\r\n        const URL = `${API_URI}user/${candidate && candidate._id}`\r\n        axios.get(URL)\r\n            .then(({ data }) => {\r\n                console.log(data)\r\n                dispatch(saveAppliedJobs(data.jobs))\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        if (searchVal !== undefined) {\r\n            dispatch(searchAppliedJobs(searchVal))\r\n        }\r\n    }, [searchVal, candidate])\r\n\r\n    const { appliedJobs, filteredAppliedJobs } = useSelector(state => state.jobsData)\r\n    console.log(appliedJobs)\r\n    const currentData = searchVal === undefined ? appliedJobs : filteredAppliedJobs\r\n    console.log(currentData)\r\n\r\n    const downloadHandler = () => {\r\n        const URL = `${API_URI}download/${candidate && candidate._id}`\r\n        console.log(URL)\r\n        axios.get(URL).then(data => console.log(data)).catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    const renderItemList = () => {\r\n        if (currentData) {\r\n            console.log(currentData)\r\n            // POPULATE PENDING//////////////////////////////////////////////\r\n            const list = currentData.map(item => {\r\n                console.log(item)\r\n                const date = new Date(item.id.createdAt).toDateString()\r\n\r\n                return <List>\r\n                    <Element>{item.id.title}</Element>\r\n                    <Element>{item.id.company}</Element>\r\n                    <Element>{item.id.location}</Element>\r\n                    <Element>{date}</Element>\r\n                </List>\r\n\r\n            })\r\n\r\n            if (list.length > 0) {\r\n                return list\r\n            }\r\n\r\n            return <List>\r\n                <Element><LoadingIcon src={Loader} /></Element>\r\n                <Element><LoadingIcon src={Loader} /></Element>\r\n                <Element><LoadingIcon src={Loader} /></Element>\r\n                <Element><LoadingIcon src={Loader} /></Element>\r\n            </List>\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const renderTable = () => {\r\n        if (filteredAppliedJobs && filteredAppliedJobs.length === 0) {\r\n            return <p>No Result found for {searchVal}.</p>\r\n        }\r\n        return <UnorderedList>\r\n            <List>\r\n                <HeadingElement>Job Title</HeadingElement>\r\n                <HeadingElement>Company</HeadingElement>\r\n                <HeadingElement>Location</HeadingElement>\r\n                <HeadingElement>Posted on</HeadingElement>\r\n            </List>\r\n\r\n\r\n            {renderItemList()}\r\n\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n\r\n    const renderTab = () => {\r\n\r\n        switch (activeTab) {\r\n            case 1:\r\n                return <CustomCard>\r\n                    <SearchComponent setValue={setSearchVal} />\r\n\r\n                    {renderTable()}\r\n\r\n                </CustomCard>\r\n\r\n            case 2:\r\n                return <CustomCard>\r\n\r\n                    <Section>\r\n                        <Heading>Skills</Heading>\r\n                        <Content>{candidate && candidate.skills}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Education</Heading>\r\n                        <Content>{candidate && candidate.education}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Contact No.</Heading>\r\n                        <Content>{candidate && candidate.number}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Email</Heading>\r\n                        <Content>{candidate && candidate.email}</Content>\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <Heading>Resume</Heading>\r\n                        <DownloadLink href={`${API_URI}download/${candidate && candidate._id}`} target=\"_blank\" color={'#088400'}>Download</DownloadLink>\r\n                    </Section>\r\n\r\n                </CustomCard>\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>{candidate && candidate.name}</Title>\r\n\r\n            </FlexDiv>\r\n\r\n            <ButtonContainer>\r\n                <Tab color={activeTab === 1 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(1)}>Job List</Tab>\r\n                <Tab color={activeTab === 2 ? 'white' : '#ffffff66'} onClick={() => setActiveTab(2)}>Candidate Details</Tab>\r\n            </ButtonContainer>\r\n            {renderTab()}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppliedJobList\r\n\r\nconst DeleteBtn = styled.button`\r\n    font-weight: bold;\r\n    border-style: none;\r\n    border: 1px solid red;\r\n    color: red;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\nconst ButtonContainer = styled.div`\r\n    text-align: left;\r\n    padding: 0px 0px 0px 20px;\r\n    margin: 20px 0px 0px 0px;\r\n`\r\n\r\nconst Tab = styled.button`\r\n    font-weight: bold;\r\n    width: 150px;\r\n    padding: 10px;\r\n    border-style: none;\r\n    background-color: ${props => props && props.color};\r\n    box-shadow: -1px -1px 6px 0px #0000001f;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    margin: 0px 20px 20px 20px;\r\n    flex: 1;   \r\n`\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\n\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.3em;\r\n\r\n`\r\nconst UnorderedList = styled.ul`\r\n\r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001f;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst StyledBtn = css`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    background-color: ${props => props && props.color};\r\n`\r\n\r\nconst Btn = styled.button`\r\n    ${StyledBtn}\r\n`\r\n\r\nconst DownloadLink = styled.a`\r\n\r\n    ${StyledBtn}\r\n    text-decoration: none;\r\n    background-color: ${themeColor}\r\n`","import React, { useState } from 'react'\r\nimport { Card, Title, CardTitle, statuscolors, themeColor } from '../Common/Styles/StyledComponents'\r\nimport styled, { css } from 'styled-components'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nfunction EditJobPage() {\r\n\r\n    const { job } = useSelector(state => state.jobsData)\r\n    console.log(job)\r\n\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n\r\n    const [title, setTitle] = useState(job && job.title)\r\n    const [salary, setSalary] = useState(job && job.salary)\r\n    const [description, setDescription] = useState(job && job.description)\r\n\r\n    const [company, setCompany] = useState(job && job.company)\r\n    const [aboutCompany, setAboutCompany] = useState(job && job.aboutCompany)\r\n    const [location, setLocation] = useState(job && job.location)\r\n\r\n    const [experience, setExperience] = useState(job && job.experience)\r\n\r\n    const [eligibilitiesVal, setEligibilitiesVal] = useState()\r\n    const [eligibilities, setEligibilities] = useState((job && job.eligibility) || [])\r\n\r\n    const [responsibilitiesVal, setResponsibilitiesVal] = useState()\r\n    const [responsibilities, setResponsibilities] = useState((job && job.responsibilities) || [])\r\n\r\n    const isInputValid = title && description && company && aboutCompany && location && experience && eligibilities.length > 0 && responsibilities.length > 0\r\n\r\n    const [updateText, setUpdateText] = useState('Update')\r\n\r\n\r\n    const resetHandler = () => {\r\n        setTitle(job && job.title)\r\n        setSalary(job && job.salary)\r\n        setDescription(job && job.description)\r\n        setCompany(job && job.company)\r\n        setLocation(job && job.location)\r\n        setAboutCompany(job && job.aboutCompany)\r\n        setExperience(job && job.experience)\r\n        setEligibilities(job && job.eligibility)\r\n        setEligibilitiesVal('')\r\n        setResponsibilities(job && job.responsibilities)\r\n        setEligibilitiesVal('')\r\n        document.getElementById('update-title').focus()\r\n    }\r\n\r\n    const updateHandler = async () => {\r\n        setUpdateText('Updating...')\r\n        const data = {\r\n            title,\r\n            salary: salary ? salary : 'Not disclosed',\r\n            description,\r\n            company,\r\n            aboutCompany,\r\n            location,\r\n            experience,\r\n            eligibility: eligibilities,\r\n            responsibilities\r\n        }\r\n        console.log(data)\r\n        try {\r\n            const response = await axios.put(`${API_URI}${job && job._id}`, data)\r\n            setIsUpdated(true)\r\n            toast.success('Job Updated succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setUpdateText('Update')\r\n        } catch (err) {\r\n            toast.error('Error in job  succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setUpdateText('Update')\r\n        }\r\n    }\r\n\r\n    const deleteItemHandler = (data, item, setCurrState) => {\r\n        const FilteredData = data.filter(el => el !== item)\r\n        setCurrState(FilteredData)\r\n    }\r\n\r\n    const renderList = (data, setCurrState) => {\r\n        const list = data.map(item => {\r\n            return <Element key={item}>\r\n                <ElementP>{item}</ElementP>\r\n                <Icon onClick={() => deleteItemHandler(data, item, setCurrState)} src={CloseSVG} />\r\n            </Element>\r\n        })\r\n\r\n        return list.length > 0 ? list : <EmptyMessage>Empty</EmptyMessage>\r\n    }\r\n\r\n    const addHandler = (currState, setCurrState, item) => {\r\n        const TEMP = [...currState]\r\n        TEMP.push(item)\r\n        setCurrState(TEMP)\r\n        setEligibilitiesVal('')\r\n        setResponsibilitiesVal('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MainTitle>Update Job</MainTitle>\r\n            <Form>\r\n                <ControlCard>\r\n                    <CardTitle>Controls</CardTitle>\r\n                    <div>\r\n                        <Btn color={statuscolors.failed} onClick={resetHandler} >Reset</Btn>\r\n                        <Btn color={statuscolors.success} disabled={!isInputValid} onClick={updateHandler}>{updateText}</Btn>\r\n                    </div>\r\n                </ControlCard>\r\n                {/* <InfoCardContainer> */}\r\n                <Card>\r\n                    <CardTitle>Job Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Job Title</Label>\r\n                        <Input id=\"update-title\" value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Salary</Label>\r\n                        <Input value={salary} onChange={(e) => setSalary(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Description</Label>\r\n                        <Textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <CardTitle>Company Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Name</Label>\r\n                        <Input value={company} onChange={(e) => setCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Location</Label>\r\n                        <Input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>About</Label>\r\n                        <Textarea value={aboutCompany} onChange={(e) => setAboutCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <CardTitle>Requirements</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Experience</Label>\r\n                        <Input value={experience} onChange={(e) => setExperience(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Eligibility</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(eligibilities, setEligibilities, eligibilitiesVal)\r\n                        }}\r\n                        >\r\n                            <CustomInput value={eligibilitiesVal} onChange={(e) => setEligibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton >Add</AddButton>\r\n                        </InputWithButton>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Responsibilities</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(responsibilities, setResponsibilities, responsibilitiesVal)\r\n                        }}>\r\n                            <CustomInput value={responsibilitiesVal} onChange={(e) => setResponsibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton>Add</AddButton>\r\n                        </InputWithButton>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n\r\n                    </InputContainer>\r\n\r\n                </Card>\r\n                {/* <RequirementCard>\r\n                        <CardTitle>Eligibility</CardTitle>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n                        <CustomLabel>Responsibilities</CustomLabel>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n                    </RequirementCard>\r\n                </InfoCardContainer> */}\r\n\r\n            </Form>\r\n            {isUpdated && <Redirect to=\"/jobs\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditJobPage\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n\r\n        font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n`\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    background-color: green;\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n    flex: 1;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    border:1px dashed ${statuscolors.reviewBg};\r\n    \r\n    padding: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${themeColor};\r\n    color: ${themeColor};\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n\r\nconst Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`\r\n\r\nconst Section = styled.div`\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst EmptyMessage = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed}\r\n`","import React, { useState } from 'react'\r\nimport { Card, themeColor, StyledButton, statuscolors, LoadingIcon } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport { login } from '../Actions/AuthActions'\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo.svg'\r\nimport User from '../Assets/Icons/user.svg'\r\nimport Password from '../Assets/Icons/password.svg'\r\nimport Loader from '../Assets/Icons/loader-white.svg'\r\n\r\nfunction SignInPage() {\r\n    const dispatch = useDispatch()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const { isAuthenticated } = useSelector(state => state.authData)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const [LoginText, setLoginText] = useState('Login')\r\n\r\n    const isInputValid = username && password\r\n    console.log(isAuthenticated)\r\n\r\n    const reset = () => {\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault()\r\n        setLoginText('Verifying...')\r\n        const URL = `${API_URI}login`\r\n        reset()\r\n        try {\r\n            const data = {\r\n                name: username,\r\n                password\r\n            }\r\n\r\n            const loginData = await axios.post(URL, data)\r\n            dispatch(login(true))\r\n            setLoginText('Login')\r\n        } catch (err) {\r\n            dispatch(login(false))\r\n            reset()\r\n            setLoginText('Login')\r\n\r\n            setErrorMessage('Invalid Credentials')\r\n        }\r\n    }\r\n    return (\r\n        <SiginContainer>\r\n\r\n            <SigninSubContainer>\r\n                <div>\r\n                    <BrandLogo src={CompanyLogo} />\r\n                </div>\r\n                <SigninCard>\r\n                    <SiginTitle>Admin</SiginTitle>\r\n                    {/* <SiginSubTitle>to Admin Portal</SiginSubTitle> */}\r\n                    <SigninForm onSubmit={loginHandler}>\r\n                        <InputContainer>\r\n                            <Icon src={User} />\r\n                            <Input value={username} onChange={(e) => {\r\n                                setUsername(e.target.value)\r\n                                setErrorMessage(null)\r\n                            }} type=\"text\" placeholder=\"Username\" />\r\n                        </InputContainer>\r\n\r\n                        <InputContainer>\r\n                            <Icon src={Password} />\r\n                            <Input value={password} onChange={(e) => {\r\n                                setErrorMessage(null)\r\n                                setPassword(e.target.value)\r\n                            }} type=\"password\" placeholder=\"Password\" />\r\n                        </InputContainer>\r\n                        <Login disabled={!isInputValid}>{LoginText}</Login>\r\n                    </SigninForm>\r\n                    <Message>{errorMessage}</Message>\r\n                </SigninCard>\r\n\r\n            </SigninSubContainer>\r\n        </SiginContainer>\r\n    )\r\n}\r\n\r\nexport default SignInPage\r\n\r\n\r\nconst SiginTitle = styled.h2`\r\n    color: ${themeColor};\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n    `\r\nconst SiginSubTitle = styled.h5`\r\n    color: ${themeColor};\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst SiginContainer = styled.div`\r\n    background-color: #f4f4f4;\r\n    height: 100vh;\r\n`\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 250px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst SigninSubContainer = styled.div`\r\npadding-top: 70px;\r\n    /* display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center; */\r\n`\r\n\r\nconst SigninCard = styled(Card)`\r\n    margin: auto;\r\n   \r\n    width:300px;\r\n    /* height:300px; */\r\n`\r\n\r\nconst SigninForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\n\r\nconst Login = styled.button`\r\n    /* ${StyledButton} */\r\n    border-style: none;\r\n    width: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    background-color: ${themeColor};\r\n    color: white;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    &:disabled{\r\n        opacity: 0.3\r\n    }\r\n    /* margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    border-style: none;\r\n    font-weight: bold; */\r\n\r\n`\r\nconst Icon = styled.img`\r\n    margin-right: 10px;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n`\r\n\r\nconst Input = styled.input`\r\nwidth: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #0000001f;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 1px solid ${themeColor};\r\n    }\r\n`\r\nconst Message = styled.p`\r\n\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed}\r\n`","import React from 'react'\r\nimport { Container, FlexDiv, Title, Card, statuscolors, CardTitle } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../Actions/AuthActions'\r\n\r\nfunction ProfilePage() {\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () => {\r\n        dispatch(logout(false))\r\n    }\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>Profile</Title>\r\n                <LogoutBtn onClick={logoutHandler}>Logout</LogoutBtn>\r\n            </FlexDiv>\r\n\r\n            <Card>\r\n                <CardTitle style={{ margin: '0px' }}>Username</CardTitle>\r\n                <Content style={{ marginBottom: '20px' }}>admin</Content>\r\n                <CardTitle style={{ margin: '0px' }}>Role</CardTitle>\r\n                <Content>Super Admin</Content>\r\n\r\n            </Card>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n\r\n\r\nconst LogoutBtn = styled.button`\r\n    border-style: none;\r\n    text-decoration: underline;\r\n    color: ${statuscolors.review};\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    &:hover{\r\n    color: ${statuscolors.failed};\r\n\r\n    }\r\n\r\n\r\n`\r\n\r\nconst Content = styled.p`\r\n    font-weight: bold;\r\n    font-size: 2.5em;\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n`","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport JobsPage from './Pages/JobsPage';\nimport CandidatePage from './Pages/CandidatePage';\nimport NavBar from './Components/NavBar';\nimport styled from 'styled-components'\nimport SideBar from './Components/SideBar';\nimport AddJobs from './Pages/PostJob';\nimport JobsListPage from './Pages/JobsListPage';\nimport JobDetailsPage from './Pages/JobDetailsPage';\nimport DashboardPage from './Pages/DashboardPage';\nimport PostJob from './Pages/PostJob';\nimport CandidateDetailsPage from './Pages/CandidateDetailsPage';\nimport ApplicantDetailsPage from './Pages/ApplicantDetailsPage';\nimport CandidatesListPage from './Pages/CandidatesListPage';\nimport AppliedJobList from './Pages/AppliedJobList';\nimport EditJobPage from './Pages/EditJobPage';\nimport SignInPage from './Pages/SignInPage';\nimport { useSelector } from 'react-redux';\nimport ProfilePage from './Pages/ProfilePage';\n\nfunction App() {\n\n  const { isAuthenticated } = useSelector(state => state.authData)\n\n\n\n  const renderRoutes = () => {\n    return <>\n\n      <NavBar />\n      <MainDiv>\n        <SideBar />\n        <RightSideBar>\n\n\n          <Switch>\n            <Route path=\"/\" exact component={DashboardPage} />\n\n            <Route path=\"/postjob\" component={PostJob} />\n            <Route path=\"/jobs\" component={JobsListPage} />\n            <Route path=\"/job/edit/:id\" component={EditJobPage} />\n            <Route path=\"/job/:id\" component={JobDetailsPage} />\n\n            <Route path=\"/candidate/:id\" component={ApplicantDetailsPage} />\n            <Route path=\"/applied-job/:id\" component={AppliedJobList} />\n\n\n            <Route path=\"/candidates\" component={CandidatesListPage} />\n            <Route path=\"/profile\" component={ProfilePage} />\n          </Switch>\n        </RightSideBar>\n\n      </MainDiv>\n    </>\n  }\n\n  const renderSignin = () => {\n    return <Route path=\"/\" component={SignInPage} />\n  }\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {isAuthenticated ? renderRoutes() : renderSignin()}\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n\nconst MainDiv = styled.div`\n  background-color: #276eb012;\n  display: flex;\n  width: 100%;\n  height: 92vh;\n  overflow: auto;\n`\nconst ComponentContainer = styled.div`\n  padding: 15px;\n`\n\nconst RightSideBar = styled.div`\n  width:100%;\n  overflow-y: scroll;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    jobs: [],\r\n    appliedJobs: [],\r\n    job: null,\r\n    filteredJobs: undefined,\r\n    filteredAppliedJobs: undefined\r\n}\r\n\r\nconst JobsReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case jobTypes.SAVE_ALL_JOBS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                jobs: payload\r\n            }\r\n\r\n        case jobTypes.SAVE_APPLIED_JOBS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                appliedJobs: payload\r\n            }\r\n\r\n        case jobTypes.SAVE_CURRENT_JOB:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                job: payload\r\n            }\r\n\r\n        case jobTypes.FILTER_SEARCH_JOBS:\r\n\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.jobs.filter(item => {\r\n                return item.title.toLowerCase().includes(searchVal)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredJobs: filterTemp\r\n            }\r\n\r\n        case jobTypes.FILTER_APPLIED_JOBS:\r\n\r\n            const searchAppliedJob = payload.toLowerCase()\r\n            console.log(searchAppliedJob)\r\n            const filterAppliedTemp = state.appliedJobs.filter(item => {\r\n                return item.title.toLowerCase().includes(searchAppliedJob)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredAppliedJobs: filterAppliedTemp\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default JobsReducer","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    candidates: [],\r\n    candidate: null,\r\n    filteredcandidates: undefined\r\n}\r\n\r\nconst CandidatesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case candidateTypes.SAVE_ALL_CANDIDATES:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidates: payload\r\n            }\r\n\r\n        case candidateTypes.SAVE_CURRENT_CANDIDATE:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidate: payload\r\n            }\r\n\r\n        case candidateTypes.FILTER_SEARCH_CANDITATE:\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.candidates.filter(item => {\r\n                return item.name.toLowerCase().includes(searchVal)\r\n            })\r\n            console.log(filterTemp)\r\n\r\n            return {\r\n                ...state,\r\n                filteredcandidates: filterTemp\r\n            }\r\n\r\n        case candidateTypes.CHANGE_STATUS:\r\n            console.log(payload)\r\n            let TEMP = { ...state.candidate }\r\n            TEMP.jobs[0].status = payload\r\n            return {\r\n                ...state,\r\n                candidate: TEMP\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default CandidatesReducer","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false\r\n}\r\n\r\nconst AuthReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case authTypes.LOG_IN:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n\r\n        case authTypes.LOG_OUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import JobsReducer from './JobsReducer'\r\nimport CandidateReducer from './CandidatesReducer'\r\nimport AuthReducer from './AuthReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst RootReducer = combineReducers({\r\n    jobsData: JobsReducer,\r\n    candidateData: CandidateReducer,\r\n    authData: AuthReducer\r\n})\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport RootReducer from './Reducers/RootReducer';\n\nconst store = createStore(RootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}