{"version":3,"sources":["Assets/Icons/close.svg","Assets/Icons/fistbump-logo-white.svg","Assets/Icons/loader.svg","Assets/Icons/dashboard.svg","Assets/Icons/admin.svg","Assets/Icons/job-dashboard.svg","Assets/Icons/candidate.svg","Assets/Icons/role.svg","Assets/Icons/profile.svg","Assets/Icons/job.svg","Assets/Icons/people.svg","Assets/Icons/location.svg","Assets/Icons/user.svg","Assets/Icons/password.svg","Assets/Icons/tick.svg","Assets/Sounds/tick.ogg","Common/Styles/StyledComponents.js","Components/ContentContainer.js","Components/SearchComponent.js","Endpoint.js","Components/Toast.js","Common/Functions/helperFunctions.js","Components/Loader.js","Components/Table.js","ActionTypes/ActionTypes.js","Actions/JobsActions.js","Hooks/getData.js","Actions/CandidateActions.js","Pages/JobsPage.js","Components/Controls.js","Components/CandidateInfo.js","Pages/CandidatePage.js","Components/NavBar.js","Components/SideBar.js","Pages/DashboardPage.js","Components/Tabs.js","Components/JobInfo.js","Pages/AppliedJobList.js","Actions/AuthActions.js","Pages/SignInPage.js","Pages/ProfilePage.js","Pages/JobPage.js","Components/InputJobDetails.js","Pages/CandidatesPage.js","Actions/RoleActions.js","Actions/AdminActions.js","Pages/RolesPage.js","Components/CheckBox.js","Components/RoleInfo.js","Pages/RolePage.js","Components/InputRolesDetails.js","Pages/AdminsPage.js","Components/InputAdminsDetails.js","Pages/AdminPage.js","App.js","serviceWorker.js","Reducers/JobsReducer.js","Reducers/CandidatesReducer.js","Reducers/AuthReducer.js","Reducers/RolesReducer.js","Reducers/AdminsReducer.js","Reducers/RootReducer.js","index.js"],"names":["module","exports","statuscolors","noSpaces","css","Card","styled","div","Title","p","StyledButton","CardTitle","FlexDiv","Container","Status","NavLink","props","bgColor","color","Btn","button","EditNav","EditBtn","DeleteBtn","ContentContainer","title","value2","children","justify","SearchComponent","setValue","useState","val","setVal","SearchContainer","onSubmit","e","preventDefault","SearchInput","value","onChange","target","type","placeholder","SearchBtn","form","input","API_URI","toast","configure","statusColor","status","Capitalize","str","arr","split","shift","firstLetter","toUpperCase","remainingLetters","join","Loader","LoadingIcon","src","LoaderSVG","img","Table","data","route","fields","titles","setSearchVal","stop","selected","currentID","setCurrentID","console","log","renderElement","item","map","field","Element","key","jobs","role_id","name","renderfield","renderList","list","Link","_id","date","Date","createdAt","toDateString","onClick","id","to","List","style","backgroundColor","length","el","UnorderedList","HeadingElement","li","StyledNavlink","ul","jobTypes","candidateTypes","authTypes","rolesTypes","adminTypes","saveCurrentJob","payload","saveAllJobs","searchJobs","useGetData","endpoint","save","dispatch","useDispatch","headers","useHeaders","useEffect","axios","get","then","catch","err","useSearch","searchVal","search","undefined","useSelector","state","authData","username","password","useResetState","saveCurrentCandidate","saveAllCandidates","searchCandidates","changeStatus","JobsPage","permissions","jobsData","filteredJobs","params","job","create","InputJob","Controls","ControlCard","CandidateInfo","candidate","Section","Heading","Content","skills","education","number","email","DownloadLink","href","RemoveSpacing","a","CandidatePage","setIsStatusChanged","match","URI","candidateData","changeStatusHandler","URL","patch","success","position","POSITION","BOTTOM_RIGHT","error","update","renderCard","NavBar","Header","StyledNavLink","BrandLogo","CompanyLogo","header","activeStyles","borderLeft","paddingLeft","SideBar","SidebarContainer","Routes","activeStyle","exact","RouteIcon","DashboardSVG","RouteText","read","JobSVG","CandidateSVG","role","RoleSVG","admin","AdminSVG","ProfileSVG","DashboardPage","renderCountData","CardContainer","StyledLink","InfoCard","InfoTitle","InfoData","Icon","PeopleSVG","NoSpacing","Tabs","activeTab","setActiveTab","renderTabTitle","index","Tab","ButtonContainer","component","CustomCard","JobInfo","FlexHeader","Company","company","Location","LocationSVG","location","description","salary","experience","Ul","eligibility","responsibilities","aboutCompany","AppliedJobList","currentData","tabData","auth","SignInPage","setUsername","setPassword","errorMessage","setErrorMessage","LoginText","setLoginText","isInputValid","reset","changeHandler","setData","loginHandler","SiginContainer","SigninSubContainer","SigninCard","SiginTitle","SigninForm","InputContainer","User","Input","Password","Login","disabled","Message","h2","ProfilePage","LogoutBtn","margin","marginBottom","JobPage","isJobDeleted","setIsJobDeleted","editURL","user","candidates","filteredcandidates","deleteJobHandler","setState","delete","Buttons","InputJobDetails","path","text","defaultVal","isDataChanged","setIsDataChanged","setTitle","setSalary","setDescription","setCompany","setAboutCompany","setLocation","setExperience","eligibilitiesVal","setEligibilitiesVal","eligibilities","setEligibilities","responsibilitiesVal","setResponsibilitiesVal","setResponsibilities","btnText","setBtnText","resetHandler","document","getElementById","focus","sendDataHandler","request","put","post","setCurrState","ElementP","filter","deleteItemHandler","CloseSVG","EmptyMessage","addHandler","currState","TEMP","push","Label","Textarea","InputWithButton","CustomInput","AddButton","label","InputStyles","textarea","CandidatesPage","saveCurrentRole","saveAllRoles","searchRoles","saveCurrentAdmin","saveAllAdmins","searchAdmins","RolesPage","rolesData","roles","filteredRoles","CheckBox","CheckContainer","isChecked","TickMP3","autoPlay","CheckSVG","RoleInfo","jobsInputData","control","candidatesInputData","adminsInputData","rolesInputData","renderTicks","CheckBoxContainer","v4","CheckBoxText","PermissionContainer","RolePage","isDeleted","setIsDeleted","admins","adminsData","filteredAdmin","deleteHandler","padding","InputRolesDetails","field2","setName","jobCreate","setJobCreate","jobUpdate","setJobUpdate","jobRead","setJobRead","jobDelete","setJobDelete","candidateCreate","setCandidateCreate","candidateUpdate","setCandidateUpdate","candidateRead","setCandidateRead","candidateDelete","setCandidateDelete","adminCreate","setAdminCreate","adminUpdate","setAdminUpdate","adminRead","setAdminRead","adminDelete","setAdminDelete","roleCreate","setRoleCreate","roleUpdate","setRoleUpdate","roleRead","setRoleRead","roleDelete","setRoleDelete","AdminsPage","filteredAdmins","InputAdminsDetails","selectedRole","setSelectedRole","AdminPage","App","isAuthenticated","className","MainDiv","RightSideBar","Boolean","window","hostname","initialState","JobsReducer","toLowerCase","filterTemp","includes","CandidatesReducer","AuthReducer","RolesReducer","assignedRoles","assignedRole","AdminsReducer","RootReducer","combineReducers","CandidateReducer","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,0jHCGpC,IAGMC,EACA,UADAA,EAEE,UAFFA,EAIA,UAJAA,EAKE,UALFA,EAOD,UAPCA,EAQC,UARDA,EAUD,UAVCA,EAWC,UAKDC,EAAWC,YAAH,KASRC,EAAOC,IAAOC,IAAV,KAoBJC,GAXOF,IAAOC,IAAV,KAWID,IAAOG,EAAV,MAULC,EAAeN,YAAH,IA1DC,+BA2EbO,EAAYL,IAAOG,EAAV,KAQTG,EAAUN,IAAOC,IAAV,KAOPM,EAAYP,IAAOC,IAAV,KAsBTO,GAlBaR,YAAOD,EAAPC,CAAH,KAIMA,YAAOS,IAAPT,CAAH,KAcJA,IAAOG,EAAV,KAKK,SAAAO,GAAK,OAAIA,GAASA,EAAMC,WAEnC,SAAAD,GAAK,OAAIA,GAASA,EAAME,UAKxBC,EAAMb,IAAOc,OAAV,KAMQ,SAAAJ,GAAK,OAAIA,GAASA,EAAME,SACxB,SAAAF,GAAK,OAAIA,GAASA,EAAME,SAG/B,SAAAF,GAAK,OAAIA,GAASA,EAAME,SAa5BG,EAAUf,YAAOS,IAAPT,CAAH,KAMPgB,EAAUhB,IAAOc,OAAV,IACdV,GAOOa,EAAYjB,IAAOc,OAAV,K,kLClJPI,MAdf,YAAiE,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACjD,OACI,kBAACf,EAAD,KACI,kBAAC,EAAD,CAASe,QAASA,GACd,kBAACpB,EAAD,KAAQiB,GACPC,GAEJC,IAUAf,EAAUN,IAAOC,IAAV,KAEG,SAAAS,GAAK,OAAIA,GAASA,EAAMY,W,orBCJhCC,MAff,YAAwC,IAAbC,EAAY,EAAZA,SAAY,EAEbC,qBAFa,mBAE5BC,EAF4B,KAEvBC,EAFuB,KAOnC,OACI,kBAACC,GAAD,CAAiBC,SALC,SAACC,GACnBA,EAAEC,iBACFP,EAASE,KAIL,kBAACM,GAAD,CAAaC,MAAOP,EAAKQ,SAAU,SAACJ,GAAD,OAAOH,EAAOG,EAAEK,OAAOF,QAAQG,KAAK,OAAOC,YAAY,WAC1F,kBAACC,GAAD,iBAONV,GAAkB5B,IAAOuC,KAAV,KAKfP,GAAchC,IAAOwC,MAAV,KAUXF,GAAYtC,IAAOc,OAAV,IFjCW,+B,+CGDb2B,GAAU,mC,eCAvBC,KAAMC,YCGC,IAAMC,GAAc,SAACC,GACxB,MAAe,aAAXA,EACO,CAAEjC,MAAOhB,EAAsBe,QAASf,GAC7B,yBAAXiD,EACA,CAAEjC,MAAOhB,EAAqBe,QAASf,GAC5B,YAAXiD,EACA,CAAEjC,MAAOhB,EAAsBe,QAASf,GAC7B,aAAXiD,EACA,CAAEjC,MAAOhB,EAAqBe,QAASf,QAD3C,GAuCEkD,GAAa,SAACC,GACvB,IAAMC,EAAMD,EAAIE,MAAM,IACtBD,EAAIE,QACJ,IAAMC,EAAcJ,EAAI,GAAGK,cACrBC,EAAmBL,EAAIM,KAAK,IAClC,MAAM,GAAN,OAAUH,GAAV,OAAwBE,I,+GCpD5B,IAIeE,GAJA,WACX,OAAO,kBAACC,GAAD,CAAaC,IAAKC,QAKvBF,GAAcxD,IAAO2D,IAAV,M,mzBCyFFC,OA3Ff,YAA+E,IAA9DC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,EAGxC1C,qBAHwC,mBAGnE2C,EAHmE,KAGxDC,EAHwD,KAW1EC,QAAQC,IAAIH,GACZE,QAAQC,IAAIR,GAEZ,IAUMS,EAAgB,SAACC,GACvB,OAAOV,EAAOW,KAAI,SAAAC,GAAK,OAAI,kBAACC,GAAD,CAASC,IAAKF,GAXrB,SAACF,EAAME,GACvB,MAAa,WAAVA,EACQ,kBAACnE,EAAWoC,GAAY6B,EAAKK,KAAK,GAAGjC,QAAU4B,EAAKK,KAAK,GAAGjC,QAClD,SAAV8B,EACAF,EAAKM,QAAQC,KAEbP,EAAKE,GAK8BM,CAAYR,EAAME,QAW9DO,EAAa,WAIf,GAHAZ,QAAQC,IAAI,kBACZD,QAAQC,IAAIV,GAETA,EAAK,CACJ,IAAMsB,EAAOtB,EAAKa,KAAI,SAAAD,GAClB,IAAMW,GAAQlB,GAAD,WAAaJ,EAAb,YAAsBW,EAAKY,KAClCC,EAAO,IAAIC,KAAKd,EAAKe,WAAWC,eAGzC,OAAO,kBAAC,GAAD,CAAeC,QAAS,kBAAIxB,IA1C7ByB,EA0C2ClB,EAAKY,SAzCxDlB,IACHA,EAASwB,GACTtB,EAAasB,MAHH,IAACA,GA0CsDd,IAAKJ,EAAKY,IAAKO,GAAIR,GAChE,kBAACS,GAAD,CAAMC,MAAO1B,IAAcK,EAAKY,IAAM,CAClCU,gBAAiBnG,GACb,MAEH4E,EAAcC,GACf,kBAACG,GAAD,KAAUU,QAK9B,OAAGH,EAAKa,OAAS,EACNb,EAGJ,UAGP,OAAO,kBAACU,GAAD,KA/BJ7B,EAAOU,KAAI,SAAAuB,GAAE,OAAI,kBAACrB,GAAD,CAASC,IAAKoB,GAAI,kBAAC,GAAD,YAkD9C,OACI,6BACI,kBAAC,EAAD,CAAiBzE,SAAUyC,IAXxB,kBAACiC,GAAD,KACH,kBAACL,GAAD,KA9CG7B,EAAOU,KAAI,SAAAD,GAAI,OAAI,kBAAC0B,GAAD,CAAgBtB,IAAKJ,GAAOA,OAiDjDS,OAePW,GAAO7F,IAAOoG,GAAV,MASJxB,GAAU5E,IAAOG,EAAV,MAMPkG,GAAgBrG,YAAOS,IAAPT,CAAH,MASbkG,GAAgBlG,IAAOsG,GAAV,MAObH,GAAiBnG,YAAO4E,GAAP5E,CAAH,M,QCpIPuG,GACS,mBADTA,GAEM,gBAFNA,GAKW,qBAIXC,GACe,yBADfA,GAEY,sBAFZA,GAIgB,0BAJhBA,GAKM,gBAGNC,GACH,OADGA,GAEE,YAGFC,GACU,oBADVA,GAEO,iBAFPA,GAIY,sBAGZC,GACW,qBADXA,GAES,kBAFTA,GAIa,sBC/BbC,GAAiB,SAACC,GAC3B,MAAO,CACHzE,KAAMmE,GACNM,YAYKC,GAAc,SAACD,GACxB,MAAO,CACHzE,KAAMmE,GACNM,YAIKE,GAAa,SAACF,GACvB,MAAO,CACHzE,KAAMmE,GACNM,YCvBKG,GAAa,SAACC,EAAUC,GACjC,IAAMC,EAAWC,eACXC,EAAUC,KAEhBC,qBAAU,WACNjD,QAAQC,IAAI,iBACZiD,KAAMC,IAAIR,EAAU,CAACI,YAChBK,MAAK,YAAe,IAAZ7D,EAAW,EAAXA,KACLS,QAAQC,IAAIV,GACZsD,EAASD,EAAKrD,OAEjB8D,OAAM,SAAAC,GAAG,OAAItD,QAAQC,IAAI,MAAQqD,QACxC,KAGOC,GAAY,SAACC,EAAWC,GACjC,IAAMZ,EAAWC,eACjBG,qBAAU,gBACYS,IAAdF,GACAX,EAASY,EAAOD,MAErB,CAACA,KAGKR,GAAa,WAAO,IACtBzD,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACP,OAAGA,EACiB,CACZ,SAAWA,EAAKsE,SAASC,SACzB,SAAWvE,EAAKsE,SAASE,UAI1B,MAIEC,GAAgB,SAACpB,GAC1B,IAAMC,EAAWC,eACjBG,qBAAU,WACNJ,EAASD,EAAK,SACf,KC3CMqB,GAAuB,SAAC1B,GACjC,MAAO,CACHzE,KAAMoE,GACNK,YAIK2B,GAAoB,SAAC3B,GAC9B,MAAO,CACHzE,KAAMoE,GACNK,YAIK4B,GAAmB,SAAC5B,GAC7B,MAAO,CACHzE,KAAMoE,GACNK,YAIK6B,GAAe,SAAC7F,GACzB,IAAIgE,EAAU,GAUd,OATe,IAAXhE,EACAgE,EAAU,UACQ,IAAXhE,EACPgE,EAAU,uBACQ,IAAXhE,EACPgE,EAAU,WACQ,IAAXhE,IACPgE,EAAU,YAEP,CACHzE,KAAMoE,GACNK,Y,0LCiBO8B,OAvCf,WAEqBvB,eAEjBkB,GAAc1B,IACd0B,GAAcE,IALE,IAMT3E,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACD+E,EAAc/E,GAAQA,EAAKsE,SAASpD,QAAQ6D,YAPlC,EASkBnH,qBATlB,mBASTqG,EATS,KASE7D,EATF,KAWhB+C,GAAWvE,GAASqE,IACpBe,GAAUC,EAAWf,IAZL,MAcekB,cAAY,SAAAC,GAAK,OAAIA,EAAMW,YAAlD/D,EAdQ,EAcRA,KAAMgE,EAdE,EAcFA,aAIRC,EAAS,CACXlF,UAH8BmE,IAAdF,EAA0BhD,EAAOgE,EAIjDhF,MAAO,MACPE,OAAQ,CAAC,YAAa,UAAW,WAAY,aAC7CD,OAAQ,CAAC,QAAS,UAAW,YAC7BE,gBAGJ,OACI,kBAAC,EAAD,CACI9C,MAAM,OACNC,OAAQwH,GAAeA,EAAYI,IAAIC,OAAS,kBAACC,GAAD,CAAUtD,GAAG,aAAb,gBAAmD,KACnGtE,QAAQ,iBAER,kBAACvB,EAAD,KACI,kBAAC,GAAUgJ,MAQrBG,GAAWlJ,YAAOS,IAAPT,CAAH,KACRI,G,8LC3CS+I,OATf,YAAwC,IAApBhI,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,SACvB,OACI,kBAAC+H,GAAD,KACI,kBAAC/I,EAAD,KAAYc,GACXE,IAOP+H,GAAcpJ,YAAOD,EAAPC,CAAH,M,irBCqBFqJ,OA/Bf,YAAuC,IAAdC,EAAa,EAAbA,UACrB,OACI,oCACI,kBAACC,GAAD,KACI,kBAACC,GAAD,eACA,kBAACC,GAAD,KAAUH,GAAaA,EAAUI,SAGrC,kBAACH,GAAD,KACI,kBAACC,GAAD,kBACA,kBAACC,GAAD,KAAUH,GAAaA,EAAUK,YAGrC,kBAACJ,GAAD,KACI,kBAACC,GAAD,oBACA,kBAACC,GAAD,KAAUH,GAAaA,EAAUM,SAGrC,kBAACL,GAAD,KACI,kBAACC,GAAD,cACA,kBAACC,GAAD,KAAUH,GAAaA,EAAUO,QAGrC,kBAACN,GAAD,KACI,kBAACC,GAAD,eACA,kBAACM,GAAD,CAAcC,KAAI,UAAKtH,GAAL,oBAAwB6G,GAAaA,EAAUjE,KAAOlD,OAAO,SAASvB,Md3B9E,Wc2BV,eAQV2I,GAAUvJ,IAAOC,IAAV,MAKP+J,GAAgBlK,YAAH,MAIb0J,GAAUxJ,IAAOG,EAAV,KACP6J,IAOAP,GAAUzJ,IAAOG,EAAV,KACP6J,IAKAF,GAAe9J,IAAOiK,EAAV,KACZ7J,GCcS8J,OA7Df,SAAuBxJ,GACnB,IAAM2G,EAAUC,KACTzD,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACD+E,EAAc/E,GAAQA,EAAKsE,SAASpD,QAAQ6D,YAC5CzB,EAAWC,eAJS,EAKoB3F,oBAAS,GAL7B,mBAKF0I,GALE,WAMpBxE,EAAKjF,EAAM0J,MAAMrB,OAAOpD,GACxB0E,EAAG,UAAM5H,GAAN,gBAAqBkD,GAC9BqB,GAAWqD,EAAK9B,IARU,IASlBe,EAAcrB,cAAY,SAAAC,GAAK,OAAIA,EAAMoC,iBAAzChB,UACRhF,QAAQC,IAAI+E,GAEZ,IAAMiB,EAAmB,yCAAG,WAAO1H,GAAP,gBAAAoH,EAAA,6DAClBO,EADkB,UACT/H,GADS,kBACQ6G,GAAaA,EAAUjE,IAD/B,mBAC6CxC,GAD7C,SAGpByB,QAAQC,IAAI8C,GAHQ,SAIdG,KAAMiD,MAAMD,EAAK,GAAI,CAACnD,YAJR,OAKpB8C,GAAmB,GACnBhD,EAASuB,GAAa7F,IACtBH,KAAMgI,QAAQ,iBAAkB,CAC5BC,SAAUjI,KAAMkI,SAASC,eART,kDAWpBnI,KAAMoI,MAAM,2BAA4B,CACpCH,SAAUjI,KAAMkI,SAASC,eAZT,0DAAH,sDAmCzB,OACI,kBAAC,EAAD,CACI1J,MAAOmI,EAAYA,EAAUtE,KAAK,kBAAC,GAAD,MAClC5D,OAAQ,kBAACZ,EAAWoC,GAAY0G,GAAaA,EAAUxE,KAAK,GAAGjC,QAC1DyG,GAAaA,EAAUxE,KAAK,GAAGjC,QAEpCvB,QAAQ,cAxBG,WACf,GAAGgI,EACC,OAAO,oCAENV,GAAeA,EAAYU,UAAUyB,OAAS,kBAAC,GAAD,CAAU5J,MAAM,mBAC3D,6BACKmI,GAA0C,aAA7BA,EAAUxE,KAAK,GAAGjC,QAAyB,kBAAChC,EAAD,CAAKD,MAAOhB,EAAqB8F,QAAS,kBAAM6E,EAAoB,KAApE,UACxDjB,GAA0C,aAA7BA,EAAUxE,KAAK,GAAGjC,QAAyB,kBAAChC,EAAD,CAAKD,MAAOhB,EAAsB8F,QAAS,kBAAM6E,EAAoB,KAArE,UACtDjB,GAA0C,yBAA7BA,EAAUxE,KAAK,GAAGjC,QAAuCyG,GAA0C,aAA7BA,EAAUxE,KAAK,GAAGjC,OAA0B,kBAAChC,EAAD,CAAKD,MAAOhB,EAAqB8F,QAAS,kBAAM6E,EAAoB,KAApE,sBAAmG,OAE/N,KACd,kBAACxK,EAAD,KACI,kBAAC,GAAD,CAAeuJ,UAAWA,MAe7B0B,K,saCtDEC,OARf,WACI,OACI,kBAACC,GAAD,KACI,kBAACC,GAAD,CAAevF,GAAG,KAAI,kBAACwF,GAAD,CAAW3H,IAAK4H,UAO5CD,GAAYpL,IAAO2D,IAAV,MAGTuH,GAASlL,IAAOsL,OAAV,KhBnBc,WgB4BpBH,GAAgBnL,YAAOS,IAAPT,CAAH,M,66BChBnB,IAAMuL,GAAe,CACjBxF,gBAAiB,UACjByF,WAAW,aAAD,OjBdY,WiBetBC,YAAa,QA+CFC,OAzCf,WAAoB,IACT7H,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACD+E,EAAc/E,GAAQA,EAAKsE,SAASpD,QAAQ6D,YAIlD,OACI,kBAAC+C,GAAD,KACI,kBAACC,GAAD,CAAQC,YAAaN,GAAcO,OAAK,EAAClG,GAAG,KACxC,kBAACmG,GAAD,CAAWtI,IAAKuI,OAChB,kBAACC,GAAD,mBAGHrD,GAAeA,EAAYI,IAAIkD,KAAM,kBAACN,GAAD,CAAQC,YAAaN,GAAc3F,GAAG,SACxE,kBAACmG,GAAD,CAAWtI,IAAK0I,OAChB,kBAACF,GAAD,cACQ,KAEXrD,GAAeA,EAAYU,UAAU4C,KAAM,kBAACN,GAAD,CAAQC,YAAaN,GAAcO,OAAK,EAAClG,GAAG,eACpF,kBAACmG,GAAD,CAAWtI,IAAK2I,OAChB,kBAACH,GAAD,oBACQ,KAEXrD,GAAeA,EAAYyD,KAAKH,KAAO,kBAACN,GAAD,CAAQC,YAAaN,GAAcO,OAAK,EAAClG,GAAG,UAChF,kBAACmG,GAAD,CAAWtI,IAAK6I,OAChB,kBAACL,GAAD,eACQ,KAEXrD,GAAeA,EAAY2D,MAAML,KAAM,kBAACN,GAAD,CAAQC,YAAaN,GAAcO,OAAK,EAAClG,GAAG,WAChF,kBAACmG,GAAD,CAAWtI,IAAK+I,OAChB,kBAACP,GAAD,gBACQ,KAEZ,kBAACL,GAAD,CAAQC,YAAaN,GAAcO,OAAK,EAAClG,GAAG,YACxC,kBAACmG,GAAD,CAAWtI,IAAKgJ,OAChB,kBAACR,GAAD,mBAQVN,GAAmB3L,IAAOC,IAAV,MAQhB8L,GAAY/L,IAAO2D,IAAV,MAGTsI,GAAYjM,IAAOG,EAAV,MAMTyL,GAAS5L,YAAOS,IAAPT,CAAH,M,kvCCfG0M,OAtDf,WACI,IAAMrF,EAAUC,KACTzD,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACP0D,qBAAU,WACNC,KAAMC,IAAN,UAAahF,GAAb,eAAmC,CAAE4E,YAChCK,MAAK,gBAAG7D,EAAH,EAAGA,KAAH,OAAcS,QAAQC,IAAIV,MAC/B8D,OAAM,SAAAC,GAAG,OAAItD,QAAQC,IAAIqD,QAE/B,IAGHtD,QAAQC,IAAIV,GAEZ,IAAM8I,EAAkB,SAAChI,GACrB,OAAGd,GAAQA,EAAKA,KAAKc,GACVd,EAAKA,KAAKc,GAEV,kBAAC,GAAD,OAIf,OACI,kBAACpE,EAAD,KACI,kBAACD,EAAD,KACI,kBAACJ,EAAD,mBAEJ,kBAAC0M,GAAD,KACI,kBAACC,GAAD,CAAYjH,GAAG,SACX,kBAACkH,GAAD,KACI,6BACI,kBAACC,GAAD,aACA,kBAACC,GAAD,KAAWL,EAAgB,eAE/B,kBAACM,GAAD,CAAMrM,MAAOhB,EAAuB6D,IAAK0I,SAIjD,kBAACU,GAAD,CAAYjH,GAAG,eACX,kBAACkH,GAAD,KACI,6BACI,kBAACC,GAAD,mBACA,kBAACC,GAAD,KAAWL,EAAgB,gBAE/B,kBAACM,GAAD,CAAMrM,MAAOhB,EAAwB6D,IAAKyJ,YAc5DL,GAAa7M,YAAOS,IAAPT,CAAH,MAQVmN,GAAYrN,YAAH,MAMTiN,GAAY/M,IAAOG,EAAV,KACTgN,IAOAH,GAAWhN,IAAOG,EAAV,KACRgN,IAKAL,GAAW9M,YAAOD,EAAPC,CAAH,MAaRiN,GAAOjN,IAAO2D,IAAV,MAEc,SAAAjD,GAAK,OAAIA,GAASA,EAAME,SAM1CgM,GAAgB5M,IAAOC,IAAV,MAKCD,IAAO2D,IAAV,M,ujBCtGFyJ,OApBf,YAAyB,IAATvJ,EAAQ,EAARA,KAAQ,EAEcpC,mBAAS,GAFvB,mBAEb4L,EAFa,KAEFC,EAFE,KAIdC,EAAiB1J,EAAKa,KAAI,WAAY8I,GAAW,IAApBrM,EAAmB,EAAnBA,MAC/B,OAAO,kBAACsM,GAAD,CAAK7M,MAAOyM,IAAcG,EAAQ,QAAU,YAAa9H,QAAS,kBAAM4H,EAAaE,KAASrM,MAGzG,OACI,6BACI,kBAACuM,GAAD,KACKH,GAEL,kBAAC,GAAD,KACK1J,EAAKwJ,GAAWM,aAQ3BF,GAAMzN,IAAOc,OAAV,MAKe,SAAAJ,GAAK,OAAIA,GAASA,EAAME,SAO1C8M,GAAkB1N,IAAOC,IAAV,MAMf2N,GAAa5N,YAAOD,EAAPC,CAAH,M,k/BCaD6N,OApDf,YAA2B,IAAR7E,EAAO,EAAPA,IAET9D,EAAa,SAACrB,GAChB,GAAIA,EACA,OAAIA,EAAKmC,OAAS,EACPnC,EAAKa,KAAI,SAAAD,GAAI,OAAI,wBAAII,IAAKJ,GAAOA,MAErC,WAIf,OACI,oCACI,kBAACqJ,GAAD,KACI,6BACI,kBAAC,GAAD,gBACA,kBAACC,GAAD,KAAU/E,GAAOA,EAAIgF,UAEzB,kBAACC,GAAD,KAAU,yBAAKxK,IAAKyK,OAApB,IAAqClF,GAAOA,EAAImF,WAGpD,kBAAC,GAAD,KACI,kBAAC,GAAD,oBACA,2BAAInF,GAAOA,EAAIoF,cAEnB,kBAAC,GAAD,KACI,2BAAG,kBAAC,GAAD,gBAAH,IAA+BpF,GAAOA,EAAIqF,QAC1C,2BAAG,kBAAC,GAAD,oBAAH,IAAmCrF,GAAOA,EAAIsF,aAGlD,kBAAC,GAAD,KACI,kBAAC,GAAD,sBACA,kBAACC,GAAD,KACKrJ,EAAW8D,GAAOA,EAAIwF,eAI/B,kBAAC,GAAD,KACI,kBAAC,GAAD,wBACA,kBAACD,GAAD,KACKrJ,EAAW8D,GAAOA,EAAIyF,oBAI/B,kBAAC,GAAD,KACI,kBAAC,GAAD,cACA,2BAAIzF,GAAOA,EAAI0F,iBASzBZ,GAAa9N,IAAOC,IAAV,MAQV+J,GAAgBlK,YAAH,MAKbyJ,GAAUvJ,IAAOC,IAAV,MAKPuJ,GAAUxJ,IAAOG,EAAV,KACP6J,IAOA+D,GAAU/N,IAAOG,EAAV,KACP6J,IAMAiE,GAAWjO,IAAOG,EAAV,KACR6J,IAIAuE,GAAKvO,IAAOsG,GAAV,MCxBOqI,OAxDf,SAAwBjO,GAAQ,IAAD,EACOe,qBADP,mBACpBqG,EADoB,KACT7D,EADS,KAErBkD,EAAWC,eACXzB,EAAKjF,EAAM0J,MAAMrB,OAAOpD,GACxB0E,EAAG,UAAM5H,GAAN,gBAAqBkD,GAG9BqB,GAAWqD,EAAK9B,IAChBV,GAAUC,EAAWW,IARM,IAWnBa,EAAcrB,cAAY,SAAAC,GAAK,OAAIA,EAAMoC,iBAAzChB,UAER/B,qBAAU,WACN,GAAI+B,EAAW,CACX,IAAMxE,EAAOwE,EAAUxE,KAAKJ,KAAI,SAAAD,GAAI,OAAIA,EAAKkB,MAC7CrB,QAAQC,IAAIO,GACZqC,EAASL,GAAYhC,OAE1B,CAACwE,IAnBuB,MAqBIrB,cAAY,SAAAC,GAAK,OAAIA,EAAMW,YAAlD/D,EArBmB,EAqBnBA,KAAMgE,EArBa,EAqBbA,aACR8F,OAA4B5G,IAAdF,EAA0BhD,EAAOgE,EACrDxE,QAAQC,IAAIO,GACZ,IAAMiE,EAAS,CACXlF,KAAM+K,EACN9K,MAAO,YACPE,OAAQ,CAAC,YAAa,UAAW,WAAY,aAC7CD,OAAQ,CAAC,QAAS,UAAW,YAC7BE,eACAC,MAAM,GAGJ2K,EAAU,CACZ,CACI1N,MAAO,eACPwM,UAAW,kBAAC,GAAU5E,IAE1B,CACI5H,MAAO,oBACPwM,UAAW,kBAAC,GAAD,CAAerE,UAAWA,MAO7C,OACI,kBAAC,EAAD,CACInI,MAAOmI,EAAYA,EAAUtE,KAAO,kBAAC,GAAD,OAEpC,kBAAC,GAAD,CAAMnB,KAAMgL,MCnEXC,GAAO,SAACjI,GACjB,MAAO,CACHzE,KAAMqE,GACNI,Y,4qDCwFOkI,OA3Ef,WAEI,IAAM5H,EAAWC,eAFC,EAIc3F,mBAAS,IAJvB,mBAIX2G,EAJW,KAID4G,EAJC,OAKcvN,mBAAS,IALvB,mBAKX4G,EALW,KAKD4G,EALC,OAMsBxN,mBAAS,MAN/B,mBAMXyN,EANW,KAMGC,EANH,OAOgB1N,mBAAS,SAPzB,mBAOX2N,EAPW,KAOAC,EAPA,KASZC,EAAelH,GAAYC,EAE3BkH,EAAQ,WACVP,EAAY,IACZC,EAAY,KAGVO,EAAgB,SAAC1N,EAAG2N,GACtBA,EAAQ3N,EAAEK,OAAOF,OACjBkN,EAAgB,OAGdO,EAAY,yCAAG,WAAO5N,GAAP,oBAAAmI,EAAA,6DACjBnI,EAAEC,iBACIyI,EAFW,UAEF/H,GAFE,eAGjB4M,EAAa,gBACbE,IAJiB,kBAQQ/H,KAAMC,IAAI+C,EAAK,CAChCnD,QAAQ,CACJ,SAAYe,EACZ,SAAYC,KAXP,gBAQNxE,EARM,EAQNA,KAOPS,QAAQC,IAAIV,GACZsD,EAAS2H,IAAK,IACd3H,ED9CD,CACH/E,KAAMqE,GACNI,QC4CsBhD,IAClBwL,EAAa,SAlBA,kDAoBblI,EAAS2H,IAAK,IACdS,IACAF,EAAa,SACbF,EAAgB,uBAvBH,0DAAH,sDA0BlB,OACI,kBAACQ,GAAD,KAEI,kBAACC,GAAD,KACI,kBAAC,GAAD,CAAWnM,IAAK4H,OAChB,kBAACwE,GAAD,KACI,kBAACC,GAAD,cACA,kBAACC,GAAD,CAAYlO,SAAU6N,GAClB,kBAACM,GAAD,KACI,kBAAC,GAAD,CAAMvM,IAAKwM,OACX,kBAACC,GAAD,CAAOjO,MAAOmG,EAAUlG,SAAU,SAACJ,GAAD,OAAO0N,EAAc1N,EAAGkN,IAAc5M,KAAK,OAAOC,YAAY,cAGpG,kBAAC2N,GAAD,KACI,kBAAC,GAAD,CAAMvM,IAAK0M,OACX,kBAACD,GAAD,CAAOjO,MAAOoG,EAAUnG,SAAU,SAACJ,GAAD,OAAO0N,EAAc1N,EAAGmN,IAAc7M,KAAK,WAAWC,YAAY,cAGxG,kBAAC+N,GAAD,CAAOC,UAAWf,GAAeF,IAErC,kBAACkB,GAAD,KAAUpB,OAYxBY,GAAa9P,IAAOuQ,GAAV,KACV1Q,EvB/FoB,WuBqGpB8P,GAAiB3P,IAAOC,IAAV,KvBrGM,WuB0GpBmL,GAAYpL,IAAO2D,IAAV,MAKTiM,GAAqB5P,IAAOC,IAAV,MAIlB4P,GAAa7P,YAAOD,EAAPC,CAAH,MAKV+P,GAAa/P,IAAOuC,KAAV,MAKV6N,GAAQpQ,IAAOc,OAAV,KvB7He,WuB2IpBmM,GAAOjN,IAAO2D,IAAV,MAIJqM,GAAiBhQ,IAAOC,IAAV,MAKdiQ,GAAQlQ,IAAOwC,MAAV,KvBpJe,WuBgKpB8N,GAAUtQ,IAAOG,EAAV,KACPN,EAEOD,G,yZCnIE4Q,OA7Bf,WACI,IAAMrJ,EAAWC,eACVvD,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACDuE,EAAWvE,GAAQA,EAAKsE,SAASC,SACjCpD,EAAOnB,GAAQA,EAAKsE,SAASpD,QAAQC,KAK3C,OACI,kBAACzE,EAAD,KACI,kBAACD,EAAD,KACI,kBAACJ,EAAD,gBACA,kBAACuQ,GAAD,CAAW/K,QAPD,WAClByB,EAAS2H,IAAK,MAMN,WAGJ,kBAAC/O,EAAD,KACI,kBAACM,EAAD,CAAWyF,MAAO,CAAE4K,OAAQ,QAA5B,YACZ,kBAAC,GAAD,CAAS5K,MAAO,CAAE6K,aAAc,SAAWvI,GAC3C,kBAAC/H,EAAD,CAAWyF,MAAO,CAAE4K,OAAQ,QAA5B,QACY,kBAAC,GAAD,KAAU1L,MAYpByL,GAAYzQ,IAAOc,OAAV,KAGFlB,EAIAA,GAOP6J,GAAUzJ,IAAOG,EAAV,MCmDEyQ,OAvFf,SAAiBlQ,GAEb4H,GAAcC,IAFM,IAGb1E,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACD+E,EAAc/E,GAAQA,EAAKsE,SAASpD,QAAQ6D,YAJ9B,EAMcnH,qBANd,mBAMbqG,EANa,KAMF7D,EANE,KAOdoD,EAAUC,KAPI,EAQoB7F,oBAAS,GAR7B,mBAQboP,EARa,KAQCC,EARD,KASd3J,EAAWC,eAEXzB,EAAKjF,EAAM0J,MAAMrB,OAAOpD,GACxB0E,EAAG,UAAM5H,GAAN,eAAoBkD,GACvBoL,EAAO,eAAWpL,GAGxBqB,GAAWqD,EAAKzD,IAChBiB,GAAUC,EAAWW,IAjBD,IAoBZO,EAAQf,cAAY,SAAAC,GAAK,OAAIA,EAAMW,YAAnCG,IAERzB,qBAAU,WACFyB,IACA1E,QAAQC,IAAIyE,EAAIgI,MAChB7J,EAASqB,GAAkBQ,EAAIgI,UAEpC,CAAChI,IA3BgB,MA+BuBf,cAAY,SAAAC,GAAK,OAAIA,EAAMoC,iBAA9D2G,EA/BY,EA+BZA,WAAYC,EA/BA,EA+BAA,mBAGdnI,EAAS,CACXlF,UAH8BmE,IAAdF,EAA0BmJ,EAAaC,EAIvDpN,MAAO,YACPE,OAAQ,CAAC,OAAQ,cAAe,SAAU,cAC1CD,OAAQ,CAAC,OAAQ,SAAU,UAC3BE,gBAGE4K,EAAU,CACZ,CACI1N,MAAO,iBACPwM,UAAW,kBAAC,GAAU5E,IAE1B,CACI5H,MAAO,cACPwM,UAAW,kBAAC,GAAD,CAAS3E,IAAKA,MAI3BmI,EAAgB,yCAAG,WAAOnI,EAAKoI,GAAZ,UAAAnH,EAAA,+EAEXzC,KAAM6J,OAAN,UAAgB5O,IAAhB,OAA0BuG,GAAOA,EAAI3D,KAAO,CAACgC,YAFlC,OAGjB+J,GAAS,GACT1O,KAAMgI,QAAQ,0BAA2B,CACrCC,SAAUjI,KAAMkI,SAASC,eALZ,gDAQjBnI,KAAMoI,MAAM,wBAAyB,CACjCH,SAAUjI,KAAMkI,SAASC,eATZ,yDAAH,wDAehByG,EACF,6BACK1I,GAAeA,EAAYI,IAAI+B,OAAS,kBAAChK,EAAD,CAAS6E,GAAImL,GAAS,kBAAC/P,EAAD,cAAoC,KAClG4H,GAAeA,EAAYI,IAAIqI,OAAU,kBAACpQ,EAAD,CAAWyE,QAAS,kBAAMyL,EAAiBnI,EAAK8H,KAAhD,UAAwF,MAI1I,OACI,kBAAC,EAAD,CACI3P,MAAO6H,EAAMA,EAAI7H,MAAQ,kBAAC,GAAD,MACzBC,OAAQkQ,EACRhQ,QAAQ,iBAER,kBAAC,GAAD,CAAMuC,KAAMgL,IACXgC,GAAgB,kBAAC,IAAD,CAAUjL,GAAG,Y,oyHC6H3B2L,OAhNf,YAAqC,IAAVnH,EAAS,EAATA,MACjB/C,EAAUC,KACVkK,EAAOpH,EAAMoH,KACXxI,EAAQf,cAAY,SAAAC,GAAK,OAAIA,EAAMW,YAAnCG,IACR1E,QAAQC,IAAIyE,GAEZ,IAAM5G,EAAOoP,EAAKvO,MAAM,KAAK,GACvB0C,EAAc,SAATvD,EAAkBgI,EAAMrB,OAAOpD,GAAK,GAEzC8L,EAAO3O,GAAWV,GAElBZ,EAAW,SAACmD,EAAO+M,GACrB,OAAG1I,GAAgB,SAAT5G,EACC4G,EAAIrE,GAGR+M,GAhBqB,EAmBUjQ,oBAAS,GAnBnB,mBAmBzBkQ,EAnByB,KAmBVC,EAnBU,OAqBNnQ,mBAASD,EAAS,QAAS,KArBrB,mBAqBzBL,EArByB,KAqBlB0Q,EArBkB,OAsBJpQ,mBAASD,EAAS,SAAU,KAtBxB,mBAsBzB6M,EAtByB,KAsBjByD,EAtBiB,OAuBMrQ,mBAASD,EAAS,cAAe,KAvBvC,mBAuBzB4M,EAvByB,KAuBZ2D,EAvBY,OAyBFtQ,mBAASD,EAAS,UAAW,KAzB3B,mBAyBzBwM,EAzByB,KAyBhBgE,EAzBgB,OA0BQvQ,mBAASD,EAAS,eAAgB,KA1B1C,mBA0BzBkN,EA1ByB,KA0BXuD,EA1BW,OA2BAxQ,mBAASD,EAAS,WAAY,KA3B9B,mBA2BzB2M,EA3ByB,KA2Bf+D,EA3Be,OA6BIzQ,mBAASD,EAAS,aAAc,KA7BpC,mBA6BzB8M,EA7ByB,KA6Bb6D,EA7Ba,OA+BgB1Q,qBA/BhB,mBA+BzB2Q,EA/ByB,KA+BPC,GA/BO,QAgCU5Q,mBAASD,EAAS,cAAe,KAhC3C,qBAgCzB8Q,GAhCyB,MAgCVC,GAhCU,SAkCsB9Q,qBAlCtB,qBAkCzB+Q,GAlCyB,MAkCJC,GAlCI,SAmCgBhR,mBAASD,EAAS,mBAAoB,KAnCtD,qBAmCzBiN,GAnCyB,MAmCPiE,GAnCO,SAoCFjR,mBAASgQ,GApCP,qBAoCzBkB,GApCyB,MAoChBC,GApCgB,MAsC1BtD,GAAenO,GAASiN,GAAeJ,GAAWU,GAAgBP,GAAYG,GAAcgE,GAActM,OAAS,GAAKyI,GAAiBzI,OAAS,EAGlJ6M,GAAe,WACjBhB,EAASrQ,EAAS,QAAS,KAC3BsQ,EAAUtQ,EAAS,SAAU,KAC7BuQ,EAAevQ,EAAS,cAAe,KACvCwQ,EAAWxQ,EAAS,UAAW,KAC/B0Q,EAAY1Q,EAAS,WAAY,KACjCyQ,EAAgBzQ,EAAS,eAAgB,KACzC2Q,EAAc3Q,EAAS,aAAc,KACrC+Q,GAAiB/Q,EAAS,cAAe,KACzC6Q,GAAoB,IACpBK,GAAoBlR,EAAS,mBAAoB,KACjD6Q,GAAoB,IACpBS,SAASC,eAAe,SAASC,SAI/BC,GAAe,yCAAG,+BAAAhJ,EAAA,6DACpB2I,GAAW,GAAD,OAAInB,EAAJ,WACVoB,KACMhP,EAAO,CACT1C,QACAkN,OAAQA,GAAkB,gBAC1BD,cACAJ,UACAU,eACAP,WACAG,aACAE,YAAa8D,GACb7D,qBAEJnK,QAAQC,IAAIV,GACNqP,EAAmB,SAAT9Q,EAAkBoF,KAAM2L,IAAN,UAAa1Q,IAAb,OAAuBkD,GAAM9B,EAAM,CAACwD,YAAYG,KAAM4L,KAAN,UAAc3Q,GAAd,UAA+BoB,EAAM,CAACwD,YAfpG,kBAiBO6L,EAjBP,cAkBhBtB,GAAiB,GACjBlP,KAAMgI,QAAQ,yBAA0B,CACpCC,SAAUjI,KAAMkI,SAASC,eAE7B+H,GAAW,QAtBK,kDAwBhBtO,QAAQC,IAAR,MACA7B,KAAMoI,MAAM,uBAAwB,CAChCH,SAAUjI,KAAMkI,SAASC,eAE7B+H,GAAW,QA5BK,0DAAH,qDAuCf1N,GAAa,SAACrB,EAAMwP,GACtB,IAAMlO,EAAOtB,EAAKa,KAAI,SAAAD,GAClB,OAAO,kBAAC,GAAD,CAASI,IAAKJ,GACjB,kBAAC6O,GAAD,KAAW7O,GACX,kBAAC,GAAD,CAAMiB,QAAS,kBAVD,SAAC7B,EAAMY,EAAM4O,GAEnCA,EADqBxP,EAAK0P,QAAO,SAAAtN,GAAE,OAAIA,IAAOxB,MASjB+O,CAAkB3P,EAAMY,EAAM4O,IAAe5P,IAAKgQ,WAI/E,OAAOtO,EAAKa,OAAS,EAAIb,EAAO,kBAACuO,GAAD,eAG9BC,GAAa,SAACC,EAAWP,EAAc5O,GACzC,IAAMoP,EAAI,aAAOD,GACjBC,EAAKC,KAAKrP,GACV4O,EAAaQ,GACbxB,GAAoB,IACpBI,GAAuB,KAGrBnB,GACF,6BACI,kBAACzQ,EAAD,CAAKD,MAAOhB,EAAqB8F,QAASmN,IAA1C,SACA,kBAAChS,EAAD,CAAKD,MAAOhB,EAAsByQ,UAAWf,GAAc5J,QAASuN,IAAkBN,KAI9F,OACI,kBAAC,EAAD,CAAkBxR,MAAK,UAAKsQ,EAAL,SAEnB,kBAAC,GAAD,CAAUtQ,MAAK,UAAKsQ,EAAL,cACVH,IAGL,kBAACvR,EAAD,KACI,kBAAC,GAAD,KACI,kBAACM,EAAD,oBACA,kBAAC,GAAD,KACI,kBAAC0T,GAAD,kBACA,kBAAC,GAAD,CAAOpO,GAAG,QAAQ1D,MAAOd,EAAOe,SAAU,SAACJ,GAAD,OAAO+P,EAAS/P,EAAEK,OAAOF,QAAQG,KAAK,UAEpF,kBAAC,GAAD,KACI,kBAAC2R,GAAD,eACA,kBAAC,GAAD,CAAO9R,MAAOoM,EAAQnM,SAAU,SAACJ,GAAD,OAAOgQ,EAAUhQ,EAAEK,OAAOF,QAAQG,KAAK,UAE3E,kBAAC,GAAD,KACI,kBAAC2R,GAAD,oBACA,kBAACC,GAAD,CAAU/R,MAAOmM,EAAalM,SAAU,SAACJ,GAAD,OAAOiQ,EAAejQ,EAAEK,OAAOF,QAAQG,KAAK,WAI5F,kBAAC,GAAD,KACI,kBAAC/B,EAAD,wBACA,kBAAC,GAAD,KACI,kBAAC0T,GAAD,aACA,kBAAC,GAAD,CAAO9R,MAAO+L,EAAS9L,SAAU,SAACJ,GAAD,OAAOkQ,EAAWlQ,EAAEK,OAAOF,QAAQG,KAAK,UAE7E,kBAAC,GAAD,KACI,kBAAC2R,GAAD,iBACA,kBAAC,GAAD,CAAO9R,MAAOkM,EAAUjM,SAAU,SAACJ,GAAD,OAAOoQ,EAAYpQ,EAAEK,OAAOF,QAAQG,KAAK,UAE/E,kBAAC,GAAD,KACI,kBAAC2R,GAAD,cACA,kBAACC,GAAD,CAAU/R,MAAOyM,EAAcxM,SAAU,SAACJ,GAAD,OAAOmQ,EAAgBnQ,EAAEK,OAAOF,QAAQG,KAAK,WAI9F,kBAAC,GAAD,KACI,kBAAC/B,EAAD,qBACA,kBAAC,GAAD,KACI,kBAAC0T,GAAD,mBACA,kBAAC,GAAD,CAAO9R,MAAOqM,EAAYpM,SAAU,SAACJ,GAAD,OAAOqQ,EAAcrQ,EAAEK,OAAOF,QAAQG,KAAK,UAEnF,kBAAC,GAAD,KACI,kBAAC2R,GAAD,+BACA,kBAACE,GAAD,CAAiBpS,SAAU,SAACC,GACxBA,EAAEC,iBACF4R,GAAWrB,GAAeC,GAAkBH,KAG5C,kBAAC8B,GAAD,CAAajS,MAAOmQ,EAAkBlQ,SAAU,SAACJ,GAAD,OAAOuQ,GAAoBvQ,EAAEK,OAAOF,QAAQG,KAAK,SACjG,kBAAC+R,GAAD,aAEJ,kBAAC,GAAD,KACKjP,GAAWoN,GAAeC,MAGnC,kBAAC,GAAD,KACI,kBAACwB,GAAD,yBACA,kBAACE,GAAD,CAAiBpS,SAAU,SAACC,GACxBA,EAAEC,iBACF4R,GAAWlF,GAAkBiE,GAAqBF,MAElD,kBAAC0B,GAAD,CAAajS,MAAOuQ,GAAqBtQ,SAAU,SAACJ,GAAD,OAAO2Q,GAAuB3Q,EAAEK,OAAOF,QAAQG,KAAK,SACvG,kBAAC+R,GAAD,aAEJ,kBAAC,GAAD,KAEKjP,GAAWuJ,GAAkBiE,QAQ7Cf,GAAiB,kBAAC,IAAD,CAAU/L,GAAG,YASrCoK,GAAiBhQ,IAAOC,IAAV,MAKd8T,GAAQ/T,IAAOoU,MAAV,MAKLC,GAAcvU,YAAH,MAYXkU,GAAWhU,IAAOsU,SAAV,KACRD,G1BrPoB,W0BmQpBnE,GAAQlQ,IAAOwC,MAAV,KACL6R,G1BpQoB,W0B2RpBJ,IAToBjU,IAAOC,IAAV,MAIVD,IAAOC,IAAV,MAKcD,IAAOuC,KAAV,OAUf4R,GAAYnU,IAAOc,OAAV,K1BrSW,+B0BsTpBoT,GAAclU,IAAOwC,MAAV,KACX6R,G1BvToB,W0B6UpB9F,IANkBvO,YAAOD,EAAPC,CAAH,MAMVA,IAAOsG,GAAV,KACgB1G,IAOlBgF,GAAU5E,IAAOoG,GAAV,K1BrVa,qB0BiWpBkN,GAAWtT,IAAOG,EAAV,MAKR8M,GAAOjN,IAAO2D,IAAV,MAiDJ4F,IA7CcvJ,YAAOK,EAAPL,CAAH,MA4BCA,YAAOE,EAAPF,CAAH,MAKKA,YAAOD,EAAPC,CAAH,MAYDA,IAAOC,IAAV,OAIPyT,GAAe1T,IAAOG,EAAV,KAKLP,G,0LCvXE2U,OAhCf,WACIjM,GAAcC,IACdD,GAAcxB,IAFQ,MAGYrF,qBAHZ,mBAGfqG,EAHe,KAGJ7D,EAHI,KAKtB+C,GAAW,GAAD,OAAIvE,GAAJ,iBAA4B+F,IACtCX,GAAUC,EAAWW,IANC,MAQqBR,cAAY,SAAAC,GAAK,OAAIA,EAAMoC,iBAA9D2G,EARc,EAQdA,WAAYC,EARE,EAQFA,mBACpB5M,QAAQC,IAAI0M,GAEZ,IAEMlI,EAAS,CACXlF,UAH8BmE,IAAdF,EAA0BmJ,EAAaC,EAIvDpN,MAAO,eACPE,OAAQ,CAAC,OAAQ,cAAe,SAAU,cAC1CD,OAAQ,CAAC,OAAQ,SAAU,UAC3BE,gBAGJ,OACI,kBAAC,EAAD,CACI9C,MAAM,cAEN,kBAACpB,EAAD,KACI,kBAAC,GAAUgJ,MCpCdyL,ID4CIxU,YAAOS,IAAPT,CAAH,KACRI,GC7CyB,SAACyG,GAC5B,MAAO,CACHzE,KAAMsE,GACNG,aAKK4N,GAAe,SAAC5N,GACzB,MAAO,CACHzE,KAAMsE,GACNG,YAIK6N,GAAc,SAAC7N,GACxB,MAAO,CACHzE,KAAMsE,GACNG,YClBK8N,GAAmB,SAAC9N,GAC7B,MAAO,CACHzE,KAAMuE,GACNE,YAKK+N,GAAgB,SAAC/N,GAC1B,MAAO,CACHzE,KAAMuE,GACNE,YAIKgO,GAAe,SAAChO,GACzB,MAAO,CACHzE,KAAMuE,GACNE,Y,0LC0BOiO,OAjCf,WACIxM,GAAckM,IACdlM,GAAcsM,IAFG,MAGiBnT,qBAHjB,mBAGVqG,EAHU,KAGC7D,EAHD,KAIjB+C,GAAW,GAAD,OAAIvE,GAAJ,SAAoBgS,IAC9B5M,GAAUC,EAAW4M,IALJ,IAMV7Q,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACD+E,EAAc/E,GAAQA,EAAKsE,SAASpD,QAAQ6D,YAPjC,EAQgBX,cAAY,SAAAC,GAAK,OAAIA,EAAM6M,aAApDC,EARS,EAQTA,MAAOC,EARE,EAQFA,cAITlM,EAAS,CACXlF,UAH8BmE,IAAdF,EAA0BkN,EAAQC,EAIlDnR,MAAO,OACPE,OAAQ,CAAC,YAAa,aACtBD,OAAQ,CAAC,QACTE,gBAGJ,OACI,kBAAC,EAAD,CACI9C,MAAM,QACNC,OAAQwH,GAAeA,EAAYyD,KAAKpD,OAAS,kBAAC,GAAD,CAAMrD,GAAG,aAAT,YAAuC,KACxFtE,QAAQ,iBAER,kBAACvB,EAAD,KACI,kBAAC,GAAUgJ,MAQrB3D,GAAOpF,YAAOS,IAAPT,CAAH,KACJI,G,4aCzBS8U,OAlBf,YAA4C,IAAzBxT,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,OAAQ0O,EAAW,EAAXA,SAU5B,OACI,kBAAC8E,GAAD,CAAgB9E,SAAUA,EAAU+E,UAAW1T,EAAKgE,QATzC,WAIX,OAHI2K,GACA1O,GAAQD,GAEL,2BAAO+B,IAAK4R,KAASC,UAAQ,MAO/B5T,GAAO,kBAAC,GAAD,CAAM+B,IAAK8R,SAOzBJ,GAAiBnV,IAAOC,IAAV,MAEI,SAAAS,GAAK,OAAIA,EAAM0U,U/BzBb,U+ByBsC,WAEjD,SAAA1U,GAAK,OAAIA,GAASA,EAAM2P,SAAW,GAAM,I/B3B9B,W+BoCpBpD,GAAOjN,IAAO2D,IAAV,M,irBCuHK6R,OAzJf,SAAkB9U,GAAQ,IAAD,EACkBA,EAAM2L,MAAQ3L,EAAM2L,KAAKzD,YAAzDI,EADc,EACdA,IAAKM,EADS,EACTA,UAAW+C,EADF,EACEA,KAAOE,EADT,EACSA,MAIxBkJ,EAAgB,CAClB,CACIC,QAAS,SACThU,IAAIsH,EAAIC,OACRtH,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAIsH,EAAI+B,OACRpJ,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,OACThU,IAAIsH,EAAIkD,KACRvK,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAIsH,EAAIqI,OACR1P,OAAO,KACP0O,UAAU,IAIZsF,EAAsB,CACxB,CACID,QAAS,SACThU,IAAI4H,EAAUL,OACdtH,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAI4H,EAAUyB,OACdpJ,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,OACThU,IAAI4H,EAAU4C,KACdvK,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAI4H,EAAU+H,OACd1P,OAAO,KACP0O,UAAU,IAIZuF,EAAkB,CACpB,CACIF,QAAS,SACThU,IAAI6K,EAAMtD,OACVtH,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAI6K,EAAMxB,OACVpJ,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,OACThU,IAAI6K,EAAML,KACVvK,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAI6K,EAAM8E,OACV1P,OAAO,KACP0O,UAAU,IAIZwF,EAAiB,CACnB,CACIH,QAAS,SACThU,IAAI2K,EAAKpD,OACTtH,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAI2K,EAAKtB,OACTpJ,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,OACThU,IAAI2K,EAAKH,KACTvK,OAAO,KACP0O,UAAU,GAEd,CACIqF,QAAS,SACThU,IAAI2K,EAAKgF,OACT1P,OAAO,KACP0O,UAAU,IAMZyF,EAAc,SAACjS,GACjB,OAAOA,EAAKa,KAAI,SAAAD,GACZ,OAAO,kBAACsR,GAAD,CAAmBlR,IAAKmR,gBAC3B,kBAAC,GAAavR,GACd,kBAACwR,GAAD,KAAexR,EAAKiR,cAKhC,OACI,6BACI,kBAACQ,GAAD,KAEI,kBAAC,GAAD,KACI,kBAAC,GAAD,wBACCJ,EAAYL,IAGjB,kBAAC,GAAD,KACI,kBAAC,GAAD,8BACCK,EAAYH,IAGjB,kBAAC,GAAD,KACI,kBAAC,GAAD,0BACCG,EAAYF,IAGjB,kBAAC,GAAD,KACI,kBAAC,GAAD,yBACCE,EAAYD,OAU3BK,GAAsBlW,IAAOC,IAAV,MAInB+P,GAAiBhQ,IAAOC,IAAV,MAOd8T,GAAQ/T,IAAOoU,MAAV,MAKL6B,GAAejW,IAAOG,EAAV,KACZN,GAMAkW,GAAoB/V,IAAOC,IAAV,MC3ERkW,OA1Ff,YAA4B,IAAT/L,EAAQ,EAARA,MACTjD,EAAWC,eACXC,EAAUC,KAFO,EAGK7F,oBAAS,GAHd,gCAIWA,oBAAS,IAJpB,mBAIhB2U,EAJgB,KAILC,EAJK,KAKjB1Q,EAAKyE,EAAMrB,OAAOpD,GACjB9B,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACD+E,EAAc/E,GAAQA,EAAKsE,SAASpD,QAAQ6D,YAP3B,EASWnH,qBATX,mBAShBqG,EATgB,KASL7D,EATK,KAYvB+C,GAAW,GAAD,OAAIvE,GAAJ,gBAAmBkD,GAAM6O,IACnC3M,GAAUC,EAAU+M,IAbG,IAgBhBxI,EAAQpE,cAAY,SAAAC,GAAK,OAAIA,EAAM6M,aAAnC1I,KAGP9E,qBAAU,WACF8E,GAEAlF,EAASyN,GAAcvI,EAAKiK,WAEjC,CAACjK,IAxBmB,MA0BWpE,cAAY,SAAAC,GAAK,OAAIA,EAAMqO,cAArDD,EA1Be,EA0BfA,OAAQE,EA1BO,EA0BPA,cACV5H,OAA4B5G,IAAdF,EAAyBwO,EAASE,EAEtDlS,QAAQC,IAAI8H,GACZ,IAAMoK,EAAa,yCAAG,uBAAAxM,EAAA,0DACfoC,GAA+B,IAAvBA,EAAKiK,OAAOtQ,OADL,0CAGJwB,KAAM6J,OAAN,UAAgB5O,GAAhB,gBAA+BkD,GAAM,CAAC0B,YAHlC,OAIVgP,GAAa,GAJH,gDAMV/R,QAAQC,IAAR,MACA8R,GAAa,GAPH,gCAUlB3T,KAAMoI,MAAM,uBAAGhF,MAAO,CAAC4K,OAAQ,MAAOgG,QAAQ,QAAlC,qBAA4D,6BAA5D,gCAA8F,6BAA9F,kCAVM,yDAAH,qDAiBbpF,EACF,6BACK1I,GAAeA,EAAYyD,KAAKtB,OAAS,kBAAChK,EAAD,CAAS6E,GAAE,qBAAgBD,IAAM,kBAAC3E,EAAD,cAAoC,KAC9G4H,GAAeA,EAAYyD,KAAKgF,OAAS,kBAACpQ,EAAD,CAAWyE,QAAS+Q,GAApB,UAAyD,MAIrG1N,EAAS,CACXlF,KAAM+K,EACN9K,MAAO,YACPE,OAAQ,CAAC,WAAY,cACrBD,OAAQ,CAAC,YACTE,eACAC,MAAM,GAGJ2K,EAAU,CACZ,CACI1N,MAAO,iBACPwM,UAAU,kBAAC,GAAU5E,IAEzB,CACI5H,MAAO,YACPwM,UAAW,kBAAC,GAAD,CAAUtB,KAAMA,MAKnC,OACI,kBAAC,EAAD,CACIlL,MAAOkL,EAAOA,EAAKrH,KAAO,kBAAC,GAAD,MAC1B5D,OAAQkQ,EACRhQ,QAAQ,iBAGR,kBAAC,GAAD,CAAMuC,KAAMgL,IAGXuH,GAAa,kBAAC,IAAD,CAAUxQ,GAAG,a,8pICwMxB+Q,OA/Rf,YAAuC,IAAVvM,EAAS,EAATA,MAEnBoH,EAAOpH,EAAMoH,KACbnK,EAAUC,KACVlF,EAAOoP,EAAKvO,MAAM,KAAK,GACvB0C,EAAc,SAATvD,EAAkBgI,EAAMrB,OAAOpD,GAAK,GAC/CqB,GAAW,GAAD,OAAIvE,GAAJ,gBAAmBkD,IANK,IAO1B0G,EAASpE,cAAY,SAAAC,GAAK,OAAIA,EAAM6M,aAApC1I,KAEFoF,EAAO3O,GAAWV,GAElBZ,EAAW,SAACmD,EAAO+M,EAAYkF,GACjC,OAAGvK,GAAiB,SAATjK,EACAiK,EAAKzD,YAAYjE,GAAOiS,GAG5BlF,GAhBuB,EAmBQjQ,oBAAS,GAnBjB,mBAmB3BkQ,EAnB2B,KAmBZC,EAnBY,OAqBVnQ,mBAAS4K,GAAQA,EAAKrH,MArBZ,mBAqB3BA,EArB2B,KAqBrB6R,EArBqB,OAsBApV,mBAASD,EAAS,OAAO,EAAO,WAtBhC,mBAsB3BsV,EAtB2B,KAsBhBC,EAtBgB,OAuBAtV,mBAASD,EAAS,OAAO,EAAO,WAvBhC,mBAuB3BwV,EAvB2B,KAuBhBC,EAvBgB,OAwBJxV,mBAASD,EAAS,OAAO,EAAO,SAxB5B,mBAwB3B0V,EAxB2B,KAwBlBC,EAxBkB,OAyBA1V,mBAASD,EAAS,OAAO,EAAO,WAzBhC,mBAyB3B4V,EAzB2B,KAyBhBC,EAzBgB,OA2BY5V,mBAASD,EAAS,aAAa,EAAO,WA3BlD,mBA2B3B8V,EA3B2B,KA2BVC,EA3BU,OA4BY9V,mBAASD,EAAS,aAAa,EAAO,WA5BlD,mBA4B3BgW,EA5B2B,KA4BVC,EA5BU,OA6BQhW,mBAASD,EAAS,aAAa,EAAO,SA7B9C,mBA6B3BkW,EA7B2B,KA6BZC,GA7BY,QA8BYlW,mBAASD,EAAS,aAAa,EAAO,WA9BlD,qBA8B3BoW,GA9B2B,MA8BVC,GA9BU,SAgCIpW,mBAASD,EAAS,SAAS,EAAO,WAhCtC,qBAgC3BsW,GAhC2B,MAgCdC,GAhCc,SAiCItW,mBAASD,EAAS,SAAS,EAAO,WAjCtC,qBAiC3BwW,GAjC2B,MAiCdC,GAjCc,SAkCAxW,mBAASD,EAAS,SAAS,EAAO,SAlClC,qBAkC3B0W,GAlC2B,MAkChBC,GAlCgB,SAmCI1W,mBAASD,EAAS,SAAS,EAAO,WAnCtC,qBAmC3B4W,GAnC2B,MAmCdC,GAnCc,SAqCE5W,mBAASD,EAAS,QAAQ,EAAO,WArCnC,qBAqC3B8W,GArC2B,MAqCfC,GArCe,SAsCE9W,mBAASD,EAAS,QAAQ,EAAO,WAtCnC,qBAsC3BgX,GAtC2B,MAsCfC,GAtCe,SAuCFhX,mBAASD,EAAS,QAAQ,EAAO,SAvC/B,qBAuC3BkX,GAvC2B,MAuCjBC,GAvCiB,SAwCElX,mBAASD,EAAS,QAAQ,EAAO,WAxCnC,qBAwC3BoX,GAxC2B,MAwCfC,GAxCe,SA2CJpX,mBAASgQ,GA3CL,qBA2C3BkB,GA3C2B,MA2ClBC,GA3CkB,MA8C5BtD,GAAetK,EAEf6N,GAAe,WACjBgE,EAAQxK,GAAQA,EAAKrH,MACrB+R,EAAavV,EAAS,OAAO,EAAO,WACpCyV,EAAazV,EAAS,OAAO,EAAO,WACpC2V,EAAW3V,EAAS,OAAO,EAAO,SAClC6V,EAAa7V,EAAS,OAAO,EAAO,WAEpC+V,EAAmB/V,EAAS,aAAa,EAAO,WAChDiW,EAAmBjW,EAAS,aAAa,EAAO,WAChDmW,GAAiBnW,EAAS,aAAa,EAAO,SAC9CqW,GAAmBrW,EAAS,aAAa,EAAO,WAEhDuW,GAAevW,EAAS,SAAS,EAAO,WACxCyW,GAAezW,EAAS,SAAS,EAAO,WACxC2W,GAAa3W,EAAS,SAAS,EAAO,SACtC6W,GAAe7W,EAAS,SAAS,EAAO,WAExC+W,GAAc/W,EAAS,QAAQ,EAAO,WACtCiX,GAAcjX,EAAS,QAAQ,EAAO,WACtCmX,GAAYnX,EAAS,QAAQ,EAAO,SACpCqX,GAAcrX,EAAS,QAAQ,EAAO,WAEtCsR,SAASC,eAAe,QAAQC,SAG9ByC,GAAgB,CAClB,CACIC,QAAS,SACThU,IAAIoV,EACJnV,OAAOoV,GAEX,CACIrB,QAAS,SACThU,IAAIsV,EACJrV,OAAOsV,GAEX,CACIvB,QAAS,OACThU,IAAIwV,EACJvV,OAAOwV,GAEX,CACIzB,QAAS,SACThU,IAAI0V,EACJzV,OAAO0V,IAIT1B,GAAsB,CACxB,CACID,QAAS,SACThU,IAAI4V,EACJ3V,OAAO4V,GAEX,CACI7B,QAAS,SACThU,IAAI8V,EACJ7V,OAAO8V,GAEX,CACI/B,QAAS,OACThU,IAAIgW,EACJ/V,OAAOgW,IAEX,CACIjC,QAAS,SACThU,IAAIkW,GACJjW,OAAOkW,KAITjC,GAAkB,CACpB,CACIF,QAAS,SACThU,IAAIoW,GACJnW,OAAOoW,IAEX,CACIrC,QAAS,SACThU,IAAIsW,GACJrW,OAAOsW,IAEX,CACIvC,QAAS,OACThU,IAAIwW,GACJvW,OAAOwW,IAEX,CACIzC,QAAS,SACThU,IAAI0W,GACJzW,OAAO0W,KAITxC,GAAiB,CACnB,CACIH,QAAS,SACThU,IAAI4W,GACJ3W,OAAO4W,IAEX,CACI7C,QAAS,SACThU,IAAI8W,GACJ7W,OAAO8W,IAEX,CACI/C,QAAS,OACThU,IAAIgX,GACJ/W,OAAOgX,IAEX,CACIjD,QAAS,SACThU,IAAIkX,GACJjX,OAAOkX,KAIT/C,GAAc,SAACjS,GACjB,OAAOA,EAAKa,KAAI,SAAAD,GACZ,OAAO,kBAAC,GAAD,CAAmBI,IAAKmR,gBAC3B,kBAAC,GAAavR,GACd,kBAAC,GAAD,KAAeA,EAAKiR,cAK1BzC,GAAe,yCAAG,+BAAAhJ,EAAA,6DACpB2I,GAAW,GAAD,OAAInB,EAAJ,WACVoB,KACMhP,EAAO,CACTmB,OACA4D,YAAY,CACRI,IAAI,CACAC,OAAQ6N,EACR/L,OAAQiM,EACR9K,KAAMgL,EACN7F,OAAQ+F,GAGZ9N,UAAU,CACNL,OAAQqO,EACRvM,OAAQyM,EACRtL,KAAMwL,EACNrG,OAAQuG,IAEZrL,MAAM,CACFtD,OAAQ6O,GACR/M,OAAQiN,GACR9L,KAAMgM,GACN7G,OAAQ+G,IAEZ/L,KAAK,CACDpD,OAAQqP,GACRvN,OAAQyN,GACRtM,KAAMwM,GACNrH,OAAQuH,MAKpBtU,QAAQC,IAAIV,GACNqP,EAAmB,SAAT9Q,EAAkBoF,KAAMiD,MAAN,UAAehI,GAAf,gBAA8BkD,GAAM9B,EAAM,CAACwD,YAAYG,KAAM4L,KAAN,UAAc3Q,GAAd,QAA6BoB,EAAM,CAACwD,YAnCzG,kBAqCO6L,EArCP,cAsChBtB,GAAiB,GACjBlP,KAAMgI,QAAQ,yBAA0B,CACpCC,SAAUjI,KAAMkI,SAASC,eAE7B+H,GAAWnB,GA1CK,kDA4ChBnN,QAAQC,IAAR,MACA7B,KAAMoI,MAAM,uBAAwB,CAChCH,SAAUjI,KAAMkI,SAASC,eAE7B+H,GAAWnB,GAhDK,0DAAH,qDAuDfH,GACF,6BACI,kBAACzQ,EAAD,CAAKD,MAAOhB,EAAqB8F,QAASmN,IAA1C,SACA,kBAAChS,EAAD,CAAKD,MAAOhB,EAAsByQ,UAAWf,GAAc5J,QAASuN,IAAkBN,KAI9F,OACI,kBAAC,EAAD,CAAkBxR,MAAK,UAAKsQ,EAAL,UAEnB,kBAAC,GAAD,CAAUtQ,MAAK,UAAKsQ,EAAL,cACVH,IAGL,kBAACvR,EAAD,KACI,kBAAC,GAAD,KACI,kBAACM,EAAD,qBACA,kBAAC,GAAD,KACI,kBAAC,GAAD,kBACA,kBAAC,GAAD,CAAOsF,GAAG,OAAO1D,MAAO+C,EAAM9C,SAAU,SAACJ,GAAD,OAAO+U,EAAQ/U,EAAEK,OAAOF,QAAQG,KAAK,UAGjF,kBAAC,GAAD,KAEA,kBAAC,GAAD,KACI,kBAAC,GAAD,wBACC0T,GAAYL,KAGjB,kBAAC,GAAD,KACI,kBAAC,GAAD,8BACCK,GAAYH,KAGjB,kBAAC,GAAD,KACI,kBAAC,GAAD,0BACCG,GAAYF,KAGjB,kBAAC,GAAD,KACI,kBAAC,GAAD,yBACCE,GAAYD,QAUxBlE,GAAiB,kBAAC,IAAD,CAAU/L,GAAG,aASrCsQ,GAAsBlW,IAAOC,IAAV,MAInB+P,GAAiBhQ,IAAOC,IAAV,MAMd8T,GAAQ/T,IAAOoU,MAAV,MAKLC,GAAcvU,YAAH,MA2BXoQ,IAfWlQ,IAAOsU,SAAV,KACRD,GlC1UoB,WkCwVZrU,IAAOwC,MAAV,KACL6R,GlCzVoB,YkCudpB9K,IAhHoBvJ,IAAOC,IAAV,MAIVD,IAAOC,IAAV,MAKcD,IAAOuC,KAAV,MAUHvC,IAAOc,OAAV,KlC1XW,+BkC2YNd,IAAOwC,MAAV,KACX6R,GlC5YoB,WkC4ZFrU,YAAOD,EAAPC,CAAH,MAMVA,IAAOsG,GAAV,KACgB1G,GAORI,IAAOoG,GAAV,KlC1aa,qBkCsbTpG,IAAOG,EAAV,MAKDH,IAAO2D,IAAV,MAIU3D,YAAOK,EAAPL,CAAH,MAOCA,YAAOE,EAAPF,CAAH,MAKKA,YAAOD,EAAPC,CAAH,MAYDA,IAAOC,IAAV,OAYPgW,IARejW,IAAOG,EAAV,KAKLP,GAGQI,IAAOG,EAAV,KACZN,IAMAkW,GAAoB/V,IAAOC,IAAV,M,0LC3bR6Y,OAtCf,WAEIxQ,GAAcqM,IACdrM,GAAcmM,IAHI,MAKgBhT,qBALhB,mBAKXqG,EALW,KAKA7D,EALA,KAMlB+C,GAAW,GAAD,OAAIvE,GAAJ,UAAqBmS,IAC/B/M,GAAUC,EAAW+M,IAPH,MASgB5M,cAAY,SAAAC,GAAK,OAAIA,EAAMqO,cAAtDD,EATW,EASXA,OAAQyC,EATG,EASHA,eACfzU,QAAQC,IAAI+R,GACZ,IAAM1H,OAA4B5G,IAAdF,EAA0BwO,EAASyC,EACvDzU,QAAQC,IAAIqK,GACZ,IAAM7F,EAAS,CACXlF,KAAM+K,EACN9K,MAAO,QACPE,OAAQ,CAAC,WAAY,gBAAiB,aACtCD,OAAQ,CAAC,WAAY,QACrBE,gBAOJ,OACI,kBAAC,EAAD,CACI9C,MAAM,SACNC,OAAQ,kBAAC,GAAD,CAAMwE,GAAG,cAAT,aACRtE,QAAQ,iBAER,kBAACvB,EAAD,KACI,kBAAC,GAAUgJ,MAQrB3D,GAAOpF,YAAOS,IAAPT,CAAH,KACJI,G,6pICwFS4Y,OA1Hf,YAAwC,IAAV5O,EAAS,EAATA,MAEpBoH,EAAOpH,EAAMoH,KAFgB,EAGD/P,qBAHC,mBAG5BqG,EAH4B,KAGjB7D,EAHiB,KAK7B7B,EAAOoP,EAAKvO,MAAM,KAAK,GACvB0C,EAAc,SAATvD,EAAkBgI,EAAMrB,OAAOpD,GAAK,GAC/CqB,GAAW,GAAD,OAAIvE,GAAJ,iBAAoBkD,GAAMgP,IACpC3N,GAAW,GAAD,OAAIvE,GAAJ,SAAoBgS,IAC9B5M,GAAUC,EAAW4M,IAErB,IAAMrN,EAAUC,KAERiF,EAAUtE,cAAY,SAAAC,GAAK,OAAIA,EAAMqO,cAArChK,MACRjI,QAAQC,IAAIgI,GAduB,MAeFtE,cAAY,SAAAC,GAAK,OAAIA,EAAM6M,aAApDC,EAf2B,EAe3BA,MAAOC,EAfoB,EAepBA,cACXrG,OAA4B5G,IAAdF,EAA0BkN,EAAQC,EAEpD3Q,QAAQC,IAAIyQ,GAlBuB,MAmBHvT,mBAAS8K,GAASA,EAAMnE,UAnBrB,mBAmB5BA,EAnB4B,KAmBlB4G,EAnBkB,OAoBHvN,mBAAS8K,GAASA,EAAMlE,UApBrB,mBAoB5BA,EApB4B,KAoBlB4G,EApBkB,KAqB7BwC,EAAO3O,GAAWV,GArBW,EA+BOX,oBAAS,GA/BhB,mBA+B5BkQ,EA/B4B,KA+BbC,EA/Ba,OAgCKnQ,mBAAS8K,GAASA,EAAMxH,SAhC7B,mBAgC5BkU,EAhC4B,KAgCdC,EAhCc,OAmCLzX,mBAASgQ,GAnCJ,mBAmC5BkB,EAnC4B,KAmCnBC,EAnCmB,KAsC7BtD,EAAelH,GAAYC,GAAY4Q,EAEvCpG,EAAe,WAEjBC,SAASC,eAAe,YAAYC,SAIlCC,EAAe,yCAAG,+BAAAhJ,EAAA,6DACpB2I,EAAW,GAAD,OAAInB,EAAJ,WACVoB,IACMhP,EAAO,CACTuE,WACAC,WACAtD,QAASkU,GAEb3U,QAAQC,IAAIV,GACNqP,EAAmB,SAAT9Q,EAAkBoF,KAAMiD,MAAN,UAAehI,GAAf,iBAA+BkD,GAAM9B,EAAM,CAACwD,YAAYG,KAAM4L,KAAN,UAAc3Q,GAAd,SAA8BoB,EAAO,CAACwD,YAT5G,kBAWO6L,EAXP,cAYhBtB,GAAiB,GACjBlP,KAAMgI,QAAQ,0BAA2B,CACrCC,SAAUjI,KAAMkI,SAASC,eAE7B+H,EAAWnB,GAhBK,kDAkBhBnN,QAAQC,IAAR,MACA7B,KAAMoI,MAAM,wBAAyB,CACjCH,SAAUjI,KAAMkI,SAASC,eAE7B+H,EAAWnB,GAtBK,0DAAH,qDA6BfH,EACF,6BACI,kBAACzQ,EAAD,CAAKD,MAAOhB,EAAqB8F,QAASmN,GAA1C,SACA,kBAAChS,EAAD,CAAKD,MAAOhB,EAAsByQ,UAAWf,EAAc5J,QAASuN,GAAkBN,IAIxF5J,EAAS,CACXlF,KAAM+K,EACN9K,MAAO,OACPE,OAAQ,CAAC,YAAa,aACtBD,OAAQ,CAAC,QACTE,eACAC,MAAM,EACNC,SAAU+U,GAGd,OACI,kBAAC,EAAD,CAAkB/X,MAAK,UAAKsQ,EAAL,WAEnB,kBAAC,GAAD,CAAUtQ,MAAK,UAAKsQ,EAAL,cACVH,GAGL,kBAACvR,EAAD,KACI,kBAAC,GAAD,KACI,kBAACM,EAAD,sBACA,kBAAC,GAAD,KACI,kBAAC,GAAD,iBACA,kBAAC,GAAD,CAAOsF,GAAG,WAAW1D,MAAOmG,EAAUlG,SAAU,SAACJ,GAAD,OAAOkN,EAAYlN,EAAEK,OAAOF,QAAQG,KAAK,SACzF,kBAAC,GAAD,iBACA,kBAAC,GAAD,CAAOH,MAAOoG,EAAUnG,SAAU,SAACJ,GAAD,OAAOmN,EAAYnN,EAAEK,OAAOF,QAAQG,KAAK,YAKvF,kBAACrC,EAAD,KACI,kBAAC,GAAUgJ,IAGd4I,GAAiB,kBAAC,IAAD,CAAU/L,GAAG,cAarCoK,IAJsBhQ,IAAOC,IAAV,MAIFD,IAAOC,IAAV,OAMd8T,GAAQ/T,IAAOoU,MAAV,MAKLC,GAAcvU,YAAH,MA0BXoQ,IAdWlQ,IAAOsU,SAAV,KACRD,GpCxKoB,WoCqLZrU,IAAOwC,MAAV,KACL6R,GpCtLoB,YoCoTpB9K,IAhHoBvJ,IAAOC,IAAV,MAIVD,IAAOC,IAAV,MAKcD,IAAOuC,KAAV,MAUHvC,IAAOc,OAAV,KpCvNW,+BoCwONd,IAAOwC,MAAV,KACX6R,GpCzOoB,WoCyPFrU,YAAOD,EAAPC,CAAH,MAMVA,IAAOsG,GAAV,KACgB1G,GAORI,IAAOoG,GAAV,KpCvQa,qBoCmRTpG,IAAOG,EAAV,MAKDH,IAAO2D,IAAV,MAIU3D,YAAOK,EAAPL,CAAH,MAOCA,YAAOE,EAAPF,CAAH,MAKKA,YAAOD,EAAPC,CAAH,MAYDA,IAAOC,IAAV,OAIQD,IAAOG,EAAV,KAKLP,GAGQI,IAAOG,EAAV,KACZN,GAMoBG,IAAOC,IAAV,MCzQRkZ,OAnDf,YAA6B,IAAT/O,EAAQ,EAARA,MACV/C,EAAUC,KADQ,EAEU7F,oBAAS,GAFnB,mBAEjB2U,EAFiB,KAENC,EAFM,KAGlB1Q,EAAKyE,EAAMrB,OAAOpD,GACjB9B,EAAQoE,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAnCtE,KACD+E,EAAc/E,GAAQA,EAAKsE,SAASpD,QAAQ6D,YAElD5B,GAAW,GAAD,OAAIvE,GAAJ,iBAAoBkD,GAAMgP,IAPZ,IAQjBpI,EAAStE,cAAY,SAAAC,GAAK,OAAIA,EAAMqO,cAApChK,MACJA,GACCjI,QAAQC,IAAIgI,EAAMxH,SAGtB,IAAM0R,EAAa,yCAAG,uBAAAxM,EAAA,+EAERzC,KAAM6J,OAAN,UAAgB5O,GAAhB,iBAAgCkD,GAAM,CAAC0B,YAF/B,OAGdgP,GAAa,GAHC,gDAKd/R,QAAQC,IAAR,MACA8R,GAAa,GANC,yDAAH,qDAUb/E,EACF,6BACK1I,GAAeA,EAAYyD,KAAKtB,OAAS,kBAAChK,EAAD,CAAS6E,GAAE,sBAAiBD,IAAM,kBAAC3E,EAAD,cAAoC,KAC/G4H,GAAeA,EAAYyD,KAAKgF,OAAS,kBAACpQ,EAAD,CAAWyE,QAAS+Q,GAApB,UAAyD,MAK3G,OACI,kBAAC,EAAD,CACItV,MAAOoL,EAAQA,EAAMnE,SAAW,kBAAC,GAAD,MAChChH,OAAQkQ,EACRhQ,QAAQ,iBAIRiL,GAAS,kBAACxM,EAAD,KAEL,kBAACM,EAAD,KAAYkM,EAAMxH,QAAQC,MAC1B,kBAAC,GAAD,CAAUqH,KAAME,EAAMxH,WAIzBqR,GAAa,kBAAC,IAAD,CAAUxQ,GAAG,c,yXC2BxBwT,OA/Df,WAAgB,IAENC,EAAoBpR,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAA/CkR,gBAmDR,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACGD,EAnDE,oCAEL,kBAAC,GAAD,MACA,kBAACE,GAAD,KACE,kBAAC,GAAD,MACA,kBAACC,GAAD,KAGE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOhI,KAAK,IAAI1F,OAAK,EAAC6B,UAAWjB,KAEjC,kBAAC,IAAD,CAAO8E,KAAK,YAAY7D,UAAW4D,KACnC,kBAAC,IAAD,CAAOC,KAAK,gBAAgB7D,UAAW4D,KAEvC,kBAAC,IAAD,CAAOC,KAAK,YAAY7D,UAAWgJ,KACnC,kBAAC,IAAD,CAAOnF,KAAK,iBAAiB7D,UAAWgJ,KAExC,kBAAC,IAAD,CAAOnF,KAAK,aAAa7D,UAAWqL,KACpC,kBAAC,IAAD,CAAOxH,KAAK,kBAAkB7D,UAAWqL,KAEzC,kBAAC,IAAD,CAAOxH,KAAK,QAAQ7D,UAAWhF,KAC/B,kBAAC,IAAD,CAAO6I,KAAK,WAAW7D,UAAWiD,KAClC,kBAAC,IAAD,CAAOY,KAAK,iBAAiB7D,UAAWzD,KAExC,kBAAC,IAAD,CAAOsH,KAAK,oBAAoB7D,UAAWgB,KAE3C,kBAAC,IAAD,CAAO6C,KAAK,cAAc7D,UAAW4G,KACrC,kBAAC,IAAD,CAAO/C,KAAK,WAAW7D,UAAW6C,KAClC,kBAAC,IAAD,CAAOgB,KAAK,SAAS7D,UAAWmH,KAChC,kBAAC,IAAD,CAAOtD,KAAK,YAAY7D,UAAWwI,KACnC,kBAAC,IAAD,CAAO3E,KAAK,UAAU7D,UAAWmL,KACjC,kBAAC,IAAD,CAAOtH,KAAK,aAAa7D,UAAWwL,SAcrC,kBAAC,IAAD,CAAO3H,KAAK,IAAI7D,UAAWoB,QAehCwK,GAAUvZ,IAAOC,IAAV,MAWPuZ,IAJqBxZ,IAAOC,IAAV,MAIHD,IAAOC,IAAV,OCxFEwZ,QACW,cAA7BC,OAAOvL,SAASwL,UAEe,UAA7BD,OAAOvL,SAASwL,UAEhBD,OAAOvL,SAASwL,SAASvP,MACvB,2D,qBChBAwP,GAAe,CACjB9U,KAAM,KACNkE,IAAK,KACLF,kBAAcd,GAsCH6R,GAnCK,WAA8C,IAA7C3R,EAA4C,uDAApC0R,GAAoC,yCAApBxX,EAAoB,EAApBA,KAAMyE,EAAc,EAAdA,QAC/C,OAAQzE,GAEJ,KAAKmE,GAED,OADAjC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEIpD,KAAM+B,IAId,KAAKN,GAED,OADAjC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEIc,IAAKnC,IAGb,KAAKN,GAED,IAAMuB,EAAYjB,EAAQiT,cAC1BxV,QAAQC,IAAIuD,GACZ,IAAMiS,EAAa7R,EAAMpD,KAAKyO,QAAO,SAAA9O,GACjC,OAAOA,EAAKtD,MAAM2Y,cAAcE,SAASlS,MAE7C,OAAO,6BACAI,GADP,IAEIY,aAAciR,IAGtB,QACI,OAAO7R,ICrCb0R,GAAe,CACjB3I,WAAY,KACZ3H,UAAW,KACX4H,wBAAoBlJ,GA+CTiS,GA5CW,WAA8C,IAA7C/R,EAA4C,uDAApC0R,GAAoC,yCAApBxX,EAAoB,EAApBA,KAAMyE,EAAc,EAAdA,QACrD,OAAQzE,GAEJ,KAAKoE,GAED,OADAlC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEI+I,WAAYpK,IAGpB,KAAKL,GAED,OADAlC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEIoB,UAAWzC,IAGnB,KAAKL,GACD,IAAMsB,EAAYjB,EAAQiT,cAC1BxV,QAAQC,IAAIuD,GACZ,IAAMiS,EAAa7R,EAAM+I,WAAWsC,QAAO,SAAA9O,GACvC,OAAOA,EAAKO,KAAK8U,cAAcE,SAASlS,MAI5C,OAFAxD,QAAQC,IAAIwV,GAEL,6BACA7R,GADP,IAEIgJ,mBAAoB6I,IAG5B,KAAKvT,GACDlC,QAAQC,IAAIsC,GACZ,IAAIgN,EAAI,gBAAQ3L,EAAMoB,WAEtB,OADAuK,EAAK/O,KAAK,GAAGjC,OAASgE,EACf,6BACAqB,GADP,IAEIoB,UAAWuK,IAGnB,QACI,OAAO3L,IC9Cb0R,GAAe,CACjBP,iBAAiB,EACjBxV,KAAM,MAuBKqW,GApBK,WAA8C,IAA7ChS,EAA4C,uDAApC0R,GAAoC,yCAApBxX,EAAoB,EAApBA,KAAMyE,EAAc,EAAdA,QAC/C,OAAQzE,GACJ,KAAKqE,GACD,OAAO,6BACAyB,GADP,IAEImR,gBAAiBxS,IAGzB,KAAKJ,GACD,OAAO,6BACAyB,GADP,IAEIrE,KAAMgD,IAId,QACI,OAAOqB,ICrBb0R,GAAe,CACjB5E,MAAO,KACP3I,KAAM,KACN4I,mBAAejN,GAqCJmS,GAlCM,WAA8C,IAA7CjS,EAA4C,uDAApC0R,GAAoC,yCAApBxX,EAAoB,EAApBA,KAAMyE,EAAc,EAAdA,QAChD,OAAQzE,GAEJ,KAAKsE,GAED,OADApC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEI8M,MAAOnO,IAIf,KAAKH,GAED,OADApC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEImE,KAAMxF,IAGd,KAAKH,GACD,IAAMoB,EAAYjB,EAAQiT,cAC1BxV,QAAQC,IAAIuD,GACZ,IAAMiS,EAAa7R,EAAM8M,MAAMzB,QAAO,SAAA9O,GAClC,OAAOA,EAAKO,KAAK8U,cAAcE,SAASlS,MAE5C,OAAO,6BACAI,GADP,IAEI+M,cAAe8E,IAGvB,QACI,OAAO7R,ICpCb0R,GAAe,CACjBtD,OAAQ,KACR/J,MAAO,KACPiK,mBAAexO,EAEfoS,cAAe,GACfC,aAAc,MAsCHC,GAlCO,WAA8C,IAA7CpS,EAA4C,uDAApC0R,GAAoC,yCAApBxX,EAAoB,EAApBA,KAAMyE,EAAc,EAAdA,QACjD,OAAQzE,GAEJ,KAAKuE,GAED,OADArC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEIoO,OAAQzP,IAIhB,KAAKF,GAED,OADArC,QAAQC,IAAIsC,GACL,6BACAqB,GADP,IAEIqE,MAAO1F,IAGf,KAAKF,GACD,IAAMmB,EAAYjB,EAAQiT,cAC1BxV,QAAQC,IAAIuD,GACZ,IAAMiS,EAAa7R,EAAMoO,OAAO/C,QAAO,SAAA9O,GACnC,OAAOA,EAAK2D,SAAS0R,cAAcE,SAASlS,MAEhD,OAAO,6BACAI,GADP,IAEI6Q,eAAgBgB,IAGxB,QACI,OAAO7R,IC3BJqS,GARKC,aAAgB,CAChC3R,SAAUgR,GACVvP,cAAemQ,GACftS,SAAU+R,GACVnF,UAAWoF,GACX5D,WAAW+D,KCFTI,GAAQC,aAAYJ,IAE1BK,IAASC,OACP,kBAAC,KAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,OAEF5H,SAASC,eAAe,SPmHpB,kBAAmB+H,WACrBA,UAAUC,cAAcC,MACrBtT,MAAK,SAAAuT,GACJA,EAAaC,gBAEdvT,OAAM,SAAAmD,GACLxG,QAAQwG,MAAMA,EAAMqQ,c","file":"static/js/main.7304b567.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.1b3c0f53.svg\";","module.exports = __webpack_public_path__ + \"static/media/fistbump-logo-white.0296bf0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.34573990.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.a07674e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin.ae539f4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/job-dashboard.021b9f65.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.98741c4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/role.48bda764.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.d4c3b5cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.c62b1c08.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.7999010a.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.9f46df7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.393b4839.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.1ea93987.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.8501e0b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.e6a43cef.ogg\";","import styled, { css } from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const themeColor = '#2B96DC'\r\nexport const highlightColor = '#40CD8A'\r\n\r\nexport const statuscolors = {\r\n    pending: '#FFB223',\r\n    pendingBg: '#FFF5C4',\r\n\r\n    success: '#3EB93B',\r\n    successBg: '#E9FAE8',\r\n\r\n    failed: '#F1373A',\r\n    failedBg: '#FFE1DF',\r\n\r\n    review: '#0B7EE8',\r\n    reviewBg: '#E6F4FD'\r\n}\r\n\r\n\r\n// CSS ------------------------------------------------------------------------------------------\r\nexport const noSpaces = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\n\r\n\r\n// Styled components -----------------------------------------------------------------------------\r\n\r\nexport const Card = styled.div`\r\n    background-color: white;\r\n    padding: 20px;\r\n    text-align: left;\r\n    /* box-shadow: 2px 2px 8px 3px #0000001c; */\r\n    box-shadow: 2px 2px 5px 1px #0000000f;\r\n    margin: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Grid = styled.div`\r\n    background-color: #276eb012;\r\n    display: grid;\r\n\tgap: 0rem;\r\n\trow-gap: 0rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n    @media (max-width: 400px) {\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    }\r\n`\r\n\r\nexport const Title = styled.p`\r\n    margin: 0px;\r\n    margin-right: 10px;\r\n    padding: 0px;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n\r\n`\r\n\r\nexport const StyledButton = css`\r\n    background-color: ${themeColor};\r\n    border: 1px solid ${themeColor};\r\n    padding: 10px;\r\n    width: 150px;\r\n    color: white;\r\n    font-weight: bold;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor};\r\n    }\r\n`\r\n\r\nexport const CardTitle = styled.p`\r\n    font-weight: bold;\r\n    margin: 0px 0px 20px 0px;\r\n    padding: 0px;\r\n    font-size: 1.2em;\r\n    color: grey;\r\n`\r\n\r\nexport const FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px 20px 0px 20px;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    flex: 2;\r\n`\r\n\r\nexport const CustomCard = styled(Card)`\r\n    flex: 1;\r\n`\r\n\r\nexport const StyledNavlink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    text-decoration: none;\r\n\r\n    }\r\n    &:active{\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nexport const Status = styled.p`\r\n    width: fit-content;\r\n    padding: 3px 10px;\r\n    border-radius: 50px;\r\n    font-size: 0.9em;\r\n    background-color: ${props => props && props.bgColor};\r\n    margin: 0px;\r\n    color: ${props => props && props.color};\r\n`\r\n\r\n\r\n\r\nexport const Btn = styled.button`\r\n    border-style: none;\r\n    padding: 7px 10px;\r\n    width: 130px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    border: 1px solid ${props => props && props.color};\r\n    background-color: ${props => props && props.color};\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${props => props && props.color};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled{\r\n        opacity: 0.3;\r\n        cursor: not-allowed;\r\n    }\r\n`\r\n\r\n\r\nexport const EditNav = styled(NavLink)`\r\n   text-decoration: none;\r\n   color: white;\r\n\r\n`\r\n\r\nexport const EditBtn = styled.button`\r\n    ${StyledButton}\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    border-radius: 0px;\r\n`\r\n\r\nexport const DeleteBtn = styled.button`\r\n    font-weight: bold;\r\n    border-style: none;\r\n    border: 1px solid red;\r\n    color: red;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    &:hover{\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`","import React from 'react'\r\nimport { Container, Title } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\n\r\nfunction ContentContainer({ title, value2, children, justify }) {\r\n    return (\r\n        <Container>\r\n            <FlexDiv justify={justify}>\r\n                <Title>{title}</Title>\r\n                {value2}\r\n            </FlexDiv>\r\n            {children}\r\n        </Container>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ContentContainer\r\n\r\n\r\nexport const FlexDiv = styled.div`\r\n    display: flex;\r\n    justify-content: ${props => props && props.justify};\r\n    align-items: center;\r\n    padding: 20px 20px 0px 20px;\r\n`\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\n\r\nfunction SearchComponent({ setValue }) {\r\n\r\n    const [val, setVal] = useState()\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n        setValue(val)\r\n    }\r\n    return (\r\n        <SearchContainer onSubmit={searchHandler}>\r\n            <SearchInput value={val} onChange={(e) => setVal(e.target.value)} type=\"text\" placeholder=\"Search\" />\r\n            <SearchBtn>Search</SearchBtn>\r\n        </SearchContainer>\r\n    )\r\n}\r\n\r\nexport default SearchComponent\r\n\r\nconst SearchContainer = styled.form`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n`\r\nconst SearchInput = styled.input`\r\n    flex: 1;\r\n    border: 1px solid #cecece;\r\n    padding: 6px 12px;\r\n     &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\nconst SearchBtn = styled.button`\r\n    border-style: none;\r\n    padding: 5px 11px;\r\n    background-color: ${themeColor};\r\n    border: 1px solid ${themeColor};\r\n    color: white;\r\n    transition: all 0.2s;\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor};\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n`","// export const API_URI = 'https://jobs-webapi.herokuapp.com/'\r\n// export const API_URI = 'http://localhost:8080/'\r\nexport const API_URI = 'https://recruit-x.herokuapp.com/'\r\nexport const CREATE = 'create'","import { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nexport { toast }","import { statuscolors } from \"../Styles/StyledComponents\"\r\nimport axios from 'axios'\r\nimport { API_URI } from \"../../Endpoint\"\r\nimport { toast } from '../../Components/Toast'\r\n\r\nexport const statusColor = (status) => {\r\n    if (status === 'Selected') {\r\n        return { color: statuscolors.success, bgColor: statuscolors.successBg }\r\n    } else if (status === 'Called For Interview') {\r\n        return { color: statuscolors.review, bgColor: statuscolors.reviewBg }\r\n    } else if (status === 'Applied') {\r\n        return { color: statuscolors.pending, bgColor: statuscolors.pendingBg }\r\n    } else if (status === 'Rejected') {\r\n        return { color: statuscolors.failed, bgColor: statuscolors.failedBg }\r\n    }\r\n}\r\n\r\n\r\nexport const daysAgoCalculator = (date) => {\r\n    const secsInDay = 86400000\r\n    let currentDate = new Date()\r\n    const remainingSecs = currentDate - date\r\n    const days = remainingSecs / secsInDay\r\n    return Math.floor(days)\r\n}\r\n\r\n\r\nexport const getAndSaveData = async (URI, save, dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(URI)\r\n        dispatch(save(data))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nexport const deleteJobHandler = async (job, setState) => {\r\n    try {\r\n        await axios.delete(`${API_URI}${job && job._id}`)\r\n        setState(true)\r\n        toast.success('Job deleted succesfully', {\r\n            position: toast.POSITION.BOTTOM_RIGHT\r\n        })\r\n    } catch (err) {\r\n        toast.error('Error in job deletion', {\r\n            position: toast.POSITION.BOTTOM_RIGHT\r\n        })\r\n    }\r\n}\r\n\r\nexport const Capitalize = (str) => {\r\n    const arr = str.split('')\r\n    arr.shift()\r\n    const firstLetter = str[0].toUpperCase()\r\n    const remainingLetters = arr.join('')\r\n    return `${firstLetter}${remainingLetters}`\r\n}","import React from 'react'\r\nimport LoaderSVG from '../Assets/Icons/loader.svg'\r\nimport styled from 'styled-components'\r\n\r\nconst Loader = () => {\r\n    return <LoadingIcon src={LoaderSVG} />\r\n}\r\n\r\nexport default Loader\r\n\r\nconst LoadingIcon = styled.img`\r\n    width: 30px;\r\n`\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport SearchComponent from './SearchComponent'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Status, statuscolors } from '../Common/Styles/StyledComponents'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\nimport Loader from './Loader'\r\n\r\nfunction Table({ data, route, fields, titles, setSearchVal, stop, selected }) {\r\n\r\n\r\n    const [currentID, setCurrentID] = useState()\r\n    const setId = (id) => {\r\n        if(selected){\r\n        selected(id)\r\n        setCurrentID(id)\r\n\r\n        }\r\n    }\r\n    console.log(currentID)\r\n    console.log(fields)\r\n\r\n    const renderfield = (item, field) => {\r\n        if(field === 'status') {\r\n            return <Status {...statusColor(item.jobs[0].status)}>{item.jobs[0].status}</Status>\r\n        } else if (field === 'role') {\r\n            return item.role_id.name\r\n        } else {\r\n            return item[field]\r\n        }\r\n    }\r\n\r\n    const renderElement = (item) => {\r\n    return fields.map(field => <Element key={field} >{renderfield(item, field)}</Element>)\r\n    }\r\n\r\n    const renderTitle = () => {\r\n        return titles.map(item => <HeadingElement key={item}>{item}</HeadingElement>)\r\n    }\r\n\r\n    function renderLoader () {\r\n        return titles.map(el => <Element key={el}><Loader/></Element>)\r\n    }\r\n\r\n    const renderList = () => {\r\n        console.log('rendering list')\r\n        console.log(data)\r\n\r\n        if(data){\r\n            const list = data.map(item => {\r\n                const Link = !stop && `/${route}/${item._id}`\r\n                const date = new Date(item.createdAt).toDateString()\r\n                \r\n             \r\n             return <StyledNavlink onClick={()=>stop && setId(item._id)} key={item._id} to={Link}>\r\n                            <List style={currentID === item._id ? {\r\n                                backgroundColor: statuscolors.successBg,\r\n                                } : null}>\r\n    \r\n                                {renderElement(item)}\r\n                                <Element>{date}</Element>\r\n                            </List>\r\n                        </StyledNavlink>\r\n            })\r\n\r\n            if(list.length > 0) {\r\n                return list\r\n            }\r\n\r\n            return 'No Data'\r\n        } else {\r\n            \r\n            return <List>{renderLoader()}</List>\r\n\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    const renderTable = () => {\r\n\r\n        return <UnorderedList>\r\n            <List>\r\n                {renderTitle()}\r\n            </List>\r\n            {renderList()}\r\n        </UnorderedList>\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SearchComponent setValue={setSearchVal} />\r\n            {renderTable()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 10px;\r\n    border-bottom: 1px solid #0000001f;\r\n    transition: all 0.4s;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Element = styled.p`\r\n    flex: 1;\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    &:hover{\r\n        text-decoration: none;\r\n    }\r\n\r\n`\r\n\r\nconst UnorderedList = styled.ul`   \r\n    list-style: none;\r\n    margin: 0px;\r\n    margin-top: 10px;\r\n    padding: 0px;\r\n`\r\n\r\nconst HeadingElement = styled(Element)`\r\n    font-weight: bold;\r\n    opacity: 0.7;\r\n`","export const jobTypes = {\r\n    SAVE_CURRENT_JOB: 'SAVE_CURRENT_JOB',\r\n    SAVE_ALL_JOBS: 'SAVE_ALL_JOBS',\r\n    SAVE_APPLIED_JOBS: 'SAVE_APPLIED_JOBS',\r\n    DELETE_CURRENT_JOB: 'DELETE_CURRENT_JOB',\r\n    FILTER_SEARCH_JOBS: 'FILTER_SEARCH_JOBS',\r\n    FILTER_APPLIED_JOBS: 'FILTER_APPLIED_JOBS',\r\n}\r\n\r\nexport const candidateTypes = {\r\n    SAVE_CURRENT_CANDIDATE: 'SAVE_CURRENT_CANDIDATE',\r\n    SAVE_ALL_CANDIDATES: 'SAVE_ALL_CANDIDATES',\r\n    DELETE_CURRENT_CANDIDATE: 'DELETE_CURRENT_CANDIDATE',\r\n    FILTER_SEARCH_CANDITATE: 'FILTER_SEARCH_CANDITATE',\r\n    CHANGE_STATUS: 'CHANGE_STATUS'\r\n}\r\n\r\nexport const authTypes = {\r\n    AUTH: 'AUTH',\r\n    SAVE_DATA: 'SAVE_DATA'\r\n}\r\n\r\nexport const rolesTypes = {\r\n    SAVE_CURRENT_ROLE: 'SAVE_CURRENT_ROLE',\r\n    SAVE_ALL_ROLES: 'SAVE_ALL_ROLES',\r\n    DELETE_CURRENT_ROLE: 'DELETE_CURRENT_ROLE',\r\n    FILTER_SEARCH_ROLES: 'FILTER_SEARCH_ROLES',\r\n}\r\n\r\nexport const adminTypes = {\r\n    SAVE_CURRENT_ADMIN: 'SAVE_CURRENT_ADMIN',\r\n    SAVE_ALL_ADMINS : 'SAVE_ALL_ADMINS',\r\n    DELETE_CURRENT_ADMIN: 'DELETE_CURRENT_ADMIN',\r\n    FILTER_SEARCH_ADMINS: 'FILTER_SEARCH_ADMIN',\r\n}\r\n\r\nexport const currentUserTypes = {\r\n    SAVE_USER_DATA: 'SAVE_USER_DATA'\r\n}\r\n","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentJob = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_CURRENT_JOB,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const saveAllJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.SAVE_ALL_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_SEARCH_JOBS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchAppliedJobs = (payload) => {\r\n    return {\r\n        type: jobTypes.FILTER_APPLIED_JOBS,\r\n        payload\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useGetData = (endpoint, save) => {\r\n    const dispatch = useDispatch()\r\n    const headers = useHeaders() \r\n\r\n    useEffect(() => {\r\n        console.log('fetching data')\r\n        axios.get(endpoint ,{headers})\r\n            .then(({ data }) => {\r\n                console.log(data)\r\n                dispatch(save(data))\r\n            })\r\n            .catch(err => console.log('err' , err))\r\n    },[]);\r\n}\r\n\r\nexport const useSearch = (searchVal, search) => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (searchVal !== undefined) {\r\n            dispatch(search(searchVal))\r\n        }\r\n    }, [searchVal])\r\n}\r\n\r\nexport const useHeaders = () => {\r\n    const {data} = useSelector(state => state.authData)\r\n    if(data){\r\n        const headers = {\r\n            'username':data.authData.username,\r\n            'password':data.authData.password\r\n        } \r\n        return headers\r\n    }\r\n    return null\r\n}\r\n\r\n\r\nexport const useResetState = (save) => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(save(null))\r\n    }, [])\r\n}","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentCandidate = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_CURRENT_CANDIDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveAllCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.SAVE_ALL_CANDIDATES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchCandidates = (payload) => {\r\n    return {\r\n        type: candidateTypes.FILTER_SEARCH_CANDITATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeStatus = (status) => {\r\n    let payload = ''\r\n    if (status === 0) {\r\n        payload = 'Applied'\r\n    } else if (status === 1) {\r\n        payload = 'Called For Interview'\r\n    } else if (status === 2) {\r\n        payload = 'Selected'\r\n    } else if (status === 3) {\r\n        payload = 'Rejected'\r\n    }\r\n    return {\r\n        type: candidateTypes.CHANGE_STATUS,\r\n        payload\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport Table from '../Components/Table'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveAllJobs, searchJobs, saveCurrentJob } from '../Actions/JobsActions'\r\nimport axios from 'axios'\r\nimport { Card, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport { useGetData, useSearch, useResetState } from '../Hooks/getData'\r\nimport { getAndSaveData } from '../Common/Functions/helperFunctions'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { saveAllCandidates } from '../Actions/CandidateActions'\r\n\r\nfunction JobsPage() {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    useResetState(saveCurrentJob)\r\n    useResetState(saveAllCandidates)\r\n    const {data} = useSelector(state => state.authData)\r\n    const permissions = data && data.authData.role_id.permissions\r\n\r\n    const [searchVal, setSearchVal] = useState()\r\n\r\n    useGetData(API_URI, saveAllJobs)\r\n    useSearch(searchVal, searchJobs)\r\n\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n\r\n    const currentData = searchVal === undefined ? jobs : filteredJobs\r\n\r\n    const params = {\r\n        data: currentData,\r\n        route: 'job',\r\n        titles: ['Job Title', 'Company', 'Location', 'Posted on'],\r\n        fields: ['title', 'company', 'location'],\r\n        setSearchVal\r\n    }\r\n\r\n    return (\r\n        <ContentContainer\r\n            title=\"Jobs\"\r\n            value2={permissions && permissions.job.create ? <InputJob to=\"/job/post\">Post New Job</InputJob> : null}\r\n            justify=\"space-between\"\r\n        >\r\n            <Card>\r\n                <Table {...params} />\r\n            </Card>\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default JobsPage\r\n\r\nconst InputJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`","import React from 'react'\r\nimport { Card, CardTitle } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\n\r\nfunction Controls({ title, children }) {\r\n    return (\r\n        <ControlCard>\r\n            <CardTitle>{title}</CardTitle>\r\n            {children}\r\n        </ControlCard>\r\n    )\r\n}\r\n\r\nexport default Controls\r\n\r\nconst ControlCard = styled(Card)`\r\n    position: sticky;\r\n    top: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { API_URI } from '../Endpoint'\r\nimport { themeColor, StyledButton } from '../Common/Styles/StyledComponents'\r\n\r\nfunction CandidateInfo({ candidate }) {\r\n    return (\r\n        <>\r\n            <Section>\r\n                <Heading>Skills</Heading>\r\n                <Content>{candidate && candidate.skills}</Content>\r\n            </Section>\r\n\r\n            <Section>\r\n                <Heading>Education</Heading>\r\n                <Content>{candidate && candidate.education}</Content>\r\n            </Section>\r\n\r\n            <Section>\r\n                <Heading>Contact No.</Heading>\r\n                <Content>{candidate && candidate.number}</Content>\r\n            </Section>\r\n\r\n            <Section>\r\n                <Heading>Email</Heading>\r\n                <Content>{candidate && candidate.email}</Content>\r\n            </Section>\r\n\r\n            <Section>\r\n                <Heading>Resume</Heading>\r\n                <DownloadLink href={`${API_URI}download/${candidate && candidate._id}`} target=\"_blank\" color={themeColor}>Download</DownloadLink>\r\n            </Section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CandidateInfo\r\n\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n`\r\n\r\nconst DownloadLink = styled.a`\r\n    ${StyledButton}\r\n    padding: 5px 20px;\r\n    text-decoration: none;\r\n`\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Card, Btn, statuscolors, Status } from '../Common/Styles/StyledComponents'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport Controls from '../Components/Controls'\r\nimport { useGetData, useHeaders } from '../Hooks/getData'\r\nimport { API_URI } from '../Endpoint'\r\nimport { saveCurrentCandidate, changeStatus } from '../Actions/CandidateActions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport CandidateInfo from '../Components/CandidateInfo'\r\nimport { statusColor } from '../Common/Functions/helperFunctions'\r\n\r\nimport { toast } from '../Components/Toast'\r\nimport Loader from '../Components/Loader'\r\n\r\nfunction CandidatePage(props) {\r\n    const headers = useHeaders()\r\n    const {data} = useSelector(state => state.authData)\r\n    const permissions = data && data.authData.role_id.permissions\r\n    const dispatch = useDispatch()\r\n    const [isStatusChanged, setIsStatusChanged] = useState(false)\r\n    const id = props.match.params.id\r\n    const URI = `${API_URI}user/${id}`\r\n    useGetData(URI, saveCurrentCandidate)\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n    console.log(candidate)\r\n\r\n    const changeStatusHandler = async (status) => {\r\n        const URL = `${API_URI}status/${candidate && candidate._id}?status=${status}`\r\n        try {\r\n            console.log(headers)\r\n            await axios.patch(URL, {}, {headers})\r\n            setIsStatusChanged(true)\r\n            dispatch(changeStatus(status))\r\n            toast.success('Status Updated', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in status updation', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderCard = () => {\r\n        if(candidate){\r\n            return <>\r\n\r\n            {permissions && permissions.candidate.update ? <Controls title=\"Status Controls\">\r\n                <div>\r\n                    {candidate && candidate.jobs[0].status !== 'Rejected' && <Btn color={statuscolors.failed} onClick={() => changeStatusHandler(3)}>Reject</Btn>}\r\n                    {candidate && candidate.jobs[0].status !== 'Selected' && <Btn color={statuscolors.success} onClick={() => changeStatusHandler(2)}>Select</Btn>}\r\n                    {((candidate && candidate.jobs[0].status !== 'Called For Interview') && (candidate && candidate.jobs[0].status !== 'Selected')) ? <Btn color={statuscolors.review} onClick={() => changeStatusHandler(1)}>Call for interview</Btn> : null}\r\n                </div>\r\n            </Controls> : null}\r\n            <Card>\r\n                <CandidateInfo candidate={candidate} />\r\n            </Card>\r\n            </>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ContentContainer\r\n            title={candidate ? candidate.name:<Loader/>}\r\n            value2={<Status {...statusColor(candidate && candidate.jobs[0].status)}>\r\n                {candidate && candidate.jobs[0].status}\r\n            </Status>}\r\n            justify=\"flex-start\"\r\n        >\r\n\r\n            {renderCard()}            \r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default CandidatePage\r\n","// [CODE CLEANED ✔]\r\n\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo-white.svg'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <Header>\r\n            <StyledNavLink to=\"/\"><BrandLogo src={CompanyLogo} /></StyledNavLink>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 80px;\r\n`\r\nconst Header = styled.header`\r\n    position: sticky;\r\n    top: 0;\r\n    color: white;\r\n    background-color: ${themeColor};\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n    padding: 10px 20px;\r\n`","// [CODE CLEANED ✔]\r\n\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport DashboardSVG from '../Assets/Icons/dashboard.svg'\r\nimport AdminSVG from '../Assets/Icons/admin.svg'\r\nimport JobSVG from '../Assets/Icons/job-dashboard.svg'\r\nimport CandidateSVG from '../Assets/Icons/candidate.svg'\r\nimport RoleSVG from '../Assets/Icons/role.svg'\r\nimport ProfileSVG from '../Assets/Icons/profile.svg'\r\nimport { useSelector } from 'react-redux'\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\n\r\nconst activeStyles = {\r\n    backgroundColor: '#f1f1f1',\r\n    borderLeft: `5px solid ${themeColor}`,\r\n    paddingLeft: '15px'\r\n}\r\n\r\n\r\n\r\n\r\nfunction SideBar() {\r\n    const {data} = useSelector(state => state.authData)\r\n    const permissions = data && data.authData.role_id.permissions\r\n\r\n\r\n\r\n    return (\r\n        <SidebarContainer>\r\n            <Routes activeStyle={activeStyles} exact to=\"/\">\r\n                <RouteIcon src={DashboardSVG} />\r\n                <RouteText>Dashboard</RouteText>\r\n            </Routes>\r\n\r\n            {permissions && permissions.job.read ?<Routes activeStyle={activeStyles} to=\"/jobs\">\r\n                <RouteIcon src={JobSVG} />\r\n                <RouteText>Jobs</RouteText>\r\n            </Routes> : null}\r\n\r\n            {permissions && permissions.candidate.read ?<Routes activeStyle={activeStyles} exact to=\"/candidates\">\r\n                <RouteIcon src={CandidateSVG} />\r\n                <RouteText>Candidates</RouteText>\r\n            </Routes> : null}\r\n\r\n            {permissions && permissions.role.read ? <Routes activeStyle={activeStyles} exact to=\"/roles\">\r\n                <RouteIcon src={RoleSVG} />\r\n                <RouteText>Roles</RouteText>\r\n            </Routes> : null}\r\n\r\n            {permissions && permissions.admin.read ?<Routes activeStyle={activeStyles} exact to=\"/admins\">\r\n                <RouteIcon src={AdminSVG} />\r\n                <RouteText>Admins</RouteText>\r\n            </Routes> : null}\r\n\r\n            <Routes activeStyle={activeStyles} exact to=\"/profile\">\r\n                <RouteIcon src={ProfileSVG} />\r\n                <RouteText>Profile</RouteText>\r\n            </Routes>\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n\r\nconst SidebarContainer = styled.div`\r\n    background-color: white;\r\n    width: 15%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-right: 1px solid #00000017;\r\n`\r\n\r\nconst RouteIcon = styled.img`\r\n    margin-right: 10px;\r\n`\r\nconst RouteText = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    \r\n`\r\n\r\nconst Routes = styled(NavLink)`\r\n    display: flex;\r\n    text-decoration: none;\r\n    color: grey;\r\n    /* font-weight: bold; */\r\n    text-align: left;\r\n    padding: 10px 30px 10px 20px;\r\n    &:hover{\r\n        \r\n        text-decoration: none;\r\n        background-color: white;\r\n    }\r\n\r\n    &:active{\r\n        text-decoration: none;\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n`","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport styled, { css } from 'styled-components'\r\n\r\nimport { API_URI } from '../Endpoint'\r\nimport { NavLink } from 'react-router-dom'\r\nimport JobSVG from '../Assets/Icons/job.svg'\r\nimport PeopleSVG from '../Assets/Icons/people.svg'\r\nimport { Title, FlexDiv, Container, Card, statuscolors } from '../Common/Styles/StyledComponents'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHeaders } from '../Hooks/getData'\r\nimport Loader from '../Components/Loader'\r\n\r\n\r\n\r\nfunction DashboardPage() {\r\n    const headers = useHeaders() \r\n    const {data} = useSelector(state => state.authData)\r\n    useEffect(() => {\r\n        axios.get(`${API_URI}info/counts`, { headers})\r\n            .then(({ data }) => console.log(data))\r\n            .catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(data)\r\n\r\n    const renderCountData = (field) => {\r\n        if(data && data.data[field]){\r\n            return data.data[field]\r\n        } else {\r\n            return <Loader/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>Dashboard</Title>\r\n            </FlexDiv>\r\n            <CardContainer>\r\n                <StyledLink to=\"/jobs\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Jobs</InfoTitle>\r\n                            <InfoData>{renderCountData('jobsCount')}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.reviewBg} src={JobSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n                <StyledLink to=\"/candidates\">\r\n                    <InfoCard>\r\n                        <div>\r\n                            <InfoTitle>Candidates</InfoTitle>\r\n                            <InfoData>{renderCountData('usersCount')}</InfoData>\r\n                        </div>\r\n                        <Icon color={statuscolors.pendingBg} src={PeopleSVG} />\r\n                    </InfoCard>\r\n                </StyledLink>\r\n\r\n            </CardContainer>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n\r\n\r\nconst StyledLink = styled(NavLink)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: black;\r\n    }\r\n`\r\n\r\nconst NoSpacing = css`\r\n\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n`\r\nconst InfoTitle = styled.p`\r\n    ${NoSpacing}\r\n    \r\n    opacity: 0.5;\r\n    font-weight: bold;\r\n    font-size: 0.9em;\r\n`\r\n\r\nconst InfoData = styled.p`\r\n    ${NoSpacing}\r\n    font-weight: bold;\r\n    font-size: 3em;\r\n`\r\n\r\nconst InfoCard = styled(Card)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 250px;\r\n    height: 100px;\r\n    padding: 20px 30px;\r\n    transition: all 0.3s;\r\n    &:hover{\r\n        transform:scale(1.05)\r\n    }\r\n`\r\n\r\nconst Icon = styled.img`\r\nwidth: 50px;\r\n    background-color: ${props => props && props.color};\r\n    border-radius: 50px;\r\n    padding: 6px;\r\n\r\n`\r\n\r\nconst CardContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst LoadingIcon = styled.img`\r\n    width: 30px;\r\n`","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '../Common/Styles/StyledComponents'\r\n\r\nfunction Tabs({ data }) {\r\n\r\n    const [activeTab, setActiveTab] = useState(0)\r\n\r\n    const renderTabTitle = data.map(({ title }, index) => {\r\n        return <Tab color={activeTab === index ? 'white' : '#ffffff66'} onClick={() => setActiveTab(index)}>{title}</Tab>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ButtonContainer>\r\n                {renderTabTitle}\r\n            </ButtonContainer>\r\n            <CustomCard>\r\n                {data[activeTab].component}\r\n            </CustomCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs\r\n\r\nconst Tab = styled.button`\r\n    font-weight: bold;\r\n    width: 150px;\r\n    padding: 10px 10px;\r\n    border-style: none;\r\n    background-color: ${props => props && props.color};\r\n    box-shadow: -1px -1px 6px 0px #0000001f;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n    text-align: left;\r\n    padding: 0px 0px 0px 20px;\r\n    margin: 20px 0px 0px 0px;\r\n`\r\n\r\nconst CustomCard = styled(Card)`\r\n    margin: 0px 20px 20px 20px;\r\n    flex: 1;   \r\n`","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { Card } from '../Common/Styles/StyledComponents'\r\nimport LocationSVG from '../Assets/Icons/location.svg'\r\n\r\nfunction JobInfo({ job }) {\r\n\r\n    const renderList = (data) => {\r\n        if (data) {\r\n            if (data.length > 0) {\r\n                return data.map(item => <li key={item}>{item}</li>)\r\n            }\r\n            return 'No data'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FlexHeader>\r\n                <div>\r\n                    <Heading>Company</Heading>\r\n                    <Company>{job && job.company}</Company>\r\n                </div>\r\n                <Location><img src={LocationSVG} /> {job && job.location}</Location>\r\n            </FlexHeader>\r\n\r\n            <Section>\r\n                <Heading>Description</Heading>\r\n                <p>{job && job.description}</p>\r\n            </Section>\r\n            <Section>\r\n                <p><Heading>Salary:</Heading> {job && job.salary}</p>\r\n                <p><Heading>Experience:</Heading> {job && job.experience}</p>\r\n\r\n            </Section>\r\n            <Section>\r\n                <Heading>Eligibilities</Heading>\r\n                <Ul>\r\n                    {renderList(job && job.eligibility)}\r\n                </Ul>\r\n            </Section>\r\n\r\n            <Section>\r\n                <Heading>Responsiblities</Heading>\r\n                <Ul>\r\n                    {renderList(job && job.responsibilities)}\r\n                </Ul>\r\n            </Section>\r\n\r\n            <Section>\r\n                <Heading>About</Heading>\r\n                <p>{job && job.aboutCompany}</p>\r\n            </Section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JobInfo\r\n\r\n\r\nconst FlexHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst RemoveSpacing = css`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Section = styled.div`\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid #0000001a;\r\n`\r\n\r\nconst Heading = styled.p`\r\n    ${RemoveSpacing}\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: #00000063;\r\n\r\n`\r\n\r\nconst Company = styled.p`\r\n    ${RemoveSpacing}\r\n        font-weight: bold;\r\n    font-size: 1.5em;\r\n\r\n`\r\n\r\nconst Location = styled.p`\r\n    ${RemoveSpacing}\r\n    opacity: 0.5;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    padding: 0px;\r\n    margin: 10px 0px 0px 15px;\r\n\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport Table from '../Components/Table'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveAllJobs, searchJobs, saveCurrentJob } from '../Actions/JobsActions'\r\nimport { Card, EditBtn, EditNav, DeleteBtn } from '../Common/Styles/StyledComponents'\r\nimport { useGetData, useSearch } from '../Hooks/getData'\r\nimport { getAndSaveData, deleteJobHandler } from '../Common/Functions/helperFunctions'\r\nimport { saveAllCandidates, searchCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport Tabs from '../Components/Tabs'\r\nimport JobInfo from '../Components/JobInfo'\r\nimport axios from 'axios'\r\nimport { toast } from '../Components/Toast'\r\nimport { Redirect } from 'react-router-dom'\r\nimport CandidateInfo from '../Components/CandidateInfo'\r\nimport Loader from '../Components/Loader'\r\n\r\nfunction AppliedJobList(props) {\r\n    const [searchVal, setSearchVal] = useState()\r\n    const dispatch = useDispatch()\r\n    const id = props.match.params.id\r\n    const URI = `${API_URI}user/${id}`\r\n\r\n    // Saving job by id in Redux\r\n    useGetData(URI, saveCurrentCandidate)\r\n    useSearch(searchVal, searchCandidates)\r\n\r\n    // Getting single job\r\n    const { candidate } = useSelector(state => state.candidateData)\r\n\r\n    useEffect(() => {\r\n        if (candidate) {\r\n            const jobs = candidate.jobs.map(item => item.id)\r\n            console.log(jobs)\r\n            dispatch(saveAllJobs(jobs))\r\n        }\r\n    }, [candidate]);\r\n\r\n    const { jobs, filteredJobs } = useSelector(state => state.jobsData)\r\n    const currentData = searchVal === undefined ? jobs : filteredJobs\r\n    console.log(jobs)\r\n    const params = {\r\n        data: currentData,\r\n        route: 'candidate',\r\n        titles: ['Job Title', 'Company', 'Location', 'Posted on'],\r\n        fields: ['title', 'company', 'location'],\r\n        setSearchVal,\r\n        stop: true\r\n    }\r\n\r\n    const tabData = [\r\n        {\r\n            title: 'Applied Jobs',\r\n            component: <Table {...params} />\r\n        },\r\n        {\r\n            title: 'Candidate Details',\r\n            component: <CandidateInfo candidate={candidate}/>\r\n        }\r\n    ]\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <ContentContainer\r\n            title={candidate ? candidate.name : <Loader/>}\r\n        >\r\n            <Tabs data={tabData} />\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default AppliedJobList\r\n\r\n","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const auth = (payload) => {\r\n    return {\r\n        type: authTypes.AUTH,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const saveData = (payload) => {\r\n    return {\r\n        type: authTypes.SAVE_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n","// [CODE CLEANED ✔]\r\n\r\n// React Imports\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// User Imports\r\nimport { Card, themeColor, StyledButton, statuscolors, LoadingIcon, noSpaces } from '../Common/Styles/StyledComponents'\r\nimport { API_URI } from '../Endpoint'\r\nimport { auth, saveData } from '../Actions/AuthActions'\r\n\r\n// Assets\r\nimport CompanyLogo from '../Assets/Icons/fistbump-logo-white.svg'\r\nimport User from '../Assets/Icons/user.svg'\r\nimport Password from '../Assets/Icons/password.svg'\r\n\r\nfunction SignInPage() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [LoginText, setLoginText] = useState('Login')\r\n\r\n    const isInputValid = username && password\r\n\r\n    const reset = () => {\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n\r\n    const changeHandler = (e, setData) => {\r\n        setData(e.target.value)\r\n        setErrorMessage(null)\r\n    }\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault()\r\n        const URL = `${API_URI}info/counts`\r\n        setLoginText('Verifying...')\r\n        reset()\r\n\r\n        try {\r\n           \r\n            const {data} = await axios.get(URL, {\r\n                headers:{\r\n                    'username': username,\r\n                    'password': password\r\n                }\r\n            })\r\n\r\n            console.log(data)\r\n            dispatch(auth(true))\r\n            dispatch(saveData(data))\r\n            setLoginText('Login')\r\n        } catch (err) {\r\n            dispatch(auth(false))\r\n            reset()\r\n            setLoginText('Login')\r\n            setErrorMessage('Invalid Credentials')\r\n        }\r\n    }\r\n    return (\r\n        <SiginContainer>\r\n\r\n            <SigninSubContainer>\r\n                <BrandLogo src={CompanyLogo} />\r\n                <SigninCard>\r\n                    <SiginTitle>Admin</SiginTitle>\r\n                    <SigninForm onSubmit={loginHandler}>\r\n                        <InputContainer>\r\n                            <Icon src={User} />\r\n                            <Input value={username} onChange={(e) => changeHandler(e, setUsername)} type=\"text\" placeholder=\"Username\" />\r\n                        </InputContainer>\r\n\r\n                        <InputContainer>\r\n                            <Icon src={Password} />\r\n                            <Input value={password} onChange={(e) => changeHandler(e, setPassword)} type=\"password\" placeholder=\"Password\" />\r\n                        </InputContainer>\r\n\r\n                        <Login disabled={!isInputValid}>{LoginText}</Login>\r\n                    </SigninForm>\r\n                    <Message>{errorMessage}</Message>\r\n                </SigninCard>\r\n\r\n            </SigninSubContainer>\r\n        </SiginContainer>\r\n    )\r\n}\r\n\r\nexport default SignInPage\r\n\r\n\r\n\r\nconst SiginTitle = styled.h2`\r\n    ${noSpaces}\r\n    color: ${themeColor};\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n    `\r\n\r\nconst SiginContainer = styled.div`\r\n    background-color: ${themeColor};\r\n    height: 100vh;\r\n`\r\n\r\nconst BrandLogo = styled.img`\r\n    width: 250px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst SigninSubContainer = styled.div`\r\n    padding-top: 70px;\r\n`\r\n\r\nconst SigninCard = styled(Card)`\r\n    margin: auto;\r\n    width: 300px;\r\n`\r\n\r\nconst SigninForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Login = styled.button`\r\n    border-style: none;\r\n    width: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    background-color: ${themeColor};\r\n    color: white;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    &:disabled{\r\n        opacity: 0.3\r\n    }\r\n`\r\nconst Icon = styled.img`\r\n    margin-right: 10px;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    margin: 10px 0px;\r\n    padding: 6px 12px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #0000001f;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 1px solid ${themeColor};\r\n    }\r\n`\r\nconst Message = styled.p`\r\n    ${noSpaces}\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed}\r\n`","import React from 'react'\r\nimport { Container, FlexDiv, Title, Card, statuscolors, CardTitle } from '../Common/Styles/StyledComponents'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { auth } from '../Actions/AuthActions'\r\n\r\nfunction ProfilePage() {\r\n    const dispatch = useDispatch()\r\n    const {data} = useSelector(state => state.authData)\r\n    const username = data && data.authData.username\r\n    const name = data && data.authData.role_id.name\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(auth(false))\r\n    }\r\n    return (\r\n        <Container>\r\n            <FlexDiv>\r\n                <Title>Profile</Title>\r\n                <LogoutBtn onClick={logoutHandler}>Logout</LogoutBtn>\r\n            </FlexDiv>\r\n\r\n            <Card>\r\n                <CardTitle style={{ margin: '0px' }}>Username</CardTitle>\r\n    <Content style={{ marginBottom: '20px' }}>{username}</Content>\r\n    <CardTitle style={{ margin: '0px' }}>Role</CardTitle>\r\n                <Content>{name}</Content>\r\n\r\n            </Card>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n\r\n\r\nconst LogoutBtn = styled.button`\r\n    border-style: none;\r\n    text-decoration: underline;\r\n    color: ${statuscolors.review};\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    &:hover{\r\n    color: ${statuscolors.failed};\r\n\r\n    }\r\n\r\n\r\n`\r\n\r\nconst Content = styled.p`\r\n    font-weight: bold;\r\n    font-size: 2.5em;\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n`","import React, { useState, useEffect } from 'react'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport Table from '../Components/Table'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveAllJobs, searchJobs, saveCurrentJob } from '../Actions/JobsActions'\r\nimport { Card, EditBtn, EditNav, DeleteBtn } from '../Common/Styles/StyledComponents'\r\nimport { useGetData, useSearch, useHeaders, useResetState } from '../Hooks/getData'\r\nimport { saveAllCandidates, searchCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport Tabs from '../Components/Tabs'\r\nimport JobInfo from '../Components/JobInfo'\r\nimport axios from 'axios'\r\nimport { toast } from '../Components/Toast'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Loader from '../Components/Loader'\r\n\r\nfunction JobPage(props) {\r\n    \r\n    useResetState(saveCurrentCandidate)\r\n    const {data} = useSelector(state => state.authData)\r\n    const permissions = data && data.authData.role_id.permissions\r\n\r\n    const [searchVal, setSearchVal] = useState()\r\n    const headers = useHeaders()\r\n    const [isJobDeleted, setIsJobDeleted] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const id = props.match.params.id\r\n    const URI = `${API_URI}job/${id}`\r\n    const editURL = `edit/${id}`\r\n\r\n    // Saving job by id in Redux\r\n    useGetData(URI, saveCurrentJob)\r\n    useSearch(searchVal, searchCandidates)\r\n\r\n    // Getting single job\r\n    const { job } = useSelector(state => state.jobsData)\r\n\r\n    useEffect(() => {\r\n        if (job) {\r\n            console.log(job.user)\r\n            dispatch(saveAllCandidates(job.user))\r\n        }\r\n    }, [job]);\r\n\r\n\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    const params = {\r\n        data: currentData,\r\n        route: 'candidate',\r\n        titles: ['Name', 'Contact No.', 'Status', 'Applied on'],\r\n        fields: ['name', 'number', 'status'],\r\n        setSearchVal,\r\n    }\r\n\r\n    const tabData = [\r\n        {\r\n            title: 'Candidate List',\r\n            component: <Table {...params} />\r\n        },\r\n        {\r\n            title: 'Job Details',\r\n            component: <JobInfo job={job} />\r\n        }\r\n    ]\r\n    \r\n    const deleteJobHandler = async (job, setState) => {\r\n        try {\r\n            await axios.delete(`${API_URI}${job && job._id}`, {headers})\r\n            setState(true)\r\n            toast.success('Job deleted succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        } catch (err) {\r\n            toast.error('Error in job deletion', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    const Buttons = (\r\n        <div>\r\n            {permissions && permissions.job.update ? <EditNav to={editURL}><EditBtn>Edit</EditBtn></EditNav> : null}\r\n            {permissions && permissions.job.delete ?  <DeleteBtn onClick={() => deleteJobHandler(job, setIsJobDeleted)} >Delete</DeleteBtn> : null}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <ContentContainer\r\n            title={job ? job.title : <Loader/>}\r\n            value2={Buttons}\r\n            justify=\"space-between\"\r\n        >\r\n            <Tabs data={tabData} />\r\n            {isJobDeleted && <Redirect to=\"/jobs\" />}\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default JobPage\r\n\r\n","import React, { useState } from 'react'\r\nimport ContentContainer from './ContentContainer'\r\nimport Controls from './Controls'\r\nimport { Btn, statuscolors, themeColor, Card, CardTitle, Title } from '../Common/Styles/StyledComponents'\r\nimport { toast } from '../Components/Toast'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport styled, { css } from 'styled-components'\r\nimport { Capitalize } from '../Common/Functions/helperFunctions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHeaders } from '../Hooks/getData'\r\n\r\n\r\nfunction InputJobDetails({ match }) {\r\n    const headers = useHeaders()\r\n    const path = match.path\r\n    const { job } = useSelector(state => state.jobsData)\r\n    console.log(job)\r\n    \r\n    const type = path.split('/')[2]\r\n    const id = type === 'edit' ? match.params.id : ''\r\n\r\n    const text = Capitalize(type)\r\n\r\n    const setValue = (field, defaultVal) => {\r\n        if(job && type === 'edit'){\r\n            return job[field]\r\n        }\r\n\r\n        return defaultVal\r\n    }\r\n\r\n    const [isDataChanged, setIsDataChanged] = useState(false)\r\n\r\n    const [title, setTitle] = useState(setValue('title', ''))\r\n    const [salary, setSalary] = useState(setValue('salary', ''))\r\n    const [description, setDescription] = useState(setValue('description', ''))\r\n\r\n    const [company, setCompany] = useState(setValue('company', ''))\r\n    const [aboutCompany, setAboutCompany] = useState(setValue('aboutCompany', ''))\r\n    const [location, setLocation] = useState(setValue('location', ''))\r\n\r\n    const [experience, setExperience] = useState(setValue('experience', ''))\r\n\r\n    const [eligibilitiesVal, setEligibilitiesVal] = useState()\r\n    const [eligibilities, setEligibilities] = useState(setValue('eligibility', []))\r\n\r\n    const [responsibilitiesVal, setResponsibilitiesVal] = useState()\r\n    const [responsibilities, setResponsibilities] = useState(setValue('responsibilities', []))\r\n    const [btnText, setBtnText] = useState(text)\r\n\r\n    const isInputValid = title && description && company && aboutCompany && location && experience && eligibilities.length > 0 && responsibilities.length > 0\r\n\r\n\r\n    const resetHandler = () => {\r\n        setTitle(setValue('title', ''))\r\n        setSalary(setValue('salary', ''))\r\n        setDescription(setValue('description', ''))\r\n        setCompany(setValue('company', ''))\r\n        setLocation(setValue('location', ''))\r\n        setAboutCompany(setValue('aboutCompany', ''))\r\n        setExperience(setValue('experience', ''))\r\n        setEligibilities(setValue('eligibility', []))\r\n        setEligibilitiesVal('')\r\n        setResponsibilities(setValue('responsibilities', []))\r\n        setEligibilitiesVal('')\r\n        document.getElementById('title').focus()\r\n    }\r\n\r\n\r\n    const sendDataHandler = async () => {\r\n        setBtnText(`${text}ing...`)\r\n        resetHandler()\r\n        const data = {\r\n            title,\r\n            salary: salary ? salary : 'Not disclosed',\r\n            description,\r\n            company,\r\n            aboutCompany,\r\n            location,\r\n            experience,\r\n            eligibility: eligibilities,\r\n            responsibilities\r\n        }\r\n        console.log(data)\r\n        const request = type === 'edit' ? axios.put(`${API_URI}${id}`, data, {headers}) : axios.post(`${API_URI}create`, data ,{headers})\r\n        try {\r\n            const response = await request\r\n            setIsDataChanged(true)\r\n            toast.success('Job Posted succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setBtnText('Post')\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error('Error in posting job', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setBtnText('Post')\r\n        }\r\n\r\n    }\r\n\r\n    const deleteItemHandler = (data, item, setCurrState) => {\r\n        const FilteredData = data.filter(el => el !== item)\r\n        setCurrState(FilteredData)\r\n    }\r\n\r\n\r\n    const renderList = (data, setCurrState) => {\r\n        const list = data.map(item => {\r\n            return <Element key={item}>\r\n                <ElementP>{item}</ElementP>\r\n                <Icon onClick={() => deleteItemHandler(data, item, setCurrState)} src={CloseSVG} />\r\n            </Element>\r\n        })\r\n\r\n        return list.length > 0 ? list : <EmptyMessage>Empty</EmptyMessage>\r\n    }\r\n\r\n    const addHandler = (currState, setCurrState, item) => {\r\n        const TEMP = [...currState]\r\n        TEMP.push(item)\r\n        setCurrState(TEMP)\r\n        setEligibilitiesVal('')\r\n        setResponsibilitiesVal('')\r\n    }\r\n\r\n    const Buttons = (\r\n        <div>\r\n            <Btn color={statuscolors.failed} onClick={resetHandler}>Reset</Btn>\r\n            <Btn color={statuscolors.success} disabled={!isInputValid} onClick={sendDataHandler}>{btnText}</Btn>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <ContentContainer title={`${text} Job`}>\r\n\r\n            <Controls title={`${text} Controls`}>\r\n                {Buttons}\r\n            </Controls>\r\n\r\n            <Card>\r\n                <Section>\r\n                    <CardTitle>Job Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Job Title</Label>\r\n                        <Input id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Salary</Label>\r\n                        <Input value={salary} onChange={(e) => setSalary(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Description</Label>\r\n                        <Textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <CardTitle>Company Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Name</Label>\r\n                        <Input value={company} onChange={(e) => setCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Location</Label>\r\n                        <Input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>About</Label>\r\n                        <Textarea value={aboutCompany} onChange={(e) => setAboutCompany(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                </Section>\r\n\r\n                <Section>\r\n                    <CardTitle>Requirements</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Experience</Label>\r\n                        <Input value={experience} onChange={(e) => setExperience(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Minimum qualifications</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(eligibilities, setEligibilities, eligibilitiesVal)\r\n                        }}\r\n                        >\r\n                            <CustomInput value={eligibilitiesVal} onChange={(e) => setEligibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton >Add</AddButton>\r\n                        </InputWithButton>\r\n                        <Ul>\r\n                            {renderList(eligibilities, setEligibilities)}\r\n                        </Ul>\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <Label>Responsibilities</Label>\r\n                        <InputWithButton onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            addHandler(responsibilities, setResponsibilities, responsibilitiesVal)\r\n                        }}>\r\n                            <CustomInput value={responsibilitiesVal} onChange={(e) => setResponsibilitiesVal(e.target.value)} type=\"text\" />\r\n                            <AddButton>Add</AddButton>\r\n                        </InputWithButton>\r\n                        <Ul>\r\n\r\n                            {renderList(responsibilities, setResponsibilities)}\r\n\r\n                        </Ul>\r\n\r\n                    </InputContainer>\r\n                </Section>\r\n            </Card>\r\n\r\n            {isDataChanged && <Redirect to=\"/jobs\" />}\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default InputJobDetails\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n\r\n        font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: stretch;\r\n    align-items: center;\r\n    \r\n`\r\n\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    border: 1px solid ${themeColor};\r\n    background-color: ${themeColor};\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor}\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n    flex: 1;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    border:1px dashed ${statuscolors.reviewBg};   \r\n    padding: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${themeColor};\r\n    color: ${themeColor};\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n//Changes\r\n// const Btn = styled.button`\r\n//     border-style: none;\r\n//     padding: 7px 10px;\r\n//     width: 130px;\r\n//     margin-right: 10px;\r\n//     color: white;\r\n//     border: 1px solid ${props => props && props.color};\r\n//     background-color: ${props => props && props.color};\r\n//     &:hover{\r\n//         background-color: transparent;\r\n//         color: ${props => props && props.color};\r\n//     }\r\n//     &:focus{\r\n//         outline: none;\r\n//     }\r\n\r\n//     &:disabled{\r\n//         opacity: 0.3;\r\n//         cursor: not-allowed;\r\n//     }\r\n// `\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`\r\n\r\n\r\n\r\n//added\r\nconst Section = styled.div`\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst EmptyMessage = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed}\r\n`","import React, { useState, useEffect } from 'react'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport Table from '../Components/Table'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Card, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport { useGetData, useSearch, useResetState } from '../Hooks/getData'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { saveAllCandidates, searchCandidates, saveCurrentCandidate } from '../Actions/CandidateActions'\r\nimport { saveAllJobs } from '../Actions/JobsActions'\r\n\r\nfunction CandidatesPage() {\r\n    useResetState(saveCurrentCandidate)\r\n    useResetState(saveAllJobs)\r\n    const [searchVal, setSearchVal] = useState()\r\n\r\n    useGetData(`${API_URI}all/candidate`, saveAllCandidates)\r\n    useSearch(searchVal, searchCandidates)\r\n\r\n    const { candidates, filteredcandidates } = useSelector(state => state.candidateData)\r\n    console.log(candidates)\r\n    \r\n    const currentData = searchVal === undefined ? candidates : filteredcandidates\r\n\r\n    const params = {\r\n        data: currentData,\r\n        route: 'applied-jobs',\r\n        titles: ['Name', 'Contact No.', 'Status', 'Applied on'],\r\n        fields: ['name', 'number', 'status'],\r\n        setSearchVal\r\n    }\r\n\r\n    return (\r\n        <ContentContainer\r\n            title=\"Candidates\"\r\n        >\r\n            <Card>\r\n                <Table {...params} />\r\n            </Card>\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default CandidatesPage\r\n\r\nconst InputJob = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`","import { rolesTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentRole = (payload) => {\r\n    return {\r\n        type: rolesTypes.SAVE_CURRENT_ROLE,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const saveAllRoles = (payload) => {\r\n    return {\r\n        type: rolesTypes.SAVE_ALL_ROLES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchRoles = (payload) => {\r\n    return {\r\n        type: rolesTypes.FILTER_SEARCH_ROLES,\r\n        payload\r\n    }\r\n}\r\n\r\n","import { adminTypes } from '../ActionTypes/ActionTypes'\r\n\r\nexport const saveCurrentAdmin = (payload) => {\r\n    return {\r\n        type: adminTypes.SAVE_CURRENT_ADMIN,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const saveAllAdmins = (payload) => {\r\n    return {\r\n        type: adminTypes.SAVE_ALL_ADMINS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const searchAdmins = (payload) => {\r\n    return {\r\n        type: adminTypes.FILTER_SEARCH_ADMINS,\r\n        payload\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport Table from '../Components/Table'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveAllRoles, searchRoles, saveCurrentRole } from '../Actions/RoleActions'\r\nimport { Card, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport { useGetData, useSearch, useResetState } from '../Hooks/getData'\r\nimport { getAndSaveData } from '../Common/Functions/helperFunctions'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { saveAllAdmins } from '../Actions/AdminActions'\r\n\r\nfunction RolesPage() {\r\n    useResetState(saveCurrentRole)\r\n    useResetState(saveAllAdmins)\r\n    const [searchVal, setSearchVal] = useState()\r\n    useGetData(`${API_URI}roles`, saveAllRoles)\r\n    useSearch(searchVal, searchRoles)\r\n    const {data} = useSelector(state => state.authData)\r\n    const permissions = data && data.authData.role_id.permissions\r\n    const { roles, filteredRoles } = useSelector(state => state.rolesData)\r\n\r\n    const currentData = searchVal === undefined ? roles : filteredRoles\r\n\r\n    const params = {\r\n        data: currentData,\r\n        route: 'role',\r\n        titles: ['Role Name', 'Posted on'],\r\n        fields: ['name'],\r\n        setSearchVal\r\n    }\r\n\r\n    return (\r\n        <ContentContainer\r\n            title=\"Roles\"\r\n            value2={permissions && permissions.role.create ? <Link to=\"/role/add\">Add Role</Link> : null}\r\n            justify=\"space-between\"\r\n        >\r\n            <Card>\r\n                <Table {...params} />\r\n            </Card>\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default RolesPage\r\n\r\nconst Link = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`","import React, { useState } from 'react'\r\nimport CheckSVG from '../Assets/Icons/tick.svg'\r\nimport styled from 'styled-components'\r\nimport { themeColor } from '../Common/Styles/StyledComponents'\r\nimport TickMP3 from '../Assets/Sounds/tick.ogg'\r\n\r\nfunction CheckBox({val, setVal, disabled}) {\r\n\r\n    const toggle = () => {\r\n        if(!disabled){\r\n            setVal(!val)\r\n        }\r\n        return <audio src={TickMP3} autoPlay/>\r\n        \r\n    }\r\n    \r\n    return (\r\n        <CheckContainer disabled={disabled} isChecked={val} onClick={toggle}>\r\n            {/* {val && <audio src={TickMP3} autoPlay/>}            */}\r\n            {val && <Icon src={CheckSVG}/>}\r\n        </CheckContainer>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n\r\nconst CheckContainer = styled.div`\r\n    transition: all 0.3s;\r\n    background-color: ${props => props.isChecked ? themeColor : 'white'};\r\n    display: flex;\r\n    opacity: ${props => props && props.disabled ? 0.5 : 1};\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 2px solid ${themeColor};\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 5px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n\r\n`","import React from 'react'\r\nimport CheckBox from './CheckBox'\r\nimport styled from 'styled-components'\r\nimport { noSpaces } from '../Common/Styles/StyledComponents'\r\nimport {v4} from 'uuid'\r\nfunction RoleInfo(props) {\r\n    const {job, candidate, role , admin} = props.role && props.role.permissions\r\n\r\n\r\n\r\n    const jobsInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:job.create,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:job.update,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:job.read,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:job.delete,\r\n            setVal:null,\r\n            disabled: true\r\n        }\r\n    ]\r\n\r\n    const candidatesInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:candidate.create,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:candidate.update,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:candidate.read,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:candidate.delete,\r\n            setVal:null,\r\n            disabled: true\r\n        }\r\n    ]\r\n\r\n    const adminsInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:admin.create,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:admin.update,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:admin.read,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:admin.delete,\r\n            setVal:null,\r\n            disabled: true\r\n        }\r\n    ]\r\n\r\n    const rolesInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:role.create,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:role.update,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:role.read,\r\n            setVal:null,\r\n            disabled: true\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:role.delete,\r\n            setVal:null,\r\n            disabled: true\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const renderTicks = (data) => {\r\n        return data.map(item => {\r\n            return <CheckBoxContainer key={v4()}>\r\n                <CheckBox {...item}/>\r\n                <CheckBoxText>{item.control}</CheckBoxText>\r\n            </CheckBoxContainer>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PermissionContainer>\r\n\r\n                <InputContainer>\r\n                    <Label>Job Permissions</Label>\r\n                    {renderTicks(jobsInputData)}\r\n                </InputContainer>\r\n\r\n                <InputContainer>\r\n                    <Label>Candidate Permissions</Label>\r\n                    {renderTicks(candidatesInputData)}\r\n                </InputContainer>\r\n\r\n                <InputContainer>\r\n                    <Label>Admin Permissions</Label>\r\n                    {renderTicks(adminsInputData)}\r\n                </InputContainer>\r\n\r\n                <InputContainer>\r\n                    <Label>Role Permissions</Label>\r\n                    {renderTicks(rolesInputData)}\r\n                </InputContainer>\r\n\r\n            </PermissionContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoleInfo\r\n\r\nconst PermissionContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst CheckBoxText = styled.p`\r\n    ${noSpaces}\r\n    font-weight: bold;\r\n    margin-left: 10px;\r\n\r\n`\r\n\r\nconst CheckBoxContainer = styled.div`\r\n    padding: 3px 0px;\r\n    width: fit-content;\r\n    display: flex;\r\n    align-items: center;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport CheckBox from '../Components/CheckBox'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport { Card, EditNav, EditBtn, DeleteBtn } from '../Common/Styles/StyledComponents'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useGetData, useHeaders, useSearch } from '../Hooks/getData'\r\nimport { saveCurrentRole } from '../Actions/RoleActions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Tabs from '../Components/Tabs'\r\nimport RoleInfo from '../Components/RoleInfo'\r\nimport Table from '../Components/Table'\r\nimport { searchAdmins, saveAllAdmins } from '../Actions/AdminActions'\r\nimport {toast} from '../Components/Toast'\r\nimport Loader from '../Components/Loader'\r\n\r\n\r\nfunction RolePage({match}) {\r\n    const dispatch = useDispatch()\r\n    const headers = useHeaders()\r\n    const [addJob, setAddJob] = useState(false)\r\n    const [isDeleted, setIsDeleted] = useState(false)\r\n    const id = match.params.id\r\n    const {data} = useSelector(state => state.authData)\r\n    const permissions = data && data.authData.role_id.permissions\r\n\r\n    const [searchVal, setSearchVal] = useState()\r\n\r\n\r\n    useGetData(`${API_URI}role/${id}`, saveCurrentRole)\r\n    useSearch(searchVal,searchAdmins)\r\n\r\n\r\n    const {role} = useSelector(state => state.rolesData)\r\n\r\n\r\n    useEffect(() => {\r\n        if (role) {\r\n            \r\n            dispatch(saveAllAdmins(role.admins))\r\n        }\r\n    }, [role]);\r\n    \r\n    const { admins, filteredAdmin } = useSelector(state => state.adminsData)\r\n    const currentData = searchVal === undefined ?admins : filteredAdmin\r\n\r\n    console.log(role)\r\n    const deleteHandler = async () => {\r\n        if(role && role.admins.length === 0){\r\n            try {\r\n                await axios.delete(`${API_URI}role/${id}`, {headers})\r\n                setIsDeleted(true)\r\n            } catch (err) {\r\n                console.log(err)\r\n                setIsDeleted(false)\r\n            }\r\n        } else {\r\n        toast.error(<p style={{margin: '0px', padding:'0px'}}>Cannot Delete Role<br/>as it is assigned to admin(s)<br/>Please unassign and try again</p>)\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const Buttons = (\r\n        <div>\r\n            {permissions && permissions.role.update ? <EditNav to={`/role/edit/${id}`}><EditBtn>Edit</EditBtn></EditNav> : null}\r\n            {permissions && permissions.role.delete ? <DeleteBtn onClick={deleteHandler} >Delete</DeleteBtn> : null}\r\n        </div>\r\n    )\r\n\r\n    const params = {\r\n        data: currentData,\r\n        route: 'candidate',\r\n        titles: ['Username', 'Created on'],\r\n        fields: ['username'],\r\n        setSearchVal,\r\n        stop: true\r\n    }\r\n\r\n    const tabData = [\r\n        {\r\n            title: 'Admin Assigned',\r\n            component:<Table {...params} />\r\n        },\r\n        {\r\n            title: 'Role Info',\r\n            component: <RoleInfo role={role}/>\r\n        }\r\n    ]\r\n\r\n    \r\n    return (\r\n        <ContentContainer\r\n            title={role ? role.name : <Loader/>}\r\n            value2={Buttons}\r\n            justify=\"space-between\"\r\n        >\r\n            \r\n            <Tabs data={tabData} /> \r\n            \r\n            \r\n            {isDeleted && <Redirect to=\"/roles\" />}\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default RolePage\r\n","import React, { useState } from 'react'\r\nimport ContentContainer from './ContentContainer'\r\nimport Controls from './Controls'\r\nimport { Btn, statuscolors, themeColor, Card, CardTitle, Title, noSpaces } from '../Common/Styles/StyledComponents'\r\nimport { toast } from '../Components/Toast'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport styled, { css } from 'styled-components'\r\nimport { Capitalize } from '../Common/Functions/helperFunctions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport CheckBox from './CheckBox'\r\nimport { useGetData, useHeaders } from '../Hooks/getData'\r\nimport {v4} from 'uuid'\r\n\r\nfunction InputRolesDetails({ match }) {\r\n\r\n    const path = match.path\r\n    const headers = useHeaders()\r\n    const type = path.split('/')[2]\r\n    const id = type === 'edit' ? match.params.id : ''\r\n    useGetData(`${API_URI}role/${id}`)\r\n    const { role } = useSelector(state => state.rolesData)\r\n\r\n    const text = Capitalize(type)\r\n\r\n    const setValue = (field, defaultVal, field2) => {\r\n        if(role && type === 'edit'){\r\n            return role.permissions[field][field2]\r\n        }\r\n\r\n        return defaultVal\r\n    }\r\n\r\n    const [isDataChanged, setIsDataChanged] = useState(false)\r\n\r\n    const [name, setName] = useState(role && role.name)\r\n    const [jobCreate, setJobCreate] = useState(setValue('job', false, 'create'))\r\n    const [jobUpdate, setJobUpdate] = useState(setValue('job', false, 'update'))\r\n    const [jobRead, setJobRead] = useState(setValue('job', false, 'read'))\r\n    const [jobDelete, setJobDelete] = useState(setValue('job', false, 'delete'))\r\n\r\n    const [candidateCreate, setCandidateCreate] = useState(setValue('candidate', false, 'create'))\r\n    const [candidateUpdate, setCandidateUpdate] = useState(setValue('candidate', false, 'update'))\r\n    const [candidateRead, setCandidateRead] = useState(setValue('candidate', false, 'read'))\r\n    const [candidateDelete, setCandidateDelete] = useState(setValue('candidate', false, 'delete'))\r\n\r\n    const [adminCreate, setAdminCreate] = useState(setValue('admin', false, 'create'))\r\n    const [adminUpdate, setAdminUpdate] = useState(setValue('admin', false, 'update'))\r\n    const [adminRead, setAdminRead] = useState(setValue('admin', false, 'read'))\r\n    const [adminDelete, setAdminDelete] = useState(setValue('admin', false, 'delete'))\r\n\r\n    const [roleCreate, setRoleCreate] = useState(setValue('role', false, 'create'))\r\n    const [roleUpdate, setRoleUpdate] = useState(setValue('role', false, 'update'))\r\n    const [roleRead, setRoleRead] = useState(setValue('role', false, 'read'))\r\n    const [roleDelete, setRoleDelete] = useState(setValue('role', false, 'delete'))\r\n\r\n\r\n    const [btnText, setBtnText] = useState(text)\r\n\r\n\r\n    const isInputValid = name \r\n\r\n    const resetHandler = () => {\r\n        setName(role && role.name)\r\n        setJobCreate(setValue('job', false, 'create'))\r\n        setJobUpdate(setValue('job', false, 'update'))\r\n        setJobRead(setValue('job', false, 'read'))\r\n        setJobDelete(setValue('job', false, 'delete'))\r\n\r\n        setCandidateCreate(setValue('candidate', false, 'create'))\r\n        setCandidateUpdate(setValue('candidate', false, 'update'))\r\n        setCandidateRead(setValue('candidate', false, 'read'))\r\n        setCandidateDelete(setValue('candidate', false, 'delete'))\r\n\r\n        setAdminCreate(setValue('admin', false, 'create'))\r\n        setAdminUpdate(setValue('admin', false, 'update'))\r\n        setAdminRead(setValue('admin', false, 'read'))\r\n        setAdminDelete(setValue('admin', false, 'delete'))\r\n\r\n        setRoleCreate(setValue('role', false, 'create'))\r\n        setRoleUpdate(setValue('role', false, 'update'))\r\n        setRoleRead(setValue('role', false, 'read'))\r\n        setRoleDelete(setValue('role', false, 'delete'))\r\n\r\n        document.getElementById('name').focus()\r\n    }\r\n\r\n    const jobsInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:jobCreate,\r\n            setVal:setJobCreate\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:jobUpdate,\r\n            setVal:setJobUpdate\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:jobRead,\r\n            setVal:setJobRead\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:jobDelete,\r\n            setVal:setJobDelete\r\n        }\r\n    ]\r\n\r\n    const candidatesInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:candidateCreate,\r\n            setVal:setCandidateCreate\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:candidateUpdate,\r\n            setVal:setCandidateUpdate\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:candidateRead,\r\n            setVal:setCandidateRead\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:candidateDelete,\r\n            setVal:setCandidateDelete\r\n        }\r\n    ]\r\n\r\n    const adminsInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:adminCreate,\r\n            setVal:setAdminCreate\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:adminUpdate,\r\n            setVal:setAdminUpdate\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:adminRead,\r\n            setVal:setAdminRead\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:adminDelete,\r\n            setVal:setAdminDelete\r\n        }\r\n    ]\r\n\r\n    const rolesInputData = [\r\n        {\r\n            control: 'Create',\r\n            val:roleCreate,\r\n            setVal:setRoleCreate\r\n        },\r\n        {\r\n            control: 'Update',\r\n            val:roleUpdate,\r\n            setVal:setRoleUpdate\r\n        },\r\n        {\r\n            control: 'Read',\r\n            val:roleRead,\r\n            setVal:setRoleRead\r\n        },\r\n        {\r\n            control: 'Delete',\r\n            val:roleDelete,\r\n            setVal:setRoleDelete\r\n        }\r\n    ]\r\n\r\n    const renderTicks = (data) => {\r\n        return data.map(item => {\r\n            return <CheckBoxContainer key={v4()}>\r\n                <CheckBox {...item}/>\r\n                <CheckBoxText>{item.control}</CheckBoxText>\r\n            </CheckBoxContainer>\r\n        })\r\n    }\r\n\r\n    const sendDataHandler = async () => {\r\n        setBtnText(`${text}ing...`)\r\n        resetHandler()\r\n        const data = {\r\n            name,\r\n            permissions:{\r\n                job:{\r\n                    create: jobCreate,\r\n                    update: jobUpdate,\r\n                    read: jobRead,\r\n                    delete: jobDelete\r\n                },\r\n\r\n                candidate:{\r\n                    create: candidateCreate,\r\n                    update: candidateUpdate,\r\n                    read: candidateRead,\r\n                    delete: candidateDelete\r\n                },\r\n                admin:{\r\n                    create: adminCreate,\r\n                    update: adminUpdate,\r\n                    read: adminRead,\r\n                    delete: adminDelete\r\n                },\r\n                role:{\r\n                    create: roleCreate,\r\n                    update: roleUpdate,\r\n                    read: roleRead,\r\n                    delete: roleDelete\r\n                },\r\n\r\n            }\r\n        }\r\n        console.log(data)\r\n        const request = type === 'edit' ? axios.patch(`${API_URI}role/${id}`, data, {headers}) : axios.post(`${API_URI}role`, data, {headers})\r\n        try {\r\n            const response = await request\r\n            setIsDataChanged(true)\r\n            toast.success('Role Added succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setBtnText(text)\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error('Error in adding role', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setBtnText(text)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const Buttons = (\r\n        <div>\r\n            <Btn color={statuscolors.failed} onClick={resetHandler}>Reset</Btn>\r\n            <Btn color={statuscolors.success} disabled={!isInputValid} onClick={sendDataHandler}>{btnText}</Btn>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <ContentContainer title={`${text} Role`}>\r\n\r\n            <Controls title={`${text} Controls`}>\r\n                {Buttons}\r\n            </Controls>\r\n\r\n            <Card>\r\n                <Section>\r\n                    <CardTitle>Role Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Role Name</Label>\r\n                        <Input id=\"name\" value={name} onChange={(e) => setName(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n\r\n                    <PermissionContainer>\r\n\r\n                    <InputContainer>\r\n                        <Label>Job Permissions</Label>\r\n                        {renderTicks(jobsInputData)}\r\n                    </InputContainer>\r\n\r\n                    <InputContainer>\r\n                        <Label>Candidate Permissions</Label>\r\n                        {renderTicks(candidatesInputData)}\r\n                    </InputContainer>\r\n\r\n                    <InputContainer>\r\n                        <Label>Admin Permissions</Label>\r\n                        {renderTicks(adminsInputData)}\r\n                    </InputContainer>\r\n\r\n                    <InputContainer>\r\n                        <Label>Role Permissions</Label>\r\n                        {renderTicks(rolesInputData)}\r\n                    </InputContainer>\r\n\r\n                    </PermissionContainer>\r\n\r\n                </Section>\r\n\r\n                \r\n            </Card>\r\n\r\n            {isDataChanged && <Redirect to=\"/roles\" />}\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default InputRolesDetails\r\n\r\nconst PermissionContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n\r\n        font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: stretch;\r\n    align-items: center;\r\n    \r\n`\r\n\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    border: 1px solid ${themeColor};\r\n    background-color: ${themeColor};\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor}\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n    flex: 1;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    border:1px dashed ${statuscolors.reviewBg};   \r\n    padding: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${themeColor};\r\n    color: ${themeColor};\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`\r\n\r\n\r\n\r\n//added\r\nconst Section = styled.div`\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst EmptyMessage = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed};\r\n`\r\n\r\nconst CheckBoxText = styled.p`\r\n    ${noSpaces}\r\n    font-weight: bold;\r\n    margin-left: 10px;\r\n\r\n`\r\n\r\nconst CheckBoxContainer = styled.div`\r\n    padding: 3px 0px;\r\n    width: fit-content;\r\n    display: flex;\r\n    align-items: center;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport Table from '../Components/Table'\r\nimport { API_URI } from '../Endpoint'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveAllAdmins, searchAdmins, saveCurrentAdmin } from '../Actions/AdminActions'\r\nimport { Card, StyledButton } from '../Common/Styles/StyledComponents'\r\nimport { useGetData, useSearch, useResetState } from '../Hooks/getData'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { saveAllRoles } from '../Actions/RoleActions'\r\n\r\nfunction AdminsPage() {\r\n    \r\n    useResetState(saveCurrentAdmin)\r\n    useResetState(saveAllRoles)\r\n\r\n    const [searchVal, setSearchVal] = useState()\r\n    useGetData(`${API_URI}admins`, saveAllAdmins)\r\n    useSearch(searchVal, searchAdmins)\r\n\r\n    const {admins, filteredAdmins } = useSelector(state => state.adminsData)\r\n    console.log(admins)\r\n    const currentData = searchVal === undefined ? admins : filteredAdmins\r\n    console.log(currentData)\r\n    const params = {\r\n        data: currentData,\r\n        route: 'admin',\r\n        titles: ['Username', 'Role Assigned', 'Posted on'],\r\n        fields: ['username', 'role'],\r\n        setSearchVal\r\n    }\r\n    // useEffect(() => {\r\n    //     dispatch(saveCurrentAdmin(null))\r\n\r\n    // }, [currentData])\r\n\r\n    return (\r\n        <ContentContainer\r\n            title=\"Admins\"\r\n            value2={<Link to=\"/admin/add\">Add Admin</Link>}\r\n            justify=\"space-between\"\r\n        >\r\n            <Card>\r\n                <Table {...params} />\r\n            </Card>\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default AdminsPage\r\n\r\nconst Link = styled(NavLink)`\r\n    ${StyledButton}\r\n    padding: 5px 10px;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    border-radius: 0px;\r\n\r\n`","import React, { useState } from 'react'\r\nimport ContentContainer from './ContentContainer'\r\nimport Controls from './Controls'\r\nimport { Btn, statuscolors, themeColor, Card, CardTitle, Title, noSpaces } from '../Common/Styles/StyledComponents'\r\nimport { toast } from '../Components/Toast'\r\nimport axios from 'axios'\r\nimport { API_URI } from '../Endpoint'\r\nimport CloseSVG from '../Assets/Icons/close.svg'\r\nimport styled, { css } from 'styled-components'\r\nimport { Capitalize } from '../Common/Functions/helperFunctions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport CheckBox from './CheckBox'\r\nimport { useGetData, useSearch, useHeaders } from '../Hooks/getData'\r\nimport { saveAllAdmins, saveCurrentAdmin } from '../Actions/AdminActions'\r\nimport { saveAllRoles, searchRoles } from '../Actions/RoleActions'\r\nimport Table from './Table'\r\n\r\n\r\nfunction InputAdminsDetails({ match }) {\r\n\r\n    const path = match.path\r\n    const [searchVal, setSearchVal] = useState()\r\n\r\n    const type = path.split('/')[2]\r\n    const id = type === 'edit' ? match.params.id : ''\r\n    useGetData(`${API_URI}admin/${id}`, saveCurrentAdmin)\r\n    useGetData(`${API_URI}roles`, saveAllRoles)\r\n    useSearch(searchVal, searchRoles)\r\n\r\n    const headers = useHeaders()\r\n\r\n    const { admin } = useSelector(state => state.adminsData)\r\n    console.log(admin)\r\n    const { roles, filteredRoles } = useSelector(state => state.rolesData)\r\n    let currentData = searchVal === undefined ? roles : filteredRoles\r\n\r\n    console.log(roles)\r\n    const [username, setUsername] = useState(admin && admin.username)\r\n    const [password, setPassword] = useState(admin && admin.password)\r\n    const text = Capitalize(type)\r\n\r\n    const setValue = (field, defaultVal, field2) => {\r\n        if(admin && type === 'edit'){\r\n            // return role.permissions[field][field2]\r\n        }\r\n\r\n        return defaultVal\r\n    }\r\n\r\n    const [isDataChanged, setIsDataChanged] = useState(false)\r\n    const [selectedRole, setSelectedRole] = useState(admin && admin.role_id)\r\n \r\n\r\n    const [btnText, setBtnText] = useState(text)\r\n\r\n\r\n    const isInputValid = username && password && selectedRole \r\n\r\n    const resetHandler = () => {\r\n    \r\n        document.getElementById('username').focus()\r\n    }\r\n\r\n    \r\n    const sendDataHandler = async () => {\r\n        setBtnText(`${text}ing...`)\r\n        resetHandler()\r\n        const data = {\r\n            username,\r\n            password,\r\n            role_id: selectedRole\r\n        }\r\n        console.log(data)\r\n        const request = type === 'edit' ? axios.patch(`${API_URI}admin/${id}`, data, {headers}) : axios.post(`${API_URI}admin`, data , {headers})\r\n        try {\r\n            const response = await request\r\n            setIsDataChanged(true)\r\n            toast.success('Admin Added succesfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setBtnText(text)\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error('Error in adding admin', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            setBtnText(text)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const Buttons = (\r\n        <div>\r\n            <Btn color={statuscolors.failed} onClick={resetHandler}>Reset</Btn>\r\n            <Btn color={statuscolors.success} disabled={!isInputValid} onClick={sendDataHandler}>{btnText}</Btn>\r\n        </div>\r\n    )\r\n\r\n    const params = {\r\n        data: currentData,\r\n        route: 'role',\r\n        titles: ['Role Name', 'Posted on'],\r\n        fields: ['name'],\r\n        setSearchVal,\r\n        stop: true,\r\n        selected: setSelectedRole,\r\n    }\r\n\r\n    return (\r\n        <ContentContainer title={`${text} Admin`}>\r\n\r\n            <Controls title={`${text} Controls`}>\r\n                {Buttons}\r\n            </Controls>\r\n\r\n            <Card>\r\n                <Section>\r\n                    <CardTitle>Admin Details</CardTitle>\r\n                    <InputContainer>\r\n                        <Label>Username</Label>\r\n                        <Input id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} type=\"text\" />\r\n                        <Label>Password</Label>\r\n                        <Input value={password} onChange={(e) => setPassword(e.target.value)} type=\"text\" />\r\n                    </InputContainer>\r\n                </Section>\r\n            </Card>\r\n        \r\n            <Card>\r\n                <Table {...params} />\r\n            </Card>\r\n\r\n            {isDataChanged && <Redirect to=\"/admins\" />}\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default InputAdminsDetails\r\n\r\nconst PermissionContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    margin: 0px 0px 0px 0px;\r\n`\r\nconst Label = styled.label`\r\n    /* font-weight: bold; */\r\n    color: grey;\r\n`\r\n\r\nconst InputStyles = css`\r\n    padding: 5px 12px;\r\n    margin: 10px 0px 0px 0px;\r\n    border: 1px solid #00000017;\r\n    border-radius: 5px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Textarea = styled.textarea`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\nconst Input = styled.input`\r\n    ${InputStyles}\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst InfoCardContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst InputWithButton = styled.form`\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: stretch;\r\n    align-items: center;\r\n    \r\n`\r\n\r\n\r\nconst AddButton = styled.button`\r\n    border-style: none;\r\n    color: white;\r\n    border: 1px solid ${themeColor};\r\n    background-color: ${themeColor};\r\n    padding: 5px 8px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: ${themeColor}\r\n    }\r\n    border-radius: 0px 5px 5px 0px;\r\n`\r\n\r\nconst CustomInput = styled.input`\r\n    ${InputStyles}\r\n    margin: 0px;\r\n    flex: 1;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 3px 0px;\r\n    border-radius: 0px;\r\n    border-style: none;\r\n    border-bottom: 1px solid #00000017;\r\n    transition: all 0.5s;\r\n    &:focus{\r\n    border-bottom: 1px solid ${themeColor};\r\n        \r\n    }\r\n`\r\n\r\nconst RequirementCard = styled(Card)`\r\n    height: 270px;\r\n    width: 200px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst Ul = styled.ul`\r\n    border:1px dashed ${statuscolors.reviewBg};   \r\n    padding: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Element = styled.li`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0px 10px 10px 0px;\r\n    padding:2px 10px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${themeColor};\r\n    color: ${themeColor};\r\n    width: fit-content;\r\n`\r\n\r\nconst ElementP = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst CustomLabel = styled(CardTitle)`\r\n    background-color: white;\r\n    position: sticky;\r\n    top: 0;\r\n`\r\n\r\n\r\nconst MainTitle = styled(Title)`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`\r\n\r\nconst ControlCard = styled(Card)`\r\nposition: sticky;\r\ntop: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 20px;\r\n\r\n`\r\n\r\n\r\n\r\n//added\r\nconst Section = styled.div`\r\n    /* padding-bottom: 40px; */\r\n`\r\n\r\nconst EmptyMessage = styled.p`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${statuscolors.failed};\r\n`\r\n\r\nconst CheckBoxText = styled.p`\r\n    ${noSpaces}\r\n    font-weight: bold;\r\n    margin-left: 10px;\r\n\r\n`\r\n\r\nconst CheckBoxContainer = styled.div`\r\n    padding: 3px 0px;\r\n    width: fit-content;\r\n    display: flex;\r\n    align-items: center;\r\n`","import React, { useState } from 'react'\r\nimport CheckBox from '../Components/CheckBox'\r\nimport ContentContainer from '../Components/ContentContainer'\r\nimport { Card, EditNav, EditBtn, DeleteBtn, CardTitle } from '../Common/Styles/StyledComponents'\r\nimport { API_URI } from '../Endpoint'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useGetData, useHeaders } from '../Hooks/getData'\r\nimport { useSelector } from 'react-redux'\r\nimport Tabs from '../Components/Tabs'\r\nimport RoleInfo from '../Components/RoleInfo'\r\nimport { saveCurrentAdmin } from '../Actions/AdminActions'\r\nimport Loader from '../Components/Loader'\r\n\r\nfunction AdminPage({match}) {\r\n    const headers = useHeaders()\r\n    const [isDeleted, setIsDeleted] = useState(false)\r\n    const id = match.params.id\r\n    const {data} = useSelector(state => state.authData)\r\n    const permissions = data && data.authData.role_id.permissions\r\n\r\n    useGetData(`${API_URI}admin/${id}`, saveCurrentAdmin)\r\n    const {admin} = useSelector(state => state.adminsData)\r\n    if(admin){\r\n        console.log(admin.role_id)\r\n    }\r\n\r\n    const deleteHandler = async () => {\r\n        try {\r\n            await axios.delete(`${API_URI}admin/${id}`, {headers})\r\n            setIsDeleted(true)\r\n        } catch (err) {\r\n            console.log(err)\r\n            setIsDeleted(false)\r\n        }\r\n    }\r\n\r\n    const Buttons = (\r\n        <div>\r\n            {permissions && permissions.role.update ? <EditNav to={`/admin/edit/${id}`}><EditBtn>Edit</EditBtn></EditNav> : null}\r\n            {permissions && permissions.role.delete ? <DeleteBtn onClick={deleteHandler} >Delete</DeleteBtn> : null}\r\n        </div>\r\n    )\r\n\r\n\r\n    return (\r\n        <ContentContainer\r\n            title={admin ? admin.username : <Loader/>}\r\n            value2={Buttons}\r\n            justify=\"space-between\"\r\n        >\r\n\r\n\r\n           {admin && <Card>\r\n            \r\n                <CardTitle>{admin.role_id.name}</CardTitle>\r\n                <RoleInfo role={admin.role_id}/>\r\n\r\n            </Card>}\r\n            \r\n            {isDeleted && <Redirect to=\"/admins\" />}\r\n        </ContentContainer>\r\n    )\r\n}\r\n\r\nexport default AdminPage\r\n\r\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport JobsPage from './Pages/JobsPage';\nimport CandidatePage from './Pages/CandidatePage';\nimport NavBar from './Components/NavBar';\nimport styled from 'styled-components'\nimport SideBar from './Components/SideBar';\nimport DashboardPage from './Pages/DashboardPage';\nimport AppliedJobList from './Pages/AppliedJobList';\nimport SignInPage from './Pages/SignInPage';\nimport { useSelector } from 'react-redux';\nimport ProfilePage from './Pages/ProfilePage';\nimport JobPage from './Pages/JobPage';\nimport InputJobDetails from './Components/InputJobDetails';\nimport CandidatesPage from './Pages/CandidatesPage';\nimport RolesPage from './Pages/RolesPage';\nimport RolePage from './Pages/RolePage';\nimport InputRolesDetails from './Components/InputRolesDetails';\nimport AdminsPage from './Pages/AdminsPage';\nimport InputAdminsDetails from './Components/InputAdminsDetails';\nimport AdminPage from './Pages/AdminPage';\n\n\n\nfunction App() {\n\n  const { isAuthenticated } = useSelector(state => state.authData)\n\n  const renderRoutes = () => {\n    return <>\n\n      <NavBar />\n      <MainDiv>\n        <SideBar />\n        <RightSideBar>\n\n\n          <Switch>\n            <Route path=\"/\" exact component={DashboardPage} />\n\n            <Route path=\"/job/post\" component={InputJobDetails} />\n            <Route path=\"/job/edit/:id\" component={InputJobDetails} />\n\n            <Route path=\"/role/add\" component={InputRolesDetails} />\n            <Route path=\"/role/edit/:id\" component={InputRolesDetails} />\n\n            <Route path=\"/admin/add\" component={InputAdminsDetails} />\n            <Route path=\"/admin/edit/:id\" component={InputAdminsDetails} />\n\n            <Route path=\"/jobs\" component={JobsPage} />\n            <Route path=\"/job/:id\" component={JobPage} />\n            <Route path=\"/candidate/:id\" component={CandidatePage} />\n\n            <Route path=\"/applied-jobs/:id\" component={AppliedJobList} />\n\n            <Route path=\"/candidates\" component={CandidatesPage} />\n            <Route path=\"/profile\" component={ProfilePage} />\n            <Route path=\"/roles\" component={RolesPage} />\n            <Route path=\"/role/:id\" component={RolePage} />\n            <Route path=\"/admins\" component={AdminsPage} />\n            <Route path=\"/admin/:id\" component={AdminPage} />\n\n\n\n\n\n          </Switch>\n        </RightSideBar>\n\n      </MainDiv>\n    </>\n  }\n\n  const renderSignin = () => {\n    return <Route path=\"/\" component={SignInPage} />\n  }\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {isAuthenticated ? renderRoutes() : renderSignin()}\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n\nconst MainDiv = styled.div`\n  background-color: #276eb012;\n  display: flex;\n  width: 100%;\n  height: 92vh;\n  overflow: auto;\n`\nconst ComponentContainer = styled.div`\n  padding: 15px;\n`\n\nconst RightSideBar = styled.div`\n  width:100%;\n  overflow-y: scroll;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { jobTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    jobs: null,\r\n    job: null,\r\n    filteredJobs: undefined,\r\n}\r\n\r\nconst JobsReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case jobTypes.SAVE_ALL_JOBS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                jobs: payload\r\n            }\r\n\r\n\r\n        case jobTypes.SAVE_CURRENT_JOB:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                job: payload\r\n            }\r\n\r\n        case jobTypes.FILTER_SEARCH_JOBS:\r\n\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.jobs.filter(item => {\r\n                return item.title.toLowerCase().includes(searchVal)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredJobs: filterTemp\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default JobsReducer","import { candidateTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    candidates: null,\r\n    candidate: null,\r\n    filteredcandidates: undefined\r\n}\r\n\r\nconst CandidatesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case candidateTypes.SAVE_ALL_CANDIDATES:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidates: payload\r\n            }\r\n\r\n        case candidateTypes.SAVE_CURRENT_CANDIDATE:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                candidate: payload\r\n            }\r\n\r\n        case candidateTypes.FILTER_SEARCH_CANDITATE:\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.candidates.filter(item => {\r\n                return item.name.toLowerCase().includes(searchVal)\r\n            })\r\n            console.log(filterTemp)\r\n\r\n            return {\r\n                ...state,\r\n                filteredcandidates: filterTemp\r\n            }\r\n\r\n        case candidateTypes.CHANGE_STATUS:\r\n            console.log(payload)\r\n            let TEMP = { ...state.candidate }\r\n            TEMP.jobs[0].status = payload\r\n            return {\r\n                ...state,\r\n                candidate: TEMP\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default CandidatesReducer","import { authTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    data: null\r\n}\r\n\r\nconst AuthReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case authTypes.AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n\r\n        case authTypes.SAVE_DATA:\r\n            return {\r\n                ...state,\r\n                data: payload\r\n             }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import { rolesTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    roles: null,\r\n    role: null,\r\n    filteredRoles: undefined,\r\n}\r\n\r\nconst RolesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case rolesTypes.SAVE_ALL_ROLES:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                roles: payload\r\n            }\r\n\r\n\r\n        case rolesTypes.SAVE_CURRENT_ROLE:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                role: payload\r\n            }\r\n\r\n        case rolesTypes.FILTER_SEARCH_ROLES:\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.roles.filter(item => {\r\n                return item.name.toLowerCase().includes(searchVal)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredRoles: filterTemp\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default RolesReducer","import { adminTypes } from '../ActionTypes/ActionTypes'\r\n\r\nconst initialState = {\r\n    admins: null,\r\n    admin: null,\r\n    filteredAdmin: undefined,\r\n\r\n    assignedRoles: [],\r\n    assignedRole: null,\r\n\r\n}\r\n\r\nconst AdminsReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case adminTypes.SAVE_ALL_ADMINS:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                admins: payload\r\n            }\r\n\r\n\r\n        case adminTypes.SAVE_CURRENT_ADMIN:\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                admin: payload\r\n            }\r\n\r\n        case adminTypes.FILTER_SEARCH_ADMINS:\r\n            const searchVal = payload.toLowerCase()\r\n            console.log(searchVal)\r\n            const filterTemp = state.admins.filter(item => {\r\n                return item.username.toLowerCase().includes(searchVal)\r\n            })\r\n            return {\r\n                ...state,\r\n                filteredAdmins: filterTemp\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AdminsReducer","import JobsReducer from './JobsReducer'\r\nimport CandidateReducer from './CandidatesReducer'\r\nimport AuthReducer from './AuthReducer'\r\nimport { combineReducers } from 'redux'\r\nimport RolesReducer from './RolesReducer'\r\nimport AdminsReducer from './AdminsReducer'\r\n\r\nconst RootReducer = combineReducers({\r\n    jobsData: JobsReducer,\r\n    candidateData: CandidateReducer,\r\n    authData: AuthReducer,\r\n    rolesData: RolesReducer,\r\n    adminsData:AdminsReducer \r\n})\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport RootReducer from './Reducers/RootReducer';\n\nconst store = createStore(RootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}